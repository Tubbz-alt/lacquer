Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Unused terminals:

    PARTITIONS
    SOME
    CAST
    PUBLIC
    TRY
    UNNEST
    NFKC
    NFKD
    START
    DISTRIBUTED
    OVER
    ANALYZE
    TEXT
    ROWS
    WITH
    POISSONIZED
    COLUMNS
    ORDINALITY
    WRITE
    VIEW
    OPTION
    COALESCE
    COLUMN
    TIMESTAMP
    GROUPING
    SYSTEM
    NFC
    TYPE
    CREATE
    DATA
    ANY
    CONSTRAINT
    APPROXIMATE
    STRATIFY
    UNCOMMITTED
    RECURSIVE
    NUMBER
    ROLLBACK
    SERIALIZABLE
    FOLLOWING
    LOGICAL
    INSERT
    DATE
    ADD
    SET
    READ
    DIVIDE
    PARTITION
    NFD
    LEVEL
    SESSION
    SHOW
    POSITION
    ROW
    CURRENT
    PRIVILEGES
    AT
    NULLIF
    CUBE
    REPEATABLE
    IF
    GRAPHVIZ
    FOR
    SUBSTRING
    CALL
    DROP
    USE
    COMMENT
    RESET
    SCHEMAS
    TIMES
    NORMALIZE
    BERNOULLI
    INTO
    SETS
    TABLES
    TRY_CAST
    ARRAY
    REPLACE
    ALTER
    EXPLAIN
    ISOLATION
    MAP
    COMMIT
    GRANT
    RENAME
    NO
    RESCALED
    COMMITTED
    UNBOUNDED
    SEMI
    PRECEDING
    TABLESAMPLE
    FORMAT
    ESCAPE
    ROLLUP
    DESCRIBE
    FUNCTIONS
    CATALOGS
    TRANSACTION
    CONFIDENCE
    WORK
    RANGE
    ONLY
    DELETE
    EXTRACT

Grammar

Rule 0     S' -> statement
Rule 1     statement -> query
Rule 2     subquery -> LPAREN query RPAREN
Rule 3     query -> query_no_with
Rule 4     query_no_with -> query_term order_by_opt limit_opt
Rule 5     order_by_opt -> ORDER BY sort_items
Rule 6     order_by_opt -> empty
Rule 7     sort_items -> sort_item
Rule 8     sort_items -> sort_items COMMA sort_item
Rule 9     sort_item -> expression order_opt null_ordering_opt
Rule 10    order_opt -> ASC
Rule 11    order_opt -> DESC
Rule 12    order_opt -> empty
Rule 13    null_ordering_opt -> NULLS FIRST
Rule 14    null_ordering_opt -> NULLS LAST
Rule 15    null_ordering_opt -> empty
Rule 16    limit_opt -> LIMIT INTEGER
Rule 17    limit_opt -> LIMIT ALL
Rule 18    limit_opt -> empty
Rule 19    query_term -> query_term_intersect
Rule 20    query_term -> query_term UNION set_quantifier_opt query_term_intersect
Rule 21    query_term -> query_term EXCEPT set_quantifier_opt query_term_intersect
Rule 22    query_term_intersect -> nonjoin_query_primary
Rule 23    query_term_intersect -> query_term_intersect INTERSECT set_quantifier_opt nonjoin_query_primary
Rule 24    nonjoin_query_primary -> simple_table
Rule 25    nonjoin_query_primary -> LPAREN query_term RPAREN
Rule 26    simple_table -> query_specification
Rule 27    simple_table -> explicit_table
Rule 28    simple_table -> table_value_constructor
Rule 29    explicit_table -> TABLE qualified_name
Rule 30    table_value_constructor -> VALUES values_list
Rule 31    values_list -> values_list COMMA expression
Rule 32    values_list -> expression
Rule 33    query_specification -> SELECT set_quantifier_opt adql_top_opt select_items table_expression_opt
Rule 34    adql_top_opt -> TOP INTEGER
Rule 35    adql_top_opt -> empty
Rule 36    where_opt -> WHERE search_condition
Rule 37    where_opt -> empty
Rule 38    group_by_opt -> GROUP BY grouping_elements
Rule 39    group_by_opt -> empty
Rule 40    grouping_elements -> qualified_name
Rule 41    grouping_elements -> grouping_elements COMMA qualified_name
Rule 42    having_opt -> HAVING search_condition
Rule 43    having_opt -> empty
Rule 44    set_quantifier_opt -> DISTINCT
Rule 45    set_quantifier_opt -> ALL
Rule 46    set_quantifier_opt -> empty
Rule 47    select_items -> select_item
Rule 48    select_items -> select_items COMMA select_item
Rule 49    select_item -> derived_column
Rule 50    select_item -> all_columns
Rule 51    derived_column -> value_expression alias_opt
Rule 52    all_columns -> ASTERISK
Rule 53    table_expression_opt -> FROM relations where_opt group_by_opt having_opt
Rule 54    table_expression_opt -> empty
Rule 55    relations -> relations COMMA table_reference
Rule 56    relations -> table_reference
Rule 57    table_reference -> table_primary
Rule 58    table_reference -> join_relation
Rule 59    table_primary -> aliased_relation
Rule 60    table_primary -> derived_table
Rule 61    table_primary -> LPAREN join_relation RPAREN
Rule 62    join_relation -> cross_join
Rule 63    join_relation -> qualified_join
Rule 64    join_relation -> natural_join
Rule 65    cross_join -> table_reference CROSS JOIN aliased_relation
Rule 66    qualified_join -> table_reference join_type JOIN table_reference join_criteria
Rule 67    natural_join -> table_reference NATURAL join_type JOIN aliased_relation
Rule 68    join_type -> INNER
Rule 69    join_type -> LEFT outer_opt
Rule 70    join_type -> RIGHT outer_opt
Rule 71    join_type -> FULL outer_opt
Rule 72    join_type -> empty
Rule 73    outer_opt -> OUTER
Rule 74    outer_opt -> empty
Rule 75    join_criteria -> ON search_condition
Rule 76    join_criteria -> USING LPAREN join_columns RPAREN
Rule 77    join_columns -> identifier
Rule 78    join_columns -> join_columns COMMA identifier
Rule 79    aliased_relation -> qualified_name alias_opt
Rule 80    derived_table -> subquery alias
Rule 81    alias_opt -> alias
Rule 82    alias_opt -> empty
Rule 83    alias -> as_opt identifier
Rule 84    expression -> search_condition
Rule 85    search_condition -> boolean_term
Rule 86    search_condition -> search_condition OR boolean_term
Rule 87    boolean_term -> boolean_factor
Rule 88    boolean_term -> boolean_term AND boolean_factor
Rule 89    boolean_factor -> not_opt boolean_test
Rule 90    boolean_test -> boolean_primary
Rule 91    boolean_primary -> predicate
Rule 92    boolean_primary -> parenthetic_expression
Rule 93    parenthetic_expression -> RPAREN expression RPAREN
Rule 94    predicate -> comparison_predicate
Rule 95    predicate -> between_predicate
Rule 96    predicate -> in_predicate
Rule 97    predicate -> like_predicate
Rule 98    predicate -> null_predicate
Rule 99    predicate -> exists_predicate
Rule 100   comparison_predicate -> value_expression comparison_operator value_expression
Rule 101   between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression
Rule 102   in_predicate -> value_expression not_opt IN in_value
Rule 103   in_value -> LPAREN in_expressions RPAREN
Rule 104   in_expressions -> value_expression
Rule 105   in_expressions -> in_expressions COMMA value_expression
Rule 106   like_predicate -> value_expression not_opt LIKE value_expression
Rule 107   null_predicate -> value_expression IS not_opt NULL
Rule 108   exists_predicate -> EXISTS subquery
Rule 109   value_expression -> value_expression PLUS term
Rule 110   value_expression -> value_expression MINUS term
Rule 111   value_expression -> term
Rule 112   term -> term ASTERISK factor
Rule 113   term -> term SLASH factor
Rule 114   term -> term PERCENT factor
Rule 115   term -> term CONCAT factor
Rule 116   term -> factor
Rule 117   factor -> sign_opt primary_expression
Rule 118   primary_expression -> parenthetic_primary_expression
Rule 119   primary_expression -> base_primary_expression
Rule 120   parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN
Rule 121   base_primary_expression -> NULL
Rule 122   base_primary_expression -> number
Rule 123   base_primary_expression -> boolean_value
Rule 124   base_primary_expression -> STRING
Rule 125   base_primary_expression -> interval
Rule 126   base_primary_expression -> identifier STRING
Rule 127   base_primary_expression -> qualified_name
Rule 128   base_primary_expression -> function_call
Rule 129   base_primary_expression -> date_time
Rule 130   base_primary_expression -> case_specification
Rule 131   base_primary_expression -> subquery
Rule 132   function_call -> qualified_name LPAREN call_list RPAREN
Rule 133   case_specification -> simple_case
Rule 134   case_specification -> searched_case
Rule 135   simple_case -> CASE value_expression when_clauses else_opt END
Rule 136   searched_case -> CASE when_clauses else_opt END
Rule 137   when_clauses -> when_clauses when_clause
Rule 138   when_clauses -> when_clause
Rule 139   when_clause -> WHEN search_condition THEN value_expression
Rule 140   else_opt -> ELSE value_expression
Rule 141   else_opt -> empty
Rule 142   call_list -> call_list COMMA value_expression
Rule 143   call_list -> value_expression
Rule 144   general_literal -> STRING
Rule 145   general_literal -> interval
Rule 146   date_time -> CURRENT_DATE
Rule 147   date_time -> CURRENT_TIME integer_param_opt
Rule 148   date_time -> CURRENT_TIMESTAMP integer_param_opt
Rule 149   date_time -> LOCALTIME integer_param_opt
Rule 150   date_time -> LOCALTIMESTAMP integer_param_opt
Rule 151   timezone_specifier -> TIME ZONE interval
Rule 152   timezone_specifier -> TIME ZONE STRING
Rule 153   comparison_operator -> EQ
Rule 154   comparison_operator -> NE
Rule 155   comparison_operator -> LT
Rule 156   comparison_operator -> LE
Rule 157   comparison_operator -> GT
Rule 158   comparison_operator -> GE
Rule 159   as_opt -> AS
Rule 160   as_opt -> empty
Rule 161   not_opt -> NOT
Rule 162   not_opt -> empty
Rule 163   boolean_value -> TRUE
Rule 164   boolean_value -> FALSE
Rule 165   interval -> INTERVAL sign_opt STRING interval_field interval_end_opt
Rule 166   interval_end_opt -> TO interval_field
Rule 167   interval_end_opt -> empty
Rule 168   interval_field -> YEAR
Rule 169   interval_field -> MONTH
Rule 170   interval_field -> DAY
Rule 171   interval_field -> HOUR
Rule 172   interval_field -> MINUTE
Rule 173   interval_field -> SECOND
Rule 174   sign_opt -> sign
Rule 175   sign_opt -> empty
Rule 176   sign -> PLUS
Rule 177   sign -> MINUS
Rule 178   table_element -> IDENTIFIER type
Rule 179   type -> base_type integer_param_opt
Rule 180   integer_param_opt -> LPAREN INTEGER RPAREN
Rule 181   integer_param_opt -> empty
Rule 182   base_type -> IDENTIFIER
Rule 183   qualified_name -> qualified_name PERIOD identifier
Rule 184   qualified_name -> identifier
Rule 185   identifier -> IDENTIFIER
Rule 186   identifier -> quoted_identifier
Rule 187   identifier -> non_reserved
Rule 188   identifier -> DIGIT_IDENTIFIER
Rule 189   non_reserved -> NON_RESERVED
Rule 190   quoted_identifier -> QUOTED_IDENTIFIER
Rule 191   quoted_identifier -> BACKQUOTED_IDENTIFIER
Rule 192   number -> DECIMAL
Rule 193   number -> INTEGER
Rule 194   empty -> <empty>

Terminals, with rules where they appear

ADD                  : 
ALL                  : 17 45
ALTER                : 
ANALYZE              : 
AND                  : 88 101
ANY                  : 
APPROXIMATE          : 
ARRAY                : 
AS                   : 159
ASC                  : 10
ASTERISK             : 52 112
AT                   : 
BACKQUOTED_IDENTIFIER : 191
BERNOULLI            : 
BETWEEN              : 101
BY                   : 5 38
CALL                 : 
CASE                 : 135 136
CAST                 : 
CATALOGS             : 
COALESCE             : 
COLUMN               : 
COLUMNS              : 
COMMA                : 8 31 41 48 55 78 105 142
COMMENT              : 
COMMIT               : 
COMMITTED            : 
CONCAT               : 115
CONFIDENCE           : 
CONSTRAINT           : 
CREATE               : 
CROSS                : 65
CUBE                 : 
CURRENT              : 
CURRENT_DATE         : 146
CURRENT_TIME         : 147
CURRENT_TIMESTAMP    : 148
DATA                 : 
DATE                 : 
DAY                  : 170
DECIMAL              : 192
DELETE               : 
DESC                 : 11
DESCRIBE             : 
DIGIT_IDENTIFIER     : 188
DISTINCT             : 44
DISTRIBUTED          : 
DIVIDE               : 
DROP                 : 
ELSE                 : 140
END                  : 135 136
EQ                   : 153
ESCAPE               : 
EXCEPT               : 21
EXISTS               : 108
EXPLAIN              : 
EXTRACT              : 
FALSE                : 164
FIRST                : 13
FOLLOWING            : 
FOR                  : 
FORMAT               : 
FROM                 : 53
FULL                 : 71
FUNCTIONS            : 
GE                   : 158
GRANT                : 
GRAPHVIZ             : 
GROUP                : 38
GROUPING             : 
GT                   : 157
HAVING               : 42
HOUR                 : 171
IDENTIFIER           : 178 182 185
IF                   : 
IN                   : 102
INNER                : 68
INSERT               : 
INTEGER              : 16 34 180 193
INTERSECT            : 23
INTERVAL             : 165
INTO                 : 
IS                   : 107
ISOLATION            : 
JOIN                 : 65 66 67
LAST                 : 14
LE                   : 156
LEFT                 : 69
LEVEL                : 
LIKE                 : 106
LIMIT                : 16 17
LOCALTIME            : 149
LOCALTIMESTAMP       : 150
LOGICAL              : 
LPAREN               : 2 25 61 76 103 120 132 180
LT                   : 155
MAP                  : 
MINUS                : 110 177
MINUTE               : 172
MONTH                : 169
NATURAL              : 67
NE                   : 154
NFC                  : 
NFD                  : 
NFKC                 : 
NFKD                 : 
NO                   : 
NON_RESERVED         : 189
NORMALIZE            : 
NOT                  : 161
NULL                 : 107 121
NULLIF               : 
NULLS                : 13 14
NUMBER               : 
ON                   : 75
ONLY                 : 
OPTION               : 
OR                   : 86
ORDER                : 5
ORDINALITY           : 
OUTER                : 73
OVER                 : 
PARTITION            : 
PARTITIONS           : 
PERCENT              : 114
PERIOD               : 183
PLUS                 : 109 176
POISSONIZED          : 
POSITION             : 
PRECEDING            : 
PRIVILEGES           : 
PUBLIC               : 
QUOTED_IDENTIFIER    : 190
RANGE                : 
READ                 : 
RECURSIVE            : 
RENAME               : 
REPEATABLE           : 
REPLACE              : 
RESCALED             : 
RESET                : 
RIGHT                : 70
ROLLBACK             : 
ROLLUP               : 
ROW                  : 
ROWS                 : 
RPAREN               : 2 25 61 76 93 93 103 120 132 180
SCHEMAS              : 
SECOND               : 173
SELECT               : 33
SEMI                 : 
SERIALIZABLE         : 
SESSION              : 
SET                  : 
SETS                 : 
SHOW                 : 
SLASH                : 113
SOME                 : 
START                : 
STRATIFY             : 
STRING               : 124 126 144 152 165
SUBSTRING            : 
SYSTEM               : 
TABLE                : 29
TABLES               : 
TABLESAMPLE          : 
TEXT                 : 
THEN                 : 139
TIME                 : 151 152
TIMES                : 
TIMESTAMP            : 
TO                   : 166
TOP                  : 34
TRANSACTION          : 
TRUE                 : 163
TRY                  : 
TRY_CAST             : 
TYPE                 : 
UNBOUNDED            : 
UNCOMMITTED          : 
UNION                : 20
UNNEST               : 
USE                  : 
USING                : 76
VALUES               : 30
VIEW                 : 
WHEN                 : 139
WHERE                : 36
WITH                 : 
WORK                 : 
WRITE                : 
YEAR                 : 168
ZONE                 : 151 152
error                : 

Nonterminals, with rules where they appear

adql_top_opt         : 33
alias                : 80 81
alias_opt            : 51 79
aliased_relation     : 59 65 67
all_columns          : 50
as_opt               : 83
base_primary_expression : 119 120
base_type            : 179
between_predicate    : 95
boolean_factor       : 87 88
boolean_primary      : 90
boolean_term         : 85 86 88
boolean_test         : 89
boolean_value        : 123
call_list            : 132 142
case_specification   : 130
comparison_operator  : 100
comparison_predicate : 94
cross_join           : 62
date_time            : 129
derived_column       : 49
derived_table        : 60
else_opt             : 135 136
empty                : 6 12 15 18 35 37 39 43 46 54 72 74 82 141 160 162 167 175 181
exists_predicate     : 99
explicit_table       : 27
expression           : 9 31 32 93
factor               : 112 113 114 115 116
function_call        : 128
general_literal      : 
group_by_opt         : 53
grouping_elements    : 38 41
having_opt           : 53
identifier           : 77 78 83 126 183 184
in_expressions       : 103 105
in_predicate         : 96
in_value             : 102
integer_param_opt    : 147 148 149 150 179
interval             : 125 145 151
interval_end_opt     : 165
interval_field       : 165 166
join_columns         : 76 78
join_criteria        : 66
join_relation        : 58 61
join_type            : 66 67
like_predicate       : 97
limit_opt            : 4
natural_join         : 64
non_reserved         : 187
nonjoin_query_primary : 22 23
not_opt              : 89 101 102 106 107
null_ordering_opt    : 9
null_predicate       : 98
number               : 122
order_by_opt         : 4
order_opt            : 9
outer_opt            : 69 70 71
parenthetic_expression : 92
parenthetic_primary_expression : 118
predicate            : 91
primary_expression   : 117
qualified_join       : 63
qualified_name       : 29 40 41 79 127 132 183
query                : 1 2
query_no_with        : 3
query_specification  : 26
query_term           : 4 20 21 25
query_term_intersect : 19 20 21 23
quoted_identifier    : 186
relations            : 53 55
search_condition     : 36 42 75 84 86 139
searched_case        : 134
select_item          : 47 48
select_items         : 33 48
set_quantifier_opt   : 20 21 23 33
sign                 : 174
sign_opt             : 117 165
simple_case          : 133
simple_table         : 24
sort_item            : 7 8
sort_items           : 5 8
statement            : 0
subquery             : 80 108 131
table_element        : 
table_expression_opt : 33
table_primary        : 57
table_reference      : 55 56 65 66 66 67
table_value_constructor : 28
term                 : 109 110 111 112 113 114 115
timezone_specifier   : 
type                 : 178
value_expression     : 51 100 100 101 101 101 102 104 105 106 106 107 109 110 135 139 140 142 143
values_list          : 30 31
when_clause          : 137 138
when_clauses         : 135 136 137
where_opt            : 53

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . query
    (3) query -> . query_no_with
    (4) query_no_with -> . query_term order_by_opt limit_opt
    (19) query_term -> . query_term_intersect
    (20) query_term -> . query_term UNION set_quantifier_opt query_term_intersect
    (21) query_term -> . query_term EXCEPT set_quantifier_opt query_term_intersect
    (22) query_term_intersect -> . nonjoin_query_primary
    (23) query_term_intersect -> . query_term_intersect INTERSECT set_quantifier_opt nonjoin_query_primary
    (24) nonjoin_query_primary -> . simple_table
    (25) nonjoin_query_primary -> . LPAREN query_term RPAREN
    (26) simple_table -> . query_specification
    (27) simple_table -> . explicit_table
    (28) simple_table -> . table_value_constructor
    (33) query_specification -> . SELECT set_quantifier_opt adql_top_opt select_items table_expression_opt
    (29) explicit_table -> . TABLE qualified_name
    (30) table_value_constructor -> . VALUES values_list

    LPAREN          shift and go to state 12
    SELECT          shift and go to state 13
    TABLE           shift and go to state 10
    VALUES          shift and go to state 3

    query_no_with                  shift and go to state 9
    simple_table                   shift and go to state 2
    query_specification            shift and go to state 5
    query_term_intersect           shift and go to state 1
    table_value_constructor        shift and go to state 14
    explicit_table                 shift and go to state 4
    query_term                     shift and go to state 11
    nonjoin_query_primary          shift and go to state 6
    statement                      shift and go to state 7
    query                          shift and go to state 8

state 1

    (19) query_term -> query_term_intersect .
    (23) query_term_intersect -> query_term_intersect . INTERSECT set_quantifier_opt nonjoin_query_primary

    UNION           reduce using rule 19 (query_term -> query_term_intersect .)
    EXCEPT          reduce using rule 19 (query_term -> query_term_intersect .)
    ORDER           reduce using rule 19 (query_term -> query_term_intersect .)
    LIMIT           reduce using rule 19 (query_term -> query_term_intersect .)
    $end            reduce using rule 19 (query_term -> query_term_intersect .)
    RPAREN          reduce using rule 19 (query_term -> query_term_intersect .)
    INTERSECT       shift and go to state 15


state 2

    (24) nonjoin_query_primary -> simple_table .

    INTERSECT       reduce using rule 24 (nonjoin_query_primary -> simple_table .)
    UNION           reduce using rule 24 (nonjoin_query_primary -> simple_table .)
    EXCEPT          reduce using rule 24 (nonjoin_query_primary -> simple_table .)
    ORDER           reduce using rule 24 (nonjoin_query_primary -> simple_table .)
    LIMIT           reduce using rule 24 (nonjoin_query_primary -> simple_table .)
    $end            reduce using rule 24 (nonjoin_query_primary -> simple_table .)
    RPAREN          reduce using rule 24 (nonjoin_query_primary -> simple_table .)


state 3

    (30) table_value_constructor -> VALUES . values_list
    (31) values_list -> . values_list COMMA expression
    (32) values_list -> . expression
    (84) expression -> . search_condition
    (85) search_condition -> . boolean_term
    (86) search_condition -> . search_condition OR boolean_term
    (87) boolean_term -> . boolean_factor
    (88) boolean_term -> . boolean_term AND boolean_factor
    (89) boolean_factor -> . not_opt boolean_test
    (161) not_opt -> . NOT
    (162) not_opt -> . empty
    (194) empty -> .

    NOT             shift and go to state 18
    RPAREN          reduce using rule 194 (empty -> .)
    EXISTS          reduce using rule 194 (empty -> .)
    PLUS            reduce using rule 194 (empty -> .)
    MINUS           reduce using rule 194 (empty -> .)
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    search_condition               shift and go to state 20
    boolean_factor                 shift and go to state 16
    empty                          shift and go to state 17
    not_opt                        shift and go to state 19
    expression                     shift and go to state 22
    boolean_term                   shift and go to state 23
    values_list                    shift and go to state 21

state 4

    (27) simple_table -> explicit_table .

    INTERSECT       reduce using rule 27 (simple_table -> explicit_table .)
    RPAREN          reduce using rule 27 (simple_table -> explicit_table .)
    UNION           reduce using rule 27 (simple_table -> explicit_table .)
    EXCEPT          reduce using rule 27 (simple_table -> explicit_table .)
    ORDER           reduce using rule 27 (simple_table -> explicit_table .)
    LIMIT           reduce using rule 27 (simple_table -> explicit_table .)
    $end            reduce using rule 27 (simple_table -> explicit_table .)


state 5

    (26) simple_table -> query_specification .

    INTERSECT       reduce using rule 26 (simple_table -> query_specification .)
    RPAREN          reduce using rule 26 (simple_table -> query_specification .)
    UNION           reduce using rule 26 (simple_table -> query_specification .)
    EXCEPT          reduce using rule 26 (simple_table -> query_specification .)
    ORDER           reduce using rule 26 (simple_table -> query_specification .)
    LIMIT           reduce using rule 26 (simple_table -> query_specification .)
    $end            reduce using rule 26 (simple_table -> query_specification .)


state 6

    (22) query_term_intersect -> nonjoin_query_primary .

    INTERSECT       reduce using rule 22 (query_term_intersect -> nonjoin_query_primary .)
    UNION           reduce using rule 22 (query_term_intersect -> nonjoin_query_primary .)
    EXCEPT          reduce using rule 22 (query_term_intersect -> nonjoin_query_primary .)
    ORDER           reduce using rule 22 (query_term_intersect -> nonjoin_query_primary .)
    LIMIT           reduce using rule 22 (query_term_intersect -> nonjoin_query_primary .)
    $end            reduce using rule 22 (query_term_intersect -> nonjoin_query_primary .)
    RPAREN          reduce using rule 22 (query_term_intersect -> nonjoin_query_primary .)


state 7

    (0) S' -> statement .



state 8

    (1) statement -> query .

    $end            reduce using rule 1 (statement -> query .)


state 9

    (3) query -> query_no_with .

    $end            reduce using rule 3 (query -> query_no_with .)
    RPAREN          reduce using rule 3 (query -> query_no_with .)


state 10

    (29) explicit_table -> TABLE . qualified_name
    (183) qualified_name -> . qualified_name PERIOD identifier
    (184) qualified_name -> . identifier
    (185) identifier -> . IDENTIFIER
    (186) identifier -> . quoted_identifier
    (187) identifier -> . non_reserved
    (188) identifier -> . DIGIT_IDENTIFIER
    (190) quoted_identifier -> . QUOTED_IDENTIFIER
    (191) quoted_identifier -> . BACKQUOTED_IDENTIFIER
    (189) non_reserved -> . NON_RESERVED

    IDENTIFIER      shift and go to state 27
    DIGIT_IDENTIFIER shift and go to state 26
    QUOTED_IDENTIFIER shift and go to state 24
    BACKQUOTED_IDENTIFIER shift and go to state 31
    NON_RESERVED    shift and go to state 30

    non_reserved                   shift and go to state 28
    qualified_name                 shift and go to state 29
    quoted_identifier              shift and go to state 25
    identifier                     shift and go to state 32

state 11

    (4) query_no_with -> query_term . order_by_opt limit_opt
    (20) query_term -> query_term . UNION set_quantifier_opt query_term_intersect
    (21) query_term -> query_term . EXCEPT set_quantifier_opt query_term_intersect
    (5) order_by_opt -> . ORDER BY sort_items
    (6) order_by_opt -> . empty
    (194) empty -> .

    UNION           shift and go to state 33
    EXCEPT          shift and go to state 35
    ORDER           shift and go to state 36
    LIMIT           reduce using rule 194 (empty -> .)
    $end            reduce using rule 194 (empty -> .)
    RPAREN          reduce using rule 194 (empty -> .)

    empty                          shift and go to state 34
    order_by_opt                   shift and go to state 37

state 12

    (25) nonjoin_query_primary -> LPAREN . query_term RPAREN
    (19) query_term -> . query_term_intersect
    (20) query_term -> . query_term UNION set_quantifier_opt query_term_intersect
    (21) query_term -> . query_term EXCEPT set_quantifier_opt query_term_intersect
    (22) query_term_intersect -> . nonjoin_query_primary
    (23) query_term_intersect -> . query_term_intersect INTERSECT set_quantifier_opt nonjoin_query_primary
    (24) nonjoin_query_primary -> . simple_table
    (25) nonjoin_query_primary -> . LPAREN query_term RPAREN
    (26) simple_table -> . query_specification
    (27) simple_table -> . explicit_table
    (28) simple_table -> . table_value_constructor
    (33) query_specification -> . SELECT set_quantifier_opt adql_top_opt select_items table_expression_opt
    (29) explicit_table -> . TABLE qualified_name
    (30) table_value_constructor -> . VALUES values_list

    LPAREN          shift and go to state 12
    SELECT          shift and go to state 13
    TABLE           shift and go to state 10
    VALUES          shift and go to state 3

    query_term_intersect           shift and go to state 1
    simple_table                   shift and go to state 2
    query_specification            shift and go to state 5
    table_value_constructor        shift and go to state 14
    explicit_table                 shift and go to state 4
    query_term                     shift and go to state 38
    nonjoin_query_primary          shift and go to state 6

state 13

    (33) query_specification -> SELECT . set_quantifier_opt adql_top_opt select_items table_expression_opt
    (44) set_quantifier_opt -> . DISTINCT
    (45) set_quantifier_opt -> . ALL
    (46) set_quantifier_opt -> . empty
    (194) empty -> .

    DISTINCT        shift and go to state 42
    ALL             shift and go to state 41
    TOP             reduce using rule 194 (empty -> .)
    ASTERISK        reduce using rule 194 (empty -> .)
    PLUS            reduce using rule 194 (empty -> .)
    MINUS           reduce using rule 194 (empty -> .)
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    empty                          shift and go to state 39
    set_quantifier_opt             shift and go to state 40

state 14

    (28) simple_table -> table_value_constructor .

    INTERSECT       reduce using rule 28 (simple_table -> table_value_constructor .)
    RPAREN          reduce using rule 28 (simple_table -> table_value_constructor .)
    UNION           reduce using rule 28 (simple_table -> table_value_constructor .)
    EXCEPT          reduce using rule 28 (simple_table -> table_value_constructor .)
    ORDER           reduce using rule 28 (simple_table -> table_value_constructor .)
    LIMIT           reduce using rule 28 (simple_table -> table_value_constructor .)
    $end            reduce using rule 28 (simple_table -> table_value_constructor .)


state 15

    (23) query_term_intersect -> query_term_intersect INTERSECT . set_quantifier_opt nonjoin_query_primary
    (44) set_quantifier_opt -> . DISTINCT
    (45) set_quantifier_opt -> . ALL
    (46) set_quantifier_opt -> . empty
    (194) empty -> .

    DISTINCT        shift and go to state 42
    ALL             shift and go to state 41
    LPAREN          reduce using rule 194 (empty -> .)
    SELECT          reduce using rule 194 (empty -> .)
    TABLE           reduce using rule 194 (empty -> .)
    VALUES          reduce using rule 194 (empty -> .)

    empty                          shift and go to state 39
    set_quantifier_opt             shift and go to state 43

state 16

    (87) boolean_term -> boolean_factor .

    AND             reduce using rule 87 (boolean_term -> boolean_factor .)
    OR              reduce using rule 87 (boolean_term -> boolean_factor .)
    ASC             reduce using rule 87 (boolean_term -> boolean_factor .)
    DESC            reduce using rule 87 (boolean_term -> boolean_factor .)
    NULLS           reduce using rule 87 (boolean_term -> boolean_factor .)
    COMMA           reduce using rule 87 (boolean_term -> boolean_factor .)
    LIMIT           reduce using rule 87 (boolean_term -> boolean_factor .)
    $end            reduce using rule 87 (boolean_term -> boolean_factor .)
    RPAREN          reduce using rule 87 (boolean_term -> boolean_factor .)
    INTERSECT       reduce using rule 87 (boolean_term -> boolean_factor .)
    UNION           reduce using rule 87 (boolean_term -> boolean_factor .)
    EXCEPT          reduce using rule 87 (boolean_term -> boolean_factor .)
    ORDER           reduce using rule 87 (boolean_term -> boolean_factor .)
    THEN            reduce using rule 87 (boolean_term -> boolean_factor .)
    GROUP           reduce using rule 87 (boolean_term -> boolean_factor .)
    HAVING          reduce using rule 87 (boolean_term -> boolean_factor .)
    CROSS           reduce using rule 87 (boolean_term -> boolean_factor .)
    NATURAL         reduce using rule 87 (boolean_term -> boolean_factor .)
    INNER           reduce using rule 87 (boolean_term -> boolean_factor .)
    LEFT            reduce using rule 87 (boolean_term -> boolean_factor .)
    RIGHT           reduce using rule 87 (boolean_term -> boolean_factor .)
    FULL            reduce using rule 87 (boolean_term -> boolean_factor .)
    JOIN            reduce using rule 87 (boolean_term -> boolean_factor .)
    WHERE           reduce using rule 87 (boolean_term -> boolean_factor .)
    ON              reduce using rule 87 (boolean_term -> boolean_factor .)
    USING           reduce using rule 87 (boolean_term -> boolean_factor .)


state 17

    (162) not_opt -> empty .

    RPAREN          reduce using rule 162 (not_opt -> empty .)
    EXISTS          reduce using rule 162 (not_opt -> empty .)
    PLUS            reduce using rule 162 (not_opt -> empty .)
    MINUS           reduce using rule 162 (not_opt -> empty .)
    LPAREN          reduce using rule 162 (not_opt -> empty .)
    NULL            reduce using rule 162 (not_opt -> empty .)
    STRING          reduce using rule 162 (not_opt -> empty .)
    DECIMAL         reduce using rule 162 (not_opt -> empty .)
    INTEGER         reduce using rule 162 (not_opt -> empty .)
    TRUE            reduce using rule 162 (not_opt -> empty .)
    FALSE           reduce using rule 162 (not_opt -> empty .)
    INTERVAL        reduce using rule 162 (not_opt -> empty .)
    IDENTIFIER      reduce using rule 162 (not_opt -> empty .)
    DIGIT_IDENTIFIER reduce using rule 162 (not_opt -> empty .)
    CURRENT_DATE    reduce using rule 162 (not_opt -> empty .)
    CURRENT_TIME    reduce using rule 162 (not_opt -> empty .)
    CURRENT_TIMESTAMP reduce using rule 162 (not_opt -> empty .)
    LOCALTIME       reduce using rule 162 (not_opt -> empty .)
    LOCALTIMESTAMP  reduce using rule 162 (not_opt -> empty .)
    QUOTED_IDENTIFIER reduce using rule 162 (not_opt -> empty .)
    BACKQUOTED_IDENTIFIER reduce using rule 162 (not_opt -> empty .)
    NON_RESERVED    reduce using rule 162 (not_opt -> empty .)
    CASE            reduce using rule 162 (not_opt -> empty .)
    BETWEEN         reduce using rule 162 (not_opt -> empty .)
    IN              reduce using rule 162 (not_opt -> empty .)
    LIKE            reduce using rule 162 (not_opt -> empty .)


state 18

    (161) not_opt -> NOT .

    RPAREN          reduce using rule 161 (not_opt -> NOT .)
    EXISTS          reduce using rule 161 (not_opt -> NOT .)
    PLUS            reduce using rule 161 (not_opt -> NOT .)
    MINUS           reduce using rule 161 (not_opt -> NOT .)
    LPAREN          reduce using rule 161 (not_opt -> NOT .)
    NULL            reduce using rule 161 (not_opt -> NOT .)
    STRING          reduce using rule 161 (not_opt -> NOT .)
    DECIMAL         reduce using rule 161 (not_opt -> NOT .)
    INTEGER         reduce using rule 161 (not_opt -> NOT .)
    TRUE            reduce using rule 161 (not_opt -> NOT .)
    FALSE           reduce using rule 161 (not_opt -> NOT .)
    INTERVAL        reduce using rule 161 (not_opt -> NOT .)
    IDENTIFIER      reduce using rule 161 (not_opt -> NOT .)
    DIGIT_IDENTIFIER reduce using rule 161 (not_opt -> NOT .)
    CURRENT_DATE    reduce using rule 161 (not_opt -> NOT .)
    CURRENT_TIME    reduce using rule 161 (not_opt -> NOT .)
    CURRENT_TIMESTAMP reduce using rule 161 (not_opt -> NOT .)
    LOCALTIME       reduce using rule 161 (not_opt -> NOT .)
    LOCALTIMESTAMP  reduce using rule 161 (not_opt -> NOT .)
    QUOTED_IDENTIFIER reduce using rule 161 (not_opt -> NOT .)
    BACKQUOTED_IDENTIFIER reduce using rule 161 (not_opt -> NOT .)
    NON_RESERVED    reduce using rule 161 (not_opt -> NOT .)
    CASE            reduce using rule 161 (not_opt -> NOT .)
    BETWEEN         reduce using rule 161 (not_opt -> NOT .)
    IN              reduce using rule 161 (not_opt -> NOT .)
    LIKE            reduce using rule 161 (not_opt -> NOT .)


state 19

    (89) boolean_factor -> not_opt . boolean_test
    (90) boolean_test -> . boolean_primary
    (91) boolean_primary -> . predicate
    (92) boolean_primary -> . parenthetic_expression
    (94) predicate -> . comparison_predicate
    (95) predicate -> . between_predicate
    (96) predicate -> . in_predicate
    (97) predicate -> . like_predicate
    (98) predicate -> . null_predicate
    (99) predicate -> . exists_predicate
    (93) parenthetic_expression -> . RPAREN expression RPAREN
    (100) comparison_predicate -> . value_expression comparison_operator value_expression
    (101) between_predicate -> . value_expression not_opt BETWEEN value_expression AND value_expression
    (102) in_predicate -> . value_expression not_opt IN in_value
    (106) like_predicate -> . value_expression not_opt LIKE value_expression
    (107) null_predicate -> . value_expression IS not_opt NULL
    (108) exists_predicate -> . EXISTS subquery
    (109) value_expression -> . value_expression PLUS term
    (110) value_expression -> . value_expression MINUS term
    (111) value_expression -> . term
    (112) term -> . term ASTERISK factor
    (113) term -> . term SLASH factor
    (114) term -> . term PERCENT factor
    (115) term -> . term CONCAT factor
    (116) term -> . factor
    (117) factor -> . sign_opt primary_expression
    (174) sign_opt -> . sign
    (175) sign_opt -> . empty
    (176) sign -> . PLUS
    (177) sign -> . MINUS
    (194) empty -> .

    RPAREN          shift and go to state 62
    EXISTS          shift and go to state 52
    PLUS            shift and go to state 63
    MINUS           shift and go to state 47
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    value_expression               shift and go to state 44
    in_predicate                   shift and go to state 45
    comparison_predicate           shift and go to state 46
    null_predicate                 shift and go to state 50
    term                           shift and go to state 54
    like_predicate                 shift and go to state 48
    sign_opt                       shift and go to state 49
    parenthetic_expression         shift and go to state 58
    between_predicate              shift and go to state 51
    exists_predicate               shift and go to state 53
    empty                          shift and go to state 55
    sign                           shift and go to state 56
    factor                         shift and go to state 57
    boolean_test                   shift and go to state 59
    predicate                      shift and go to state 60
    boolean_primary                shift and go to state 61

state 20

    (84) expression -> search_condition .
    (86) search_condition -> search_condition . OR boolean_term

    ASC             reduce using rule 84 (expression -> search_condition .)
    DESC            reduce using rule 84 (expression -> search_condition .)
    NULLS           reduce using rule 84 (expression -> search_condition .)
    COMMA           reduce using rule 84 (expression -> search_condition .)
    LIMIT           reduce using rule 84 (expression -> search_condition .)
    $end            reduce using rule 84 (expression -> search_condition .)
    RPAREN          reduce using rule 84 (expression -> search_condition .)
    INTERSECT       reduce using rule 84 (expression -> search_condition .)
    UNION           reduce using rule 84 (expression -> search_condition .)
    EXCEPT          reduce using rule 84 (expression -> search_condition .)
    ORDER           reduce using rule 84 (expression -> search_condition .)
    OR              shift and go to state 64


state 21

    (30) table_value_constructor -> VALUES values_list .
    (31) values_list -> values_list . COMMA expression

    INTERSECT       reduce using rule 30 (table_value_constructor -> VALUES values_list .)
    UNION           reduce using rule 30 (table_value_constructor -> VALUES values_list .)
    EXCEPT          reduce using rule 30 (table_value_constructor -> VALUES values_list .)
    ORDER           reduce using rule 30 (table_value_constructor -> VALUES values_list .)
    LIMIT           reduce using rule 30 (table_value_constructor -> VALUES values_list .)
    $end            reduce using rule 30 (table_value_constructor -> VALUES values_list .)
    RPAREN          reduce using rule 30 (table_value_constructor -> VALUES values_list .)
    COMMA           shift and go to state 65


state 22

    (32) values_list -> expression .

    COMMA           reduce using rule 32 (values_list -> expression .)
    INTERSECT       reduce using rule 32 (values_list -> expression .)
    UNION           reduce using rule 32 (values_list -> expression .)
    EXCEPT          reduce using rule 32 (values_list -> expression .)
    ORDER           reduce using rule 32 (values_list -> expression .)
    LIMIT           reduce using rule 32 (values_list -> expression .)
    $end            reduce using rule 32 (values_list -> expression .)
    RPAREN          reduce using rule 32 (values_list -> expression .)


state 23

    (85) search_condition -> boolean_term .
    (88) boolean_term -> boolean_term . AND boolean_factor

    OR              reduce using rule 85 (search_condition -> boolean_term .)
    ASC             reduce using rule 85 (search_condition -> boolean_term .)
    DESC            reduce using rule 85 (search_condition -> boolean_term .)
    NULLS           reduce using rule 85 (search_condition -> boolean_term .)
    COMMA           reduce using rule 85 (search_condition -> boolean_term .)
    LIMIT           reduce using rule 85 (search_condition -> boolean_term .)
    $end            reduce using rule 85 (search_condition -> boolean_term .)
    RPAREN          reduce using rule 85 (search_condition -> boolean_term .)
    INTERSECT       reduce using rule 85 (search_condition -> boolean_term .)
    UNION           reduce using rule 85 (search_condition -> boolean_term .)
    EXCEPT          reduce using rule 85 (search_condition -> boolean_term .)
    ORDER           reduce using rule 85 (search_condition -> boolean_term .)
    GROUP           reduce using rule 85 (search_condition -> boolean_term .)
    HAVING          reduce using rule 85 (search_condition -> boolean_term .)
    CROSS           reduce using rule 85 (search_condition -> boolean_term .)
    NATURAL         reduce using rule 85 (search_condition -> boolean_term .)
    INNER           reduce using rule 85 (search_condition -> boolean_term .)
    LEFT            reduce using rule 85 (search_condition -> boolean_term .)
    RIGHT           reduce using rule 85 (search_condition -> boolean_term .)
    FULL            reduce using rule 85 (search_condition -> boolean_term .)
    JOIN            reduce using rule 85 (search_condition -> boolean_term .)
    WHERE           reduce using rule 85 (search_condition -> boolean_term .)
    ON              reduce using rule 85 (search_condition -> boolean_term .)
    USING           reduce using rule 85 (search_condition -> boolean_term .)
    THEN            reduce using rule 85 (search_condition -> boolean_term .)
    AND             shift and go to state 66


state 24

    (190) quoted_identifier -> QUOTED_IDENTIFIER .

    PERIOD          reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    AS              reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    IDENTIFIER      reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    DIGIT_IDENTIFIER reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    QUOTED_IDENTIFIER reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    BACKQUOTED_IDENTIFIER reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    NON_RESERVED    reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    CROSS           reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    NATURAL         reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    INNER           reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    LEFT            reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    RIGHT           reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    FULL            reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    JOIN            reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    STRING          reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    LPAREN          reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    ASTERISK        reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    SLASH           reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    PERCENT         reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    CONCAT          reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    IS              reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    PLUS            reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    MINUS           reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    EQ              reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    NE              reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    LT              reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    LE              reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    GT              reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    GE              reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    NOT             reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    BETWEEN         reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    IN              reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    LIKE            reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    COMMA           reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    FROM            reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    INTERSECT       reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    UNION           reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    EXCEPT          reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    ORDER           reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    LIMIT           reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    $end            reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    RPAREN          reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    AND             reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    OR              reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    ASC             reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    DESC            reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    NULLS           reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    THEN            reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    GROUP           reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    HAVING          reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    WHERE           reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    ON              reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    USING           reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    WHEN            reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    END             reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)
    ELSE            reduce using rule 190 (quoted_identifier -> QUOTED_IDENTIFIER .)


state 25

    (186) identifier -> quoted_identifier .

    PERIOD          reduce using rule 186 (identifier -> quoted_identifier .)
    AS              reduce using rule 186 (identifier -> quoted_identifier .)
    IDENTIFIER      reduce using rule 186 (identifier -> quoted_identifier .)
    DIGIT_IDENTIFIER reduce using rule 186 (identifier -> quoted_identifier .)
    QUOTED_IDENTIFIER reduce using rule 186 (identifier -> quoted_identifier .)
    BACKQUOTED_IDENTIFIER reduce using rule 186 (identifier -> quoted_identifier .)
    NON_RESERVED    reduce using rule 186 (identifier -> quoted_identifier .)
    CROSS           reduce using rule 186 (identifier -> quoted_identifier .)
    NATURAL         reduce using rule 186 (identifier -> quoted_identifier .)
    INNER           reduce using rule 186 (identifier -> quoted_identifier .)
    LEFT            reduce using rule 186 (identifier -> quoted_identifier .)
    RIGHT           reduce using rule 186 (identifier -> quoted_identifier .)
    FULL            reduce using rule 186 (identifier -> quoted_identifier .)
    JOIN            reduce using rule 186 (identifier -> quoted_identifier .)
    INTERSECT       reduce using rule 186 (identifier -> quoted_identifier .)
    UNION           reduce using rule 186 (identifier -> quoted_identifier .)
    EXCEPT          reduce using rule 186 (identifier -> quoted_identifier .)
    ORDER           reduce using rule 186 (identifier -> quoted_identifier .)
    LIMIT           reduce using rule 186 (identifier -> quoted_identifier .)
    $end            reduce using rule 186 (identifier -> quoted_identifier .)
    RPAREN          reduce using rule 186 (identifier -> quoted_identifier .)
    COMMA           reduce using rule 186 (identifier -> quoted_identifier .)
    FROM            reduce using rule 186 (identifier -> quoted_identifier .)
    WHERE           reduce using rule 186 (identifier -> quoted_identifier .)
    GROUP           reduce using rule 186 (identifier -> quoted_identifier .)
    HAVING          reduce using rule 186 (identifier -> quoted_identifier .)
    ON              reduce using rule 186 (identifier -> quoted_identifier .)
    USING           reduce using rule 186 (identifier -> quoted_identifier .)
    LPAREN          reduce using rule 186 (identifier -> quoted_identifier .)
    ASTERISK        reduce using rule 186 (identifier -> quoted_identifier .)
    SLASH           reduce using rule 186 (identifier -> quoted_identifier .)
    PERCENT         reduce using rule 186 (identifier -> quoted_identifier .)
    CONCAT          reduce using rule 186 (identifier -> quoted_identifier .)
    IS              reduce using rule 186 (identifier -> quoted_identifier .)
    PLUS            reduce using rule 186 (identifier -> quoted_identifier .)
    MINUS           reduce using rule 186 (identifier -> quoted_identifier .)
    EQ              reduce using rule 186 (identifier -> quoted_identifier .)
    NE              reduce using rule 186 (identifier -> quoted_identifier .)
    LT              reduce using rule 186 (identifier -> quoted_identifier .)
    LE              reduce using rule 186 (identifier -> quoted_identifier .)
    GT              reduce using rule 186 (identifier -> quoted_identifier .)
    GE              reduce using rule 186 (identifier -> quoted_identifier .)
    NOT             reduce using rule 186 (identifier -> quoted_identifier .)
    BETWEEN         reduce using rule 186 (identifier -> quoted_identifier .)
    IN              reduce using rule 186 (identifier -> quoted_identifier .)
    LIKE            reduce using rule 186 (identifier -> quoted_identifier .)
    AND             reduce using rule 186 (identifier -> quoted_identifier .)
    OR              reduce using rule 186 (identifier -> quoted_identifier .)
    ASC             reduce using rule 186 (identifier -> quoted_identifier .)
    DESC            reduce using rule 186 (identifier -> quoted_identifier .)
    NULLS           reduce using rule 186 (identifier -> quoted_identifier .)
    THEN            reduce using rule 186 (identifier -> quoted_identifier .)
    WHEN            reduce using rule 186 (identifier -> quoted_identifier .)
    END             reduce using rule 186 (identifier -> quoted_identifier .)
    ELSE            reduce using rule 186 (identifier -> quoted_identifier .)
    STRING          reduce using rule 186 (identifier -> quoted_identifier .)


state 26

    (188) identifier -> DIGIT_IDENTIFIER .

    PERIOD          reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    AS              reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    IDENTIFIER      reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    DIGIT_IDENTIFIER reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    QUOTED_IDENTIFIER reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    BACKQUOTED_IDENTIFIER reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    NON_RESERVED    reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    CROSS           reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    NATURAL         reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    INNER           reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    LEFT            reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    RIGHT           reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    FULL            reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    JOIN            reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    INTERSECT       reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    UNION           reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    EXCEPT          reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    ORDER           reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    LIMIT           reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    $end            reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    RPAREN          reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    COMMA           reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    FROM            reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    WHERE           reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    GROUP           reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    HAVING          reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    ON              reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    USING           reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    LPAREN          reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    ASTERISK        reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    SLASH           reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    PERCENT         reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    CONCAT          reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    IS              reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    PLUS            reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    MINUS           reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    EQ              reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    NE              reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    LT              reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    LE              reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    GT              reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    GE              reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    NOT             reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    BETWEEN         reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    IN              reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    LIKE            reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    AND             reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    OR              reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    ASC             reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    DESC            reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    NULLS           reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    THEN            reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    WHEN            reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    END             reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    ELSE            reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)
    STRING          reduce using rule 188 (identifier -> DIGIT_IDENTIFIER .)


state 27

    (185) identifier -> IDENTIFIER .

    PERIOD          reduce using rule 185 (identifier -> IDENTIFIER .)
    AS              reduce using rule 185 (identifier -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 185 (identifier -> IDENTIFIER .)
    DIGIT_IDENTIFIER reduce using rule 185 (identifier -> IDENTIFIER .)
    QUOTED_IDENTIFIER reduce using rule 185 (identifier -> IDENTIFIER .)
    BACKQUOTED_IDENTIFIER reduce using rule 185 (identifier -> IDENTIFIER .)
    NON_RESERVED    reduce using rule 185 (identifier -> IDENTIFIER .)
    CROSS           reduce using rule 185 (identifier -> IDENTIFIER .)
    NATURAL         reduce using rule 185 (identifier -> IDENTIFIER .)
    INNER           reduce using rule 185 (identifier -> IDENTIFIER .)
    LEFT            reduce using rule 185 (identifier -> IDENTIFIER .)
    RIGHT           reduce using rule 185 (identifier -> IDENTIFIER .)
    FULL            reduce using rule 185 (identifier -> IDENTIFIER .)
    JOIN            reduce using rule 185 (identifier -> IDENTIFIER .)
    INTERSECT       reduce using rule 185 (identifier -> IDENTIFIER .)
    UNION           reduce using rule 185 (identifier -> IDENTIFIER .)
    EXCEPT          reduce using rule 185 (identifier -> IDENTIFIER .)
    ORDER           reduce using rule 185 (identifier -> IDENTIFIER .)
    LIMIT           reduce using rule 185 (identifier -> IDENTIFIER .)
    $end            reduce using rule 185 (identifier -> IDENTIFIER .)
    RPAREN          reduce using rule 185 (identifier -> IDENTIFIER .)
    COMMA           reduce using rule 185 (identifier -> IDENTIFIER .)
    FROM            reduce using rule 185 (identifier -> IDENTIFIER .)
    WHERE           reduce using rule 185 (identifier -> IDENTIFIER .)
    GROUP           reduce using rule 185 (identifier -> IDENTIFIER .)
    HAVING          reduce using rule 185 (identifier -> IDENTIFIER .)
    ON              reduce using rule 185 (identifier -> IDENTIFIER .)
    USING           reduce using rule 185 (identifier -> IDENTIFIER .)
    LPAREN          reduce using rule 185 (identifier -> IDENTIFIER .)
    ASTERISK        reduce using rule 185 (identifier -> IDENTIFIER .)
    SLASH           reduce using rule 185 (identifier -> IDENTIFIER .)
    PERCENT         reduce using rule 185 (identifier -> IDENTIFIER .)
    CONCAT          reduce using rule 185 (identifier -> IDENTIFIER .)
    IS              reduce using rule 185 (identifier -> IDENTIFIER .)
    PLUS            reduce using rule 185 (identifier -> IDENTIFIER .)
    MINUS           reduce using rule 185 (identifier -> IDENTIFIER .)
    EQ              reduce using rule 185 (identifier -> IDENTIFIER .)
    NE              reduce using rule 185 (identifier -> IDENTIFIER .)
    LT              reduce using rule 185 (identifier -> IDENTIFIER .)
    LE              reduce using rule 185 (identifier -> IDENTIFIER .)
    GT              reduce using rule 185 (identifier -> IDENTIFIER .)
    GE              reduce using rule 185 (identifier -> IDENTIFIER .)
    NOT             reduce using rule 185 (identifier -> IDENTIFIER .)
    BETWEEN         reduce using rule 185 (identifier -> IDENTIFIER .)
    IN              reduce using rule 185 (identifier -> IDENTIFIER .)
    LIKE            reduce using rule 185 (identifier -> IDENTIFIER .)
    AND             reduce using rule 185 (identifier -> IDENTIFIER .)
    OR              reduce using rule 185 (identifier -> IDENTIFIER .)
    ASC             reduce using rule 185 (identifier -> IDENTIFIER .)
    DESC            reduce using rule 185 (identifier -> IDENTIFIER .)
    NULLS           reduce using rule 185 (identifier -> IDENTIFIER .)
    THEN            reduce using rule 185 (identifier -> IDENTIFIER .)
    WHEN            reduce using rule 185 (identifier -> IDENTIFIER .)
    END             reduce using rule 185 (identifier -> IDENTIFIER .)
    ELSE            reduce using rule 185 (identifier -> IDENTIFIER .)
    STRING          reduce using rule 185 (identifier -> IDENTIFIER .)


state 28

    (187) identifier -> non_reserved .

    PERIOD          reduce using rule 187 (identifier -> non_reserved .)
    AS              reduce using rule 187 (identifier -> non_reserved .)
    IDENTIFIER      reduce using rule 187 (identifier -> non_reserved .)
    DIGIT_IDENTIFIER reduce using rule 187 (identifier -> non_reserved .)
    QUOTED_IDENTIFIER reduce using rule 187 (identifier -> non_reserved .)
    BACKQUOTED_IDENTIFIER reduce using rule 187 (identifier -> non_reserved .)
    NON_RESERVED    reduce using rule 187 (identifier -> non_reserved .)
    CROSS           reduce using rule 187 (identifier -> non_reserved .)
    NATURAL         reduce using rule 187 (identifier -> non_reserved .)
    INNER           reduce using rule 187 (identifier -> non_reserved .)
    LEFT            reduce using rule 187 (identifier -> non_reserved .)
    RIGHT           reduce using rule 187 (identifier -> non_reserved .)
    FULL            reduce using rule 187 (identifier -> non_reserved .)
    JOIN            reduce using rule 187 (identifier -> non_reserved .)
    INTERSECT       reduce using rule 187 (identifier -> non_reserved .)
    UNION           reduce using rule 187 (identifier -> non_reserved .)
    EXCEPT          reduce using rule 187 (identifier -> non_reserved .)
    ORDER           reduce using rule 187 (identifier -> non_reserved .)
    LIMIT           reduce using rule 187 (identifier -> non_reserved .)
    $end            reduce using rule 187 (identifier -> non_reserved .)
    RPAREN          reduce using rule 187 (identifier -> non_reserved .)
    COMMA           reduce using rule 187 (identifier -> non_reserved .)
    FROM            reduce using rule 187 (identifier -> non_reserved .)
    WHERE           reduce using rule 187 (identifier -> non_reserved .)
    GROUP           reduce using rule 187 (identifier -> non_reserved .)
    HAVING          reduce using rule 187 (identifier -> non_reserved .)
    ON              reduce using rule 187 (identifier -> non_reserved .)
    USING           reduce using rule 187 (identifier -> non_reserved .)
    LPAREN          reduce using rule 187 (identifier -> non_reserved .)
    ASTERISK        reduce using rule 187 (identifier -> non_reserved .)
    SLASH           reduce using rule 187 (identifier -> non_reserved .)
    PERCENT         reduce using rule 187 (identifier -> non_reserved .)
    CONCAT          reduce using rule 187 (identifier -> non_reserved .)
    IS              reduce using rule 187 (identifier -> non_reserved .)
    PLUS            reduce using rule 187 (identifier -> non_reserved .)
    MINUS           reduce using rule 187 (identifier -> non_reserved .)
    EQ              reduce using rule 187 (identifier -> non_reserved .)
    NE              reduce using rule 187 (identifier -> non_reserved .)
    LT              reduce using rule 187 (identifier -> non_reserved .)
    LE              reduce using rule 187 (identifier -> non_reserved .)
    GT              reduce using rule 187 (identifier -> non_reserved .)
    GE              reduce using rule 187 (identifier -> non_reserved .)
    NOT             reduce using rule 187 (identifier -> non_reserved .)
    BETWEEN         reduce using rule 187 (identifier -> non_reserved .)
    IN              reduce using rule 187 (identifier -> non_reserved .)
    LIKE            reduce using rule 187 (identifier -> non_reserved .)
    AND             reduce using rule 187 (identifier -> non_reserved .)
    OR              reduce using rule 187 (identifier -> non_reserved .)
    ASC             reduce using rule 187 (identifier -> non_reserved .)
    DESC            reduce using rule 187 (identifier -> non_reserved .)
    NULLS           reduce using rule 187 (identifier -> non_reserved .)
    THEN            reduce using rule 187 (identifier -> non_reserved .)
    WHEN            reduce using rule 187 (identifier -> non_reserved .)
    END             reduce using rule 187 (identifier -> non_reserved .)
    ELSE            reduce using rule 187 (identifier -> non_reserved .)
    STRING          reduce using rule 187 (identifier -> non_reserved .)


state 29

    (29) explicit_table -> TABLE qualified_name .
    (183) qualified_name -> qualified_name . PERIOD identifier

    INTERSECT       reduce using rule 29 (explicit_table -> TABLE qualified_name .)
    RPAREN          reduce using rule 29 (explicit_table -> TABLE qualified_name .)
    UNION           reduce using rule 29 (explicit_table -> TABLE qualified_name .)
    EXCEPT          reduce using rule 29 (explicit_table -> TABLE qualified_name .)
    ORDER           reduce using rule 29 (explicit_table -> TABLE qualified_name .)
    LIMIT           reduce using rule 29 (explicit_table -> TABLE qualified_name .)
    $end            reduce using rule 29 (explicit_table -> TABLE qualified_name .)
    PERIOD          shift and go to state 67


state 30

    (189) non_reserved -> NON_RESERVED .

    PERIOD          reduce using rule 189 (non_reserved -> NON_RESERVED .)
    AS              reduce using rule 189 (non_reserved -> NON_RESERVED .)
    IDENTIFIER      reduce using rule 189 (non_reserved -> NON_RESERVED .)
    DIGIT_IDENTIFIER reduce using rule 189 (non_reserved -> NON_RESERVED .)
    QUOTED_IDENTIFIER reduce using rule 189 (non_reserved -> NON_RESERVED .)
    BACKQUOTED_IDENTIFIER reduce using rule 189 (non_reserved -> NON_RESERVED .)
    NON_RESERVED    reduce using rule 189 (non_reserved -> NON_RESERVED .)
    CROSS           reduce using rule 189 (non_reserved -> NON_RESERVED .)
    NATURAL         reduce using rule 189 (non_reserved -> NON_RESERVED .)
    INNER           reduce using rule 189 (non_reserved -> NON_RESERVED .)
    LEFT            reduce using rule 189 (non_reserved -> NON_RESERVED .)
    RIGHT           reduce using rule 189 (non_reserved -> NON_RESERVED .)
    FULL            reduce using rule 189 (non_reserved -> NON_RESERVED .)
    JOIN            reduce using rule 189 (non_reserved -> NON_RESERVED .)
    COMMA           reduce using rule 189 (non_reserved -> NON_RESERVED .)
    WHERE           reduce using rule 189 (non_reserved -> NON_RESERVED .)
    GROUP           reduce using rule 189 (non_reserved -> NON_RESERVED .)
    HAVING          reduce using rule 189 (non_reserved -> NON_RESERVED .)
    INTERSECT       reduce using rule 189 (non_reserved -> NON_RESERVED .)
    UNION           reduce using rule 189 (non_reserved -> NON_RESERVED .)
    EXCEPT          reduce using rule 189 (non_reserved -> NON_RESERVED .)
    ORDER           reduce using rule 189 (non_reserved -> NON_RESERVED .)
    LIMIT           reduce using rule 189 (non_reserved -> NON_RESERVED .)
    $end            reduce using rule 189 (non_reserved -> NON_RESERVED .)
    RPAREN          reduce using rule 189 (non_reserved -> NON_RESERVED .)
    ON              reduce using rule 189 (non_reserved -> NON_RESERVED .)
    USING           reduce using rule 189 (non_reserved -> NON_RESERVED .)
    FROM            reduce using rule 189 (non_reserved -> NON_RESERVED .)
    STRING          reduce using rule 189 (non_reserved -> NON_RESERVED .)
    LPAREN          reduce using rule 189 (non_reserved -> NON_RESERVED .)
    ASTERISK        reduce using rule 189 (non_reserved -> NON_RESERVED .)
    SLASH           reduce using rule 189 (non_reserved -> NON_RESERVED .)
    PERCENT         reduce using rule 189 (non_reserved -> NON_RESERVED .)
    CONCAT          reduce using rule 189 (non_reserved -> NON_RESERVED .)
    IS              reduce using rule 189 (non_reserved -> NON_RESERVED .)
    PLUS            reduce using rule 189 (non_reserved -> NON_RESERVED .)
    MINUS           reduce using rule 189 (non_reserved -> NON_RESERVED .)
    EQ              reduce using rule 189 (non_reserved -> NON_RESERVED .)
    NE              reduce using rule 189 (non_reserved -> NON_RESERVED .)
    LT              reduce using rule 189 (non_reserved -> NON_RESERVED .)
    LE              reduce using rule 189 (non_reserved -> NON_RESERVED .)
    GT              reduce using rule 189 (non_reserved -> NON_RESERVED .)
    GE              reduce using rule 189 (non_reserved -> NON_RESERVED .)
    NOT             reduce using rule 189 (non_reserved -> NON_RESERVED .)
    BETWEEN         reduce using rule 189 (non_reserved -> NON_RESERVED .)
    IN              reduce using rule 189 (non_reserved -> NON_RESERVED .)
    LIKE            reduce using rule 189 (non_reserved -> NON_RESERVED .)
    AND             reduce using rule 189 (non_reserved -> NON_RESERVED .)
    OR              reduce using rule 189 (non_reserved -> NON_RESERVED .)
    ASC             reduce using rule 189 (non_reserved -> NON_RESERVED .)
    DESC            reduce using rule 189 (non_reserved -> NON_RESERVED .)
    NULLS           reduce using rule 189 (non_reserved -> NON_RESERVED .)
    THEN            reduce using rule 189 (non_reserved -> NON_RESERVED .)
    WHEN            reduce using rule 189 (non_reserved -> NON_RESERVED .)
    END             reduce using rule 189 (non_reserved -> NON_RESERVED .)
    ELSE            reduce using rule 189 (non_reserved -> NON_RESERVED .)


state 31

    (191) quoted_identifier -> BACKQUOTED_IDENTIFIER .

    PERIOD          reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    AS              reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    IDENTIFIER      reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    DIGIT_IDENTIFIER reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    QUOTED_IDENTIFIER reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    BACKQUOTED_IDENTIFIER reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    NON_RESERVED    reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    CROSS           reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    NATURAL         reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    INNER           reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    LEFT            reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    RIGHT           reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    FULL            reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    JOIN            reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    STRING          reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    LPAREN          reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    ASTERISK        reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    SLASH           reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    PERCENT         reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    CONCAT          reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    IS              reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    PLUS            reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    MINUS           reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    EQ              reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    NE              reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    LT              reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    LE              reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    GT              reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    GE              reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    NOT             reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    BETWEEN         reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    IN              reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    LIKE            reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    COMMA           reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    FROM            reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    INTERSECT       reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    UNION           reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    EXCEPT          reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    ORDER           reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    LIMIT           reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    $end            reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    RPAREN          reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    AND             reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    OR              reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    ASC             reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    DESC            reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    NULLS           reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    THEN            reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    GROUP           reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    HAVING          reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    WHERE           reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    ON              reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    USING           reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    WHEN            reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    END             reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)
    ELSE            reduce using rule 191 (quoted_identifier -> BACKQUOTED_IDENTIFIER .)


state 32

    (184) qualified_name -> identifier .

    PERIOD          reduce using rule 184 (qualified_name -> identifier .)
    AS              reduce using rule 184 (qualified_name -> identifier .)
    IDENTIFIER      reduce using rule 184 (qualified_name -> identifier .)
    DIGIT_IDENTIFIER reduce using rule 184 (qualified_name -> identifier .)
    QUOTED_IDENTIFIER reduce using rule 184 (qualified_name -> identifier .)
    BACKQUOTED_IDENTIFIER reduce using rule 184 (qualified_name -> identifier .)
    NON_RESERVED    reduce using rule 184 (qualified_name -> identifier .)
    CROSS           reduce using rule 184 (qualified_name -> identifier .)
    NATURAL         reduce using rule 184 (qualified_name -> identifier .)
    INNER           reduce using rule 184 (qualified_name -> identifier .)
    LEFT            reduce using rule 184 (qualified_name -> identifier .)
    RIGHT           reduce using rule 184 (qualified_name -> identifier .)
    FULL            reduce using rule 184 (qualified_name -> identifier .)
    JOIN            reduce using rule 184 (qualified_name -> identifier .)
    COMMA           reduce using rule 184 (qualified_name -> identifier .)
    WHERE           reduce using rule 184 (qualified_name -> identifier .)
    GROUP           reduce using rule 184 (qualified_name -> identifier .)
    HAVING          reduce using rule 184 (qualified_name -> identifier .)
    INTERSECT       reduce using rule 184 (qualified_name -> identifier .)
    UNION           reduce using rule 184 (qualified_name -> identifier .)
    EXCEPT          reduce using rule 184 (qualified_name -> identifier .)
    ORDER           reduce using rule 184 (qualified_name -> identifier .)
    LIMIT           reduce using rule 184 (qualified_name -> identifier .)
    $end            reduce using rule 184 (qualified_name -> identifier .)
    RPAREN          reduce using rule 184 (qualified_name -> identifier .)
    ON              reduce using rule 184 (qualified_name -> identifier .)
    USING           reduce using rule 184 (qualified_name -> identifier .)


state 33

    (20) query_term -> query_term UNION . set_quantifier_opt query_term_intersect
    (44) set_quantifier_opt -> . DISTINCT
    (45) set_quantifier_opt -> . ALL
    (46) set_quantifier_opt -> . empty
    (194) empty -> .

    DISTINCT        shift and go to state 42
    ALL             shift and go to state 41
    LPAREN          reduce using rule 194 (empty -> .)
    SELECT          reduce using rule 194 (empty -> .)
    TABLE           reduce using rule 194 (empty -> .)
    VALUES          reduce using rule 194 (empty -> .)

    empty                          shift and go to state 39
    set_quantifier_opt             shift and go to state 68

state 34

    (6) order_by_opt -> empty .

    LIMIT           reduce using rule 6 (order_by_opt -> empty .)
    $end            reduce using rule 6 (order_by_opt -> empty .)
    RPAREN          reduce using rule 6 (order_by_opt -> empty .)


state 35

    (21) query_term -> query_term EXCEPT . set_quantifier_opt query_term_intersect
    (44) set_quantifier_opt -> . DISTINCT
    (45) set_quantifier_opt -> . ALL
    (46) set_quantifier_opt -> . empty
    (194) empty -> .

    DISTINCT        shift and go to state 42
    ALL             shift and go to state 41
    LPAREN          reduce using rule 194 (empty -> .)
    SELECT          reduce using rule 194 (empty -> .)
    TABLE           reduce using rule 194 (empty -> .)
    VALUES          reduce using rule 194 (empty -> .)

    empty                          shift and go to state 39
    set_quantifier_opt             shift and go to state 69

state 36

    (5) order_by_opt -> ORDER . BY sort_items

    BY              shift and go to state 70


state 37

    (4) query_no_with -> query_term order_by_opt . limit_opt
    (16) limit_opt -> . LIMIT INTEGER
    (17) limit_opt -> . LIMIT ALL
    (18) limit_opt -> . empty
    (194) empty -> .

    LIMIT           shift and go to state 73
    $end            reduce using rule 194 (empty -> .)
    RPAREN          reduce using rule 194 (empty -> .)

    limit_opt                      shift and go to state 72
    empty                          shift and go to state 71

state 38

    (25) nonjoin_query_primary -> LPAREN query_term . RPAREN
    (20) query_term -> query_term . UNION set_quantifier_opt query_term_intersect
    (21) query_term -> query_term . EXCEPT set_quantifier_opt query_term_intersect

    RPAREN          shift and go to state 74
    UNION           shift and go to state 33
    EXCEPT          shift and go to state 35


state 39

    (46) set_quantifier_opt -> empty .

    LPAREN          reduce using rule 46 (set_quantifier_opt -> empty .)
    SELECT          reduce using rule 46 (set_quantifier_opt -> empty .)
    TABLE           reduce using rule 46 (set_quantifier_opt -> empty .)
    VALUES          reduce using rule 46 (set_quantifier_opt -> empty .)
    TOP             reduce using rule 46 (set_quantifier_opt -> empty .)
    ASTERISK        reduce using rule 46 (set_quantifier_opt -> empty .)
    PLUS            reduce using rule 46 (set_quantifier_opt -> empty .)
    MINUS           reduce using rule 46 (set_quantifier_opt -> empty .)
    NULL            reduce using rule 46 (set_quantifier_opt -> empty .)
    STRING          reduce using rule 46 (set_quantifier_opt -> empty .)
    DECIMAL         reduce using rule 46 (set_quantifier_opt -> empty .)
    INTEGER         reduce using rule 46 (set_quantifier_opt -> empty .)
    TRUE            reduce using rule 46 (set_quantifier_opt -> empty .)
    FALSE           reduce using rule 46 (set_quantifier_opt -> empty .)
    INTERVAL        reduce using rule 46 (set_quantifier_opt -> empty .)
    IDENTIFIER      reduce using rule 46 (set_quantifier_opt -> empty .)
    DIGIT_IDENTIFIER reduce using rule 46 (set_quantifier_opt -> empty .)
    CURRENT_DATE    reduce using rule 46 (set_quantifier_opt -> empty .)
    CURRENT_TIME    reduce using rule 46 (set_quantifier_opt -> empty .)
    CURRENT_TIMESTAMP reduce using rule 46 (set_quantifier_opt -> empty .)
    LOCALTIME       reduce using rule 46 (set_quantifier_opt -> empty .)
    LOCALTIMESTAMP  reduce using rule 46 (set_quantifier_opt -> empty .)
    QUOTED_IDENTIFIER reduce using rule 46 (set_quantifier_opt -> empty .)
    BACKQUOTED_IDENTIFIER reduce using rule 46 (set_quantifier_opt -> empty .)
    NON_RESERVED    reduce using rule 46 (set_quantifier_opt -> empty .)
    CASE            reduce using rule 46 (set_quantifier_opt -> empty .)


state 40

    (33) query_specification -> SELECT set_quantifier_opt . adql_top_opt select_items table_expression_opt
    (34) adql_top_opt -> . TOP INTEGER
    (35) adql_top_opt -> . empty
    (194) empty -> .

    TOP             shift and go to state 75
    ASTERISK        reduce using rule 194 (empty -> .)
    PLUS            reduce using rule 194 (empty -> .)
    MINUS           reduce using rule 194 (empty -> .)
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    adql_top_opt                   shift and go to state 77
    empty                          shift and go to state 76

state 41

    (45) set_quantifier_opt -> ALL .

    LPAREN          reduce using rule 45 (set_quantifier_opt -> ALL .)
    SELECT          reduce using rule 45 (set_quantifier_opt -> ALL .)
    TABLE           reduce using rule 45 (set_quantifier_opt -> ALL .)
    VALUES          reduce using rule 45 (set_quantifier_opt -> ALL .)
    TOP             reduce using rule 45 (set_quantifier_opt -> ALL .)
    ASTERISK        reduce using rule 45 (set_quantifier_opt -> ALL .)
    PLUS            reduce using rule 45 (set_quantifier_opt -> ALL .)
    MINUS           reduce using rule 45 (set_quantifier_opt -> ALL .)
    NULL            reduce using rule 45 (set_quantifier_opt -> ALL .)
    STRING          reduce using rule 45 (set_quantifier_opt -> ALL .)
    DECIMAL         reduce using rule 45 (set_quantifier_opt -> ALL .)
    INTEGER         reduce using rule 45 (set_quantifier_opt -> ALL .)
    TRUE            reduce using rule 45 (set_quantifier_opt -> ALL .)
    FALSE           reduce using rule 45 (set_quantifier_opt -> ALL .)
    INTERVAL        reduce using rule 45 (set_quantifier_opt -> ALL .)
    IDENTIFIER      reduce using rule 45 (set_quantifier_opt -> ALL .)
    DIGIT_IDENTIFIER reduce using rule 45 (set_quantifier_opt -> ALL .)
    CURRENT_DATE    reduce using rule 45 (set_quantifier_opt -> ALL .)
    CURRENT_TIME    reduce using rule 45 (set_quantifier_opt -> ALL .)
    CURRENT_TIMESTAMP reduce using rule 45 (set_quantifier_opt -> ALL .)
    LOCALTIME       reduce using rule 45 (set_quantifier_opt -> ALL .)
    LOCALTIMESTAMP  reduce using rule 45 (set_quantifier_opt -> ALL .)
    QUOTED_IDENTIFIER reduce using rule 45 (set_quantifier_opt -> ALL .)
    BACKQUOTED_IDENTIFIER reduce using rule 45 (set_quantifier_opt -> ALL .)
    NON_RESERVED    reduce using rule 45 (set_quantifier_opt -> ALL .)
    CASE            reduce using rule 45 (set_quantifier_opt -> ALL .)


state 42

    (44) set_quantifier_opt -> DISTINCT .

    LPAREN          reduce using rule 44 (set_quantifier_opt -> DISTINCT .)
    SELECT          reduce using rule 44 (set_quantifier_opt -> DISTINCT .)
    TABLE           reduce using rule 44 (set_quantifier_opt -> DISTINCT .)
    VALUES          reduce using rule 44 (set_quantifier_opt -> DISTINCT .)
    TOP             reduce using rule 44 (set_quantifier_opt -> DISTINCT .)
    ASTERISK        reduce using rule 44 (set_quantifier_opt -> DISTINCT .)
    PLUS            reduce using rule 44 (set_quantifier_opt -> DISTINCT .)
    MINUS           reduce using rule 44 (set_quantifier_opt -> DISTINCT .)
    NULL            reduce using rule 44 (set_quantifier_opt -> DISTINCT .)
    STRING          reduce using rule 44 (set_quantifier_opt -> DISTINCT .)
    DECIMAL         reduce using rule 44 (set_quantifier_opt -> DISTINCT .)
    INTEGER         reduce using rule 44 (set_quantifier_opt -> DISTINCT .)
    TRUE            reduce using rule 44 (set_quantifier_opt -> DISTINCT .)
    FALSE           reduce using rule 44 (set_quantifier_opt -> DISTINCT .)
    INTERVAL        reduce using rule 44 (set_quantifier_opt -> DISTINCT .)
    IDENTIFIER      reduce using rule 44 (set_quantifier_opt -> DISTINCT .)
    DIGIT_IDENTIFIER reduce using rule 44 (set_quantifier_opt -> DISTINCT .)
    CURRENT_DATE    reduce using rule 44 (set_quantifier_opt -> DISTINCT .)
    CURRENT_TIME    reduce using rule 44 (set_quantifier_opt -> DISTINCT .)
    CURRENT_TIMESTAMP reduce using rule 44 (set_quantifier_opt -> DISTINCT .)
    LOCALTIME       reduce using rule 44 (set_quantifier_opt -> DISTINCT .)
    LOCALTIMESTAMP  reduce using rule 44 (set_quantifier_opt -> DISTINCT .)
    QUOTED_IDENTIFIER reduce using rule 44 (set_quantifier_opt -> DISTINCT .)
    BACKQUOTED_IDENTIFIER reduce using rule 44 (set_quantifier_opt -> DISTINCT .)
    NON_RESERVED    reduce using rule 44 (set_quantifier_opt -> DISTINCT .)
    CASE            reduce using rule 44 (set_quantifier_opt -> DISTINCT .)


state 43

    (23) query_term_intersect -> query_term_intersect INTERSECT set_quantifier_opt . nonjoin_query_primary
    (24) nonjoin_query_primary -> . simple_table
    (25) nonjoin_query_primary -> . LPAREN query_term RPAREN
    (26) simple_table -> . query_specification
    (27) simple_table -> . explicit_table
    (28) simple_table -> . table_value_constructor
    (33) query_specification -> . SELECT set_quantifier_opt adql_top_opt select_items table_expression_opt
    (29) explicit_table -> . TABLE qualified_name
    (30) table_value_constructor -> . VALUES values_list

    LPAREN          shift and go to state 12
    SELECT          shift and go to state 13
    TABLE           shift and go to state 10
    VALUES          shift and go to state 3

    simple_table                   shift and go to state 2
    query_specification            shift and go to state 5
    table_value_constructor        shift and go to state 14
    explicit_table                 shift and go to state 4
    nonjoin_query_primary          shift and go to state 78

state 44

    (100) comparison_predicate -> value_expression . comparison_operator value_expression
    (101) between_predicate -> value_expression . not_opt BETWEEN value_expression AND value_expression
    (102) in_predicate -> value_expression . not_opt IN in_value
    (106) like_predicate -> value_expression . not_opt LIKE value_expression
    (107) null_predicate -> value_expression . IS not_opt NULL
    (109) value_expression -> value_expression . PLUS term
    (110) value_expression -> value_expression . MINUS term
    (153) comparison_operator -> . EQ
    (154) comparison_operator -> . NE
    (155) comparison_operator -> . LT
    (156) comparison_operator -> . LE
    (157) comparison_operator -> . GT
    (158) comparison_operator -> . GE
    (161) not_opt -> . NOT
    (162) not_opt -> . empty
    (194) empty -> .

    IS              shift and go to state 81
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    EQ              shift and go to state 87
    NE              shift and go to state 79
    LT              shift and go to state 86
    LE              shift and go to state 80
    GT              shift and go to state 84
    GE              shift and go to state 88
    NOT             shift and go to state 18
    BETWEEN         reduce using rule 194 (empty -> .)
    IN              reduce using rule 194 (empty -> .)
    LIKE            reduce using rule 194 (empty -> .)

    comparison_operator            shift and go to state 85
    empty                          shift and go to state 17
    not_opt                        shift and go to state 89

state 45

    (96) predicate -> in_predicate .

    AND             reduce using rule 96 (predicate -> in_predicate .)
    OR              reduce using rule 96 (predicate -> in_predicate .)
    COMMA           reduce using rule 96 (predicate -> in_predicate .)
    INTERSECT       reduce using rule 96 (predicate -> in_predicate .)
    UNION           reduce using rule 96 (predicate -> in_predicate .)
    EXCEPT          reduce using rule 96 (predicate -> in_predicate .)
    ORDER           reduce using rule 96 (predicate -> in_predicate .)
    LIMIT           reduce using rule 96 (predicate -> in_predicate .)
    $end            reduce using rule 96 (predicate -> in_predicate .)
    RPAREN          reduce using rule 96 (predicate -> in_predicate .)
    ASC             reduce using rule 96 (predicate -> in_predicate .)
    DESC            reduce using rule 96 (predicate -> in_predicate .)
    NULLS           reduce using rule 96 (predicate -> in_predicate .)
    THEN            reduce using rule 96 (predicate -> in_predicate .)
    GROUP           reduce using rule 96 (predicate -> in_predicate .)
    HAVING          reduce using rule 96 (predicate -> in_predicate .)
    CROSS           reduce using rule 96 (predicate -> in_predicate .)
    NATURAL         reduce using rule 96 (predicate -> in_predicate .)
    INNER           reduce using rule 96 (predicate -> in_predicate .)
    LEFT            reduce using rule 96 (predicate -> in_predicate .)
    RIGHT           reduce using rule 96 (predicate -> in_predicate .)
    FULL            reduce using rule 96 (predicate -> in_predicate .)
    JOIN            reduce using rule 96 (predicate -> in_predicate .)
    WHERE           reduce using rule 96 (predicate -> in_predicate .)
    ON              reduce using rule 96 (predicate -> in_predicate .)
    USING           reduce using rule 96 (predicate -> in_predicate .)


state 46

    (94) predicate -> comparison_predicate .

    AND             reduce using rule 94 (predicate -> comparison_predicate .)
    OR              reduce using rule 94 (predicate -> comparison_predicate .)
    COMMA           reduce using rule 94 (predicate -> comparison_predicate .)
    INTERSECT       reduce using rule 94 (predicate -> comparison_predicate .)
    UNION           reduce using rule 94 (predicate -> comparison_predicate .)
    EXCEPT          reduce using rule 94 (predicate -> comparison_predicate .)
    ORDER           reduce using rule 94 (predicate -> comparison_predicate .)
    LIMIT           reduce using rule 94 (predicate -> comparison_predicate .)
    $end            reduce using rule 94 (predicate -> comparison_predicate .)
    RPAREN          reduce using rule 94 (predicate -> comparison_predicate .)
    ASC             reduce using rule 94 (predicate -> comparison_predicate .)
    DESC            reduce using rule 94 (predicate -> comparison_predicate .)
    NULLS           reduce using rule 94 (predicate -> comparison_predicate .)
    THEN            reduce using rule 94 (predicate -> comparison_predicate .)
    GROUP           reduce using rule 94 (predicate -> comparison_predicate .)
    HAVING          reduce using rule 94 (predicate -> comparison_predicate .)
    CROSS           reduce using rule 94 (predicate -> comparison_predicate .)
    NATURAL         reduce using rule 94 (predicate -> comparison_predicate .)
    INNER           reduce using rule 94 (predicate -> comparison_predicate .)
    LEFT            reduce using rule 94 (predicate -> comparison_predicate .)
    RIGHT           reduce using rule 94 (predicate -> comparison_predicate .)
    FULL            reduce using rule 94 (predicate -> comparison_predicate .)
    JOIN            reduce using rule 94 (predicate -> comparison_predicate .)
    WHERE           reduce using rule 94 (predicate -> comparison_predicate .)
    ON              reduce using rule 94 (predicate -> comparison_predicate .)
    USING           reduce using rule 94 (predicate -> comparison_predicate .)


state 47

    (177) sign -> MINUS .

    LPAREN          reduce using rule 177 (sign -> MINUS .)
    NULL            reduce using rule 177 (sign -> MINUS .)
    STRING          reduce using rule 177 (sign -> MINUS .)
    DECIMAL         reduce using rule 177 (sign -> MINUS .)
    INTEGER         reduce using rule 177 (sign -> MINUS .)
    TRUE            reduce using rule 177 (sign -> MINUS .)
    FALSE           reduce using rule 177 (sign -> MINUS .)
    INTERVAL        reduce using rule 177 (sign -> MINUS .)
    IDENTIFIER      reduce using rule 177 (sign -> MINUS .)
    DIGIT_IDENTIFIER reduce using rule 177 (sign -> MINUS .)
    CURRENT_DATE    reduce using rule 177 (sign -> MINUS .)
    CURRENT_TIME    reduce using rule 177 (sign -> MINUS .)
    CURRENT_TIMESTAMP reduce using rule 177 (sign -> MINUS .)
    LOCALTIME       reduce using rule 177 (sign -> MINUS .)
    LOCALTIMESTAMP  reduce using rule 177 (sign -> MINUS .)
    QUOTED_IDENTIFIER reduce using rule 177 (sign -> MINUS .)
    BACKQUOTED_IDENTIFIER reduce using rule 177 (sign -> MINUS .)
    NON_RESERVED    reduce using rule 177 (sign -> MINUS .)
    CASE            reduce using rule 177 (sign -> MINUS .)


state 48

    (97) predicate -> like_predicate .

    AND             reduce using rule 97 (predicate -> like_predicate .)
    OR              reduce using rule 97 (predicate -> like_predicate .)
    COMMA           reduce using rule 97 (predicate -> like_predicate .)
    INTERSECT       reduce using rule 97 (predicate -> like_predicate .)
    UNION           reduce using rule 97 (predicate -> like_predicate .)
    EXCEPT          reduce using rule 97 (predicate -> like_predicate .)
    ORDER           reduce using rule 97 (predicate -> like_predicate .)
    LIMIT           reduce using rule 97 (predicate -> like_predicate .)
    $end            reduce using rule 97 (predicate -> like_predicate .)
    RPAREN          reduce using rule 97 (predicate -> like_predicate .)
    ASC             reduce using rule 97 (predicate -> like_predicate .)
    DESC            reduce using rule 97 (predicate -> like_predicate .)
    NULLS           reduce using rule 97 (predicate -> like_predicate .)
    THEN            reduce using rule 97 (predicate -> like_predicate .)
    GROUP           reduce using rule 97 (predicate -> like_predicate .)
    HAVING          reduce using rule 97 (predicate -> like_predicate .)
    CROSS           reduce using rule 97 (predicate -> like_predicate .)
    NATURAL         reduce using rule 97 (predicate -> like_predicate .)
    INNER           reduce using rule 97 (predicate -> like_predicate .)
    LEFT            reduce using rule 97 (predicate -> like_predicate .)
    RIGHT           reduce using rule 97 (predicate -> like_predicate .)
    FULL            reduce using rule 97 (predicate -> like_predicate .)
    JOIN            reduce using rule 97 (predicate -> like_predicate .)
    WHERE           reduce using rule 97 (predicate -> like_predicate .)
    ON              reduce using rule 97 (predicate -> like_predicate .)
    USING           reduce using rule 97 (predicate -> like_predicate .)


state 49

    (117) factor -> sign_opt . primary_expression
    (118) primary_expression -> . parenthetic_primary_expression
    (119) primary_expression -> . base_primary_expression
    (120) parenthetic_primary_expression -> . LPAREN base_primary_expression RPAREN
    (121) base_primary_expression -> . NULL
    (122) base_primary_expression -> . number
    (123) base_primary_expression -> . boolean_value
    (124) base_primary_expression -> . STRING
    (125) base_primary_expression -> . interval
    (126) base_primary_expression -> . identifier STRING
    (127) base_primary_expression -> . qualified_name
    (128) base_primary_expression -> . function_call
    (129) base_primary_expression -> . date_time
    (130) base_primary_expression -> . case_specification
    (131) base_primary_expression -> . subquery
    (192) number -> . DECIMAL
    (193) number -> . INTEGER
    (163) boolean_value -> . TRUE
    (164) boolean_value -> . FALSE
    (165) interval -> . INTERVAL sign_opt STRING interval_field interval_end_opt
    (185) identifier -> . IDENTIFIER
    (186) identifier -> . quoted_identifier
    (187) identifier -> . non_reserved
    (188) identifier -> . DIGIT_IDENTIFIER
    (183) qualified_name -> . qualified_name PERIOD identifier
    (184) qualified_name -> . identifier
    (132) function_call -> . qualified_name LPAREN call_list RPAREN
    (146) date_time -> . CURRENT_DATE
    (147) date_time -> . CURRENT_TIME integer_param_opt
    (148) date_time -> . CURRENT_TIMESTAMP integer_param_opt
    (149) date_time -> . LOCALTIME integer_param_opt
    (150) date_time -> . LOCALTIMESTAMP integer_param_opt
    (133) case_specification -> . simple_case
    (134) case_specification -> . searched_case
    (2) subquery -> . LPAREN query RPAREN
    (190) quoted_identifier -> . QUOTED_IDENTIFIER
    (191) quoted_identifier -> . BACKQUOTED_IDENTIFIER
    (189) non_reserved -> . NON_RESERVED
    (135) simple_case -> . CASE value_expression when_clauses else_opt END
    (136) searched_case -> . CASE when_clauses else_opt END

    LPAREN          shift and go to state 114
    NULL            shift and go to state 102
    STRING          shift and go to state 94
    DECIMAL         shift and go to state 109
    INTEGER         shift and go to state 115
    TRUE            shift and go to state 103
    FALSE           shift and go to state 98
    INTERVAL        shift and go to state 104
    IDENTIFIER      shift and go to state 27
    DIGIT_IDENTIFIER shift and go to state 26
    CURRENT_DATE    shift and go to state 92
    CURRENT_TIME    shift and go to state 112
    CURRENT_TIMESTAMP shift and go to state 91
    LOCALTIME       shift and go to state 96
    LOCALTIMESTAMP  shift and go to state 101
    QUOTED_IDENTIFIER shift and go to state 24
    BACKQUOTED_IDENTIFIER shift and go to state 31
    NON_RESERVED    shift and go to state 30
    CASE            shift and go to state 97

    quoted_identifier              shift and go to state 25
    date_time                      shift and go to state 116
    interval                       shift and go to state 105
    searched_case                  shift and go to state 95
    subquery                       shift and go to state 90
    number                         shift and go to state 107
    case_specification             shift and go to state 108
    identifier                     shift and go to state 110
    function_call                  shift and go to state 106
    boolean_value                  shift and go to state 93
    non_reserved                   shift and go to state 28
    parenthetic_primary_expression shift and go to state 111
    qualified_name                 shift and go to state 99
    simple_case                    shift and go to state 113
    primary_expression             shift and go to state 100
    base_primary_expression        shift and go to state 117

state 50

    (98) predicate -> null_predicate .

    AND             reduce using rule 98 (predicate -> null_predicate .)
    OR              reduce using rule 98 (predicate -> null_predicate .)
    COMMA           reduce using rule 98 (predicate -> null_predicate .)
    INTERSECT       reduce using rule 98 (predicate -> null_predicate .)
    UNION           reduce using rule 98 (predicate -> null_predicate .)
    EXCEPT          reduce using rule 98 (predicate -> null_predicate .)
    ORDER           reduce using rule 98 (predicate -> null_predicate .)
    LIMIT           reduce using rule 98 (predicate -> null_predicate .)
    $end            reduce using rule 98 (predicate -> null_predicate .)
    RPAREN          reduce using rule 98 (predicate -> null_predicate .)
    ASC             reduce using rule 98 (predicate -> null_predicate .)
    DESC            reduce using rule 98 (predicate -> null_predicate .)
    NULLS           reduce using rule 98 (predicate -> null_predicate .)
    THEN            reduce using rule 98 (predicate -> null_predicate .)
    GROUP           reduce using rule 98 (predicate -> null_predicate .)
    HAVING          reduce using rule 98 (predicate -> null_predicate .)
    CROSS           reduce using rule 98 (predicate -> null_predicate .)
    NATURAL         reduce using rule 98 (predicate -> null_predicate .)
    INNER           reduce using rule 98 (predicate -> null_predicate .)
    LEFT            reduce using rule 98 (predicate -> null_predicate .)
    RIGHT           reduce using rule 98 (predicate -> null_predicate .)
    FULL            reduce using rule 98 (predicate -> null_predicate .)
    JOIN            reduce using rule 98 (predicate -> null_predicate .)
    WHERE           reduce using rule 98 (predicate -> null_predicate .)
    ON              reduce using rule 98 (predicate -> null_predicate .)
    USING           reduce using rule 98 (predicate -> null_predicate .)


state 51

    (95) predicate -> between_predicate .

    AND             reduce using rule 95 (predicate -> between_predicate .)
    OR              reduce using rule 95 (predicate -> between_predicate .)
    COMMA           reduce using rule 95 (predicate -> between_predicate .)
    INTERSECT       reduce using rule 95 (predicate -> between_predicate .)
    UNION           reduce using rule 95 (predicate -> between_predicate .)
    EXCEPT          reduce using rule 95 (predicate -> between_predicate .)
    ORDER           reduce using rule 95 (predicate -> between_predicate .)
    LIMIT           reduce using rule 95 (predicate -> between_predicate .)
    $end            reduce using rule 95 (predicate -> between_predicate .)
    RPAREN          reduce using rule 95 (predicate -> between_predicate .)
    ASC             reduce using rule 95 (predicate -> between_predicate .)
    DESC            reduce using rule 95 (predicate -> between_predicate .)
    NULLS           reduce using rule 95 (predicate -> between_predicate .)
    THEN            reduce using rule 95 (predicate -> between_predicate .)
    GROUP           reduce using rule 95 (predicate -> between_predicate .)
    HAVING          reduce using rule 95 (predicate -> between_predicate .)
    CROSS           reduce using rule 95 (predicate -> between_predicate .)
    NATURAL         reduce using rule 95 (predicate -> between_predicate .)
    INNER           reduce using rule 95 (predicate -> between_predicate .)
    LEFT            reduce using rule 95 (predicate -> between_predicate .)
    RIGHT           reduce using rule 95 (predicate -> between_predicate .)
    FULL            reduce using rule 95 (predicate -> between_predicate .)
    JOIN            reduce using rule 95 (predicate -> between_predicate .)
    WHERE           reduce using rule 95 (predicate -> between_predicate .)
    ON              reduce using rule 95 (predicate -> between_predicate .)
    USING           reduce using rule 95 (predicate -> between_predicate .)


state 52

    (108) exists_predicate -> EXISTS . subquery
    (2) subquery -> . LPAREN query RPAREN

    LPAREN          shift and go to state 118

    subquery                       shift and go to state 119

state 53

    (99) predicate -> exists_predicate .

    AND             reduce using rule 99 (predicate -> exists_predicate .)
    OR              reduce using rule 99 (predicate -> exists_predicate .)
    COMMA           reduce using rule 99 (predicate -> exists_predicate .)
    INTERSECT       reduce using rule 99 (predicate -> exists_predicate .)
    UNION           reduce using rule 99 (predicate -> exists_predicate .)
    EXCEPT          reduce using rule 99 (predicate -> exists_predicate .)
    ORDER           reduce using rule 99 (predicate -> exists_predicate .)
    LIMIT           reduce using rule 99 (predicate -> exists_predicate .)
    $end            reduce using rule 99 (predicate -> exists_predicate .)
    RPAREN          reduce using rule 99 (predicate -> exists_predicate .)
    ASC             reduce using rule 99 (predicate -> exists_predicate .)
    DESC            reduce using rule 99 (predicate -> exists_predicate .)
    NULLS           reduce using rule 99 (predicate -> exists_predicate .)
    THEN            reduce using rule 99 (predicate -> exists_predicate .)
    GROUP           reduce using rule 99 (predicate -> exists_predicate .)
    HAVING          reduce using rule 99 (predicate -> exists_predicate .)
    CROSS           reduce using rule 99 (predicate -> exists_predicate .)
    NATURAL         reduce using rule 99 (predicate -> exists_predicate .)
    INNER           reduce using rule 99 (predicate -> exists_predicate .)
    LEFT            reduce using rule 99 (predicate -> exists_predicate .)
    RIGHT           reduce using rule 99 (predicate -> exists_predicate .)
    FULL            reduce using rule 99 (predicate -> exists_predicate .)
    JOIN            reduce using rule 99 (predicate -> exists_predicate .)
    WHERE           reduce using rule 99 (predicate -> exists_predicate .)
    ON              reduce using rule 99 (predicate -> exists_predicate .)
    USING           reduce using rule 99 (predicate -> exists_predicate .)


state 54

    (111) value_expression -> term .
    (112) term -> term . ASTERISK factor
    (113) term -> term . SLASH factor
    (114) term -> term . PERCENT factor
    (115) term -> term . CONCAT factor

    PLUS            reduce using rule 111 (value_expression -> term .)
    MINUS           reduce using rule 111 (value_expression -> term .)
    RPAREN          reduce using rule 111 (value_expression -> term .)
    COMMA           reduce using rule 111 (value_expression -> term .)
    IS              reduce using rule 111 (value_expression -> term .)
    EQ              reduce using rule 111 (value_expression -> term .)
    NE              reduce using rule 111 (value_expression -> term .)
    LT              reduce using rule 111 (value_expression -> term .)
    LE              reduce using rule 111 (value_expression -> term .)
    GT              reduce using rule 111 (value_expression -> term .)
    GE              reduce using rule 111 (value_expression -> term .)
    NOT             reduce using rule 111 (value_expression -> term .)
    BETWEEN         reduce using rule 111 (value_expression -> term .)
    IN              reduce using rule 111 (value_expression -> term .)
    LIKE            reduce using rule 111 (value_expression -> term .)
    WHEN            reduce using rule 111 (value_expression -> term .)
    END             reduce using rule 111 (value_expression -> term .)
    AND             reduce using rule 111 (value_expression -> term .)
    OR              reduce using rule 111 (value_expression -> term .)
    INTERSECT       reduce using rule 111 (value_expression -> term .)
    UNION           reduce using rule 111 (value_expression -> term .)
    EXCEPT          reduce using rule 111 (value_expression -> term .)
    ORDER           reduce using rule 111 (value_expression -> term .)
    LIMIT           reduce using rule 111 (value_expression -> term .)
    $end            reduce using rule 111 (value_expression -> term .)
    ASC             reduce using rule 111 (value_expression -> term .)
    DESC            reduce using rule 111 (value_expression -> term .)
    NULLS           reduce using rule 111 (value_expression -> term .)
    THEN            reduce using rule 111 (value_expression -> term .)
    GROUP           reduce using rule 111 (value_expression -> term .)
    HAVING          reduce using rule 111 (value_expression -> term .)
    CROSS           reduce using rule 111 (value_expression -> term .)
    NATURAL         reduce using rule 111 (value_expression -> term .)
    INNER           reduce using rule 111 (value_expression -> term .)
    LEFT            reduce using rule 111 (value_expression -> term .)
    RIGHT           reduce using rule 111 (value_expression -> term .)
    FULL            reduce using rule 111 (value_expression -> term .)
    JOIN            reduce using rule 111 (value_expression -> term .)
    WHERE           reduce using rule 111 (value_expression -> term .)
    ON              reduce using rule 111 (value_expression -> term .)
    USING           reduce using rule 111 (value_expression -> term .)
    AS              reduce using rule 111 (value_expression -> term .)
    IDENTIFIER      reduce using rule 111 (value_expression -> term .)
    DIGIT_IDENTIFIER reduce using rule 111 (value_expression -> term .)
    QUOTED_IDENTIFIER reduce using rule 111 (value_expression -> term .)
    BACKQUOTED_IDENTIFIER reduce using rule 111 (value_expression -> term .)
    NON_RESERVED    reduce using rule 111 (value_expression -> term .)
    FROM            reduce using rule 111 (value_expression -> term .)
    ELSE            reduce using rule 111 (value_expression -> term .)
    ASTERISK        shift and go to state 122
    SLASH           shift and go to state 120
    PERCENT         shift and go to state 121
    CONCAT          shift and go to state 123


state 55

    (175) sign_opt -> empty .

    LPAREN          reduce using rule 175 (sign_opt -> empty .)
    NULL            reduce using rule 175 (sign_opt -> empty .)
    STRING          reduce using rule 175 (sign_opt -> empty .)
    DECIMAL         reduce using rule 175 (sign_opt -> empty .)
    INTEGER         reduce using rule 175 (sign_opt -> empty .)
    TRUE            reduce using rule 175 (sign_opt -> empty .)
    FALSE           reduce using rule 175 (sign_opt -> empty .)
    INTERVAL        reduce using rule 175 (sign_opt -> empty .)
    IDENTIFIER      reduce using rule 175 (sign_opt -> empty .)
    DIGIT_IDENTIFIER reduce using rule 175 (sign_opt -> empty .)
    CURRENT_DATE    reduce using rule 175 (sign_opt -> empty .)
    CURRENT_TIME    reduce using rule 175 (sign_opt -> empty .)
    CURRENT_TIMESTAMP reduce using rule 175 (sign_opt -> empty .)
    LOCALTIME       reduce using rule 175 (sign_opt -> empty .)
    LOCALTIMESTAMP  reduce using rule 175 (sign_opt -> empty .)
    QUOTED_IDENTIFIER reduce using rule 175 (sign_opt -> empty .)
    BACKQUOTED_IDENTIFIER reduce using rule 175 (sign_opt -> empty .)
    NON_RESERVED    reduce using rule 175 (sign_opt -> empty .)
    CASE            reduce using rule 175 (sign_opt -> empty .)


state 56

    (174) sign_opt -> sign .

    LPAREN          reduce using rule 174 (sign_opt -> sign .)
    NULL            reduce using rule 174 (sign_opt -> sign .)
    STRING          reduce using rule 174 (sign_opt -> sign .)
    DECIMAL         reduce using rule 174 (sign_opt -> sign .)
    INTEGER         reduce using rule 174 (sign_opt -> sign .)
    TRUE            reduce using rule 174 (sign_opt -> sign .)
    FALSE           reduce using rule 174 (sign_opt -> sign .)
    INTERVAL        reduce using rule 174 (sign_opt -> sign .)
    IDENTIFIER      reduce using rule 174 (sign_opt -> sign .)
    DIGIT_IDENTIFIER reduce using rule 174 (sign_opt -> sign .)
    CURRENT_DATE    reduce using rule 174 (sign_opt -> sign .)
    CURRENT_TIME    reduce using rule 174 (sign_opt -> sign .)
    CURRENT_TIMESTAMP reduce using rule 174 (sign_opt -> sign .)
    LOCALTIME       reduce using rule 174 (sign_opt -> sign .)
    LOCALTIMESTAMP  reduce using rule 174 (sign_opt -> sign .)
    QUOTED_IDENTIFIER reduce using rule 174 (sign_opt -> sign .)
    BACKQUOTED_IDENTIFIER reduce using rule 174 (sign_opt -> sign .)
    NON_RESERVED    reduce using rule 174 (sign_opt -> sign .)
    CASE            reduce using rule 174 (sign_opt -> sign .)


state 57

    (116) term -> factor .

    ASTERISK        reduce using rule 116 (term -> factor .)
    SLASH           reduce using rule 116 (term -> factor .)
    PERCENT         reduce using rule 116 (term -> factor .)
    CONCAT          reduce using rule 116 (term -> factor .)
    PLUS            reduce using rule 116 (term -> factor .)
    MINUS           reduce using rule 116 (term -> factor .)
    AND             reduce using rule 116 (term -> factor .)
    OR              reduce using rule 116 (term -> factor .)
    COMMA           reduce using rule 116 (term -> factor .)
    INTERSECT       reduce using rule 116 (term -> factor .)
    UNION           reduce using rule 116 (term -> factor .)
    EXCEPT          reduce using rule 116 (term -> factor .)
    ORDER           reduce using rule 116 (term -> factor .)
    LIMIT           reduce using rule 116 (term -> factor .)
    $end            reduce using rule 116 (term -> factor .)
    RPAREN          reduce using rule 116 (term -> factor .)
    ASC             reduce using rule 116 (term -> factor .)
    DESC            reduce using rule 116 (term -> factor .)
    NULLS           reduce using rule 116 (term -> factor .)
    THEN            reduce using rule 116 (term -> factor .)
    GROUP           reduce using rule 116 (term -> factor .)
    HAVING          reduce using rule 116 (term -> factor .)
    CROSS           reduce using rule 116 (term -> factor .)
    NATURAL         reduce using rule 116 (term -> factor .)
    INNER           reduce using rule 116 (term -> factor .)
    LEFT            reduce using rule 116 (term -> factor .)
    RIGHT           reduce using rule 116 (term -> factor .)
    FULL            reduce using rule 116 (term -> factor .)
    JOIN            reduce using rule 116 (term -> factor .)
    WHERE           reduce using rule 116 (term -> factor .)
    ON              reduce using rule 116 (term -> factor .)
    USING           reduce using rule 116 (term -> factor .)
    ELSE            reduce using rule 116 (term -> factor .)
    WHEN            reduce using rule 116 (term -> factor .)
    END             reduce using rule 116 (term -> factor .)
    AS              reduce using rule 116 (term -> factor .)
    IDENTIFIER      reduce using rule 116 (term -> factor .)
    DIGIT_IDENTIFIER reduce using rule 116 (term -> factor .)
    QUOTED_IDENTIFIER reduce using rule 116 (term -> factor .)
    BACKQUOTED_IDENTIFIER reduce using rule 116 (term -> factor .)
    NON_RESERVED    reduce using rule 116 (term -> factor .)
    FROM            reduce using rule 116 (term -> factor .)
    IS              reduce using rule 116 (term -> factor .)
    EQ              reduce using rule 116 (term -> factor .)
    NE              reduce using rule 116 (term -> factor .)
    LT              reduce using rule 116 (term -> factor .)
    LE              reduce using rule 116 (term -> factor .)
    GT              reduce using rule 116 (term -> factor .)
    GE              reduce using rule 116 (term -> factor .)
    NOT             reduce using rule 116 (term -> factor .)
    BETWEEN         reduce using rule 116 (term -> factor .)
    IN              reduce using rule 116 (term -> factor .)
    LIKE            reduce using rule 116 (term -> factor .)


state 58

    (92) boolean_primary -> parenthetic_expression .

    AND             reduce using rule 92 (boolean_primary -> parenthetic_expression .)
    OR              reduce using rule 92 (boolean_primary -> parenthetic_expression .)
    COMMA           reduce using rule 92 (boolean_primary -> parenthetic_expression .)
    INTERSECT       reduce using rule 92 (boolean_primary -> parenthetic_expression .)
    UNION           reduce using rule 92 (boolean_primary -> parenthetic_expression .)
    EXCEPT          reduce using rule 92 (boolean_primary -> parenthetic_expression .)
    ORDER           reduce using rule 92 (boolean_primary -> parenthetic_expression .)
    LIMIT           reduce using rule 92 (boolean_primary -> parenthetic_expression .)
    $end            reduce using rule 92 (boolean_primary -> parenthetic_expression .)
    RPAREN          reduce using rule 92 (boolean_primary -> parenthetic_expression .)
    ASC             reduce using rule 92 (boolean_primary -> parenthetic_expression .)
    DESC            reduce using rule 92 (boolean_primary -> parenthetic_expression .)
    NULLS           reduce using rule 92 (boolean_primary -> parenthetic_expression .)
    THEN            reduce using rule 92 (boolean_primary -> parenthetic_expression .)
    GROUP           reduce using rule 92 (boolean_primary -> parenthetic_expression .)
    HAVING          reduce using rule 92 (boolean_primary -> parenthetic_expression .)
    CROSS           reduce using rule 92 (boolean_primary -> parenthetic_expression .)
    NATURAL         reduce using rule 92 (boolean_primary -> parenthetic_expression .)
    INNER           reduce using rule 92 (boolean_primary -> parenthetic_expression .)
    LEFT            reduce using rule 92 (boolean_primary -> parenthetic_expression .)
    RIGHT           reduce using rule 92 (boolean_primary -> parenthetic_expression .)
    FULL            reduce using rule 92 (boolean_primary -> parenthetic_expression .)
    JOIN            reduce using rule 92 (boolean_primary -> parenthetic_expression .)
    WHERE           reduce using rule 92 (boolean_primary -> parenthetic_expression .)
    ON              reduce using rule 92 (boolean_primary -> parenthetic_expression .)
    USING           reduce using rule 92 (boolean_primary -> parenthetic_expression .)


state 59

    (89) boolean_factor -> not_opt boolean_test .

    AND             reduce using rule 89 (boolean_factor -> not_opt boolean_test .)
    OR              reduce using rule 89 (boolean_factor -> not_opt boolean_test .)
    COMMA           reduce using rule 89 (boolean_factor -> not_opt boolean_test .)
    INTERSECT       reduce using rule 89 (boolean_factor -> not_opt boolean_test .)
    UNION           reduce using rule 89 (boolean_factor -> not_opt boolean_test .)
    EXCEPT          reduce using rule 89 (boolean_factor -> not_opt boolean_test .)
    ORDER           reduce using rule 89 (boolean_factor -> not_opt boolean_test .)
    LIMIT           reduce using rule 89 (boolean_factor -> not_opt boolean_test .)
    $end            reduce using rule 89 (boolean_factor -> not_opt boolean_test .)
    RPAREN          reduce using rule 89 (boolean_factor -> not_opt boolean_test .)
    ASC             reduce using rule 89 (boolean_factor -> not_opt boolean_test .)
    DESC            reduce using rule 89 (boolean_factor -> not_opt boolean_test .)
    NULLS           reduce using rule 89 (boolean_factor -> not_opt boolean_test .)
    THEN            reduce using rule 89 (boolean_factor -> not_opt boolean_test .)
    GROUP           reduce using rule 89 (boolean_factor -> not_opt boolean_test .)
    HAVING          reduce using rule 89 (boolean_factor -> not_opt boolean_test .)
    CROSS           reduce using rule 89 (boolean_factor -> not_opt boolean_test .)
    NATURAL         reduce using rule 89 (boolean_factor -> not_opt boolean_test .)
    INNER           reduce using rule 89 (boolean_factor -> not_opt boolean_test .)
    LEFT            reduce using rule 89 (boolean_factor -> not_opt boolean_test .)
    RIGHT           reduce using rule 89 (boolean_factor -> not_opt boolean_test .)
    FULL            reduce using rule 89 (boolean_factor -> not_opt boolean_test .)
    JOIN            reduce using rule 89 (boolean_factor -> not_opt boolean_test .)
    WHERE           reduce using rule 89 (boolean_factor -> not_opt boolean_test .)
    ON              reduce using rule 89 (boolean_factor -> not_opt boolean_test .)
    USING           reduce using rule 89 (boolean_factor -> not_opt boolean_test .)


state 60

    (91) boolean_primary -> predicate .

    AND             reduce using rule 91 (boolean_primary -> predicate .)
    OR              reduce using rule 91 (boolean_primary -> predicate .)
    COMMA           reduce using rule 91 (boolean_primary -> predicate .)
    INTERSECT       reduce using rule 91 (boolean_primary -> predicate .)
    UNION           reduce using rule 91 (boolean_primary -> predicate .)
    EXCEPT          reduce using rule 91 (boolean_primary -> predicate .)
    ORDER           reduce using rule 91 (boolean_primary -> predicate .)
    LIMIT           reduce using rule 91 (boolean_primary -> predicate .)
    $end            reduce using rule 91 (boolean_primary -> predicate .)
    RPAREN          reduce using rule 91 (boolean_primary -> predicate .)
    ASC             reduce using rule 91 (boolean_primary -> predicate .)
    DESC            reduce using rule 91 (boolean_primary -> predicate .)
    NULLS           reduce using rule 91 (boolean_primary -> predicate .)
    THEN            reduce using rule 91 (boolean_primary -> predicate .)
    GROUP           reduce using rule 91 (boolean_primary -> predicate .)
    HAVING          reduce using rule 91 (boolean_primary -> predicate .)
    CROSS           reduce using rule 91 (boolean_primary -> predicate .)
    NATURAL         reduce using rule 91 (boolean_primary -> predicate .)
    INNER           reduce using rule 91 (boolean_primary -> predicate .)
    LEFT            reduce using rule 91 (boolean_primary -> predicate .)
    RIGHT           reduce using rule 91 (boolean_primary -> predicate .)
    FULL            reduce using rule 91 (boolean_primary -> predicate .)
    JOIN            reduce using rule 91 (boolean_primary -> predicate .)
    WHERE           reduce using rule 91 (boolean_primary -> predicate .)
    ON              reduce using rule 91 (boolean_primary -> predicate .)
    USING           reduce using rule 91 (boolean_primary -> predicate .)


state 61

    (90) boolean_test -> boolean_primary .

    AND             reduce using rule 90 (boolean_test -> boolean_primary .)
    OR              reduce using rule 90 (boolean_test -> boolean_primary .)
    COMMA           reduce using rule 90 (boolean_test -> boolean_primary .)
    INTERSECT       reduce using rule 90 (boolean_test -> boolean_primary .)
    UNION           reduce using rule 90 (boolean_test -> boolean_primary .)
    EXCEPT          reduce using rule 90 (boolean_test -> boolean_primary .)
    ORDER           reduce using rule 90 (boolean_test -> boolean_primary .)
    LIMIT           reduce using rule 90 (boolean_test -> boolean_primary .)
    $end            reduce using rule 90 (boolean_test -> boolean_primary .)
    RPAREN          reduce using rule 90 (boolean_test -> boolean_primary .)
    ASC             reduce using rule 90 (boolean_test -> boolean_primary .)
    DESC            reduce using rule 90 (boolean_test -> boolean_primary .)
    NULLS           reduce using rule 90 (boolean_test -> boolean_primary .)
    THEN            reduce using rule 90 (boolean_test -> boolean_primary .)
    GROUP           reduce using rule 90 (boolean_test -> boolean_primary .)
    HAVING          reduce using rule 90 (boolean_test -> boolean_primary .)
    CROSS           reduce using rule 90 (boolean_test -> boolean_primary .)
    NATURAL         reduce using rule 90 (boolean_test -> boolean_primary .)
    INNER           reduce using rule 90 (boolean_test -> boolean_primary .)
    LEFT            reduce using rule 90 (boolean_test -> boolean_primary .)
    RIGHT           reduce using rule 90 (boolean_test -> boolean_primary .)
    FULL            reduce using rule 90 (boolean_test -> boolean_primary .)
    JOIN            reduce using rule 90 (boolean_test -> boolean_primary .)
    WHERE           reduce using rule 90 (boolean_test -> boolean_primary .)
    ON              reduce using rule 90 (boolean_test -> boolean_primary .)
    USING           reduce using rule 90 (boolean_test -> boolean_primary .)


state 62

    (93) parenthetic_expression -> RPAREN . expression RPAREN
    (84) expression -> . search_condition
    (85) search_condition -> . boolean_term
    (86) search_condition -> . search_condition OR boolean_term
    (87) boolean_term -> . boolean_factor
    (88) boolean_term -> . boolean_term AND boolean_factor
    (89) boolean_factor -> . not_opt boolean_test
    (161) not_opt -> . NOT
    (162) not_opt -> . empty
    (194) empty -> .

    NOT             shift and go to state 18
    RPAREN          reduce using rule 194 (empty -> .)
    EXISTS          reduce using rule 194 (empty -> .)
    PLUS            reduce using rule 194 (empty -> .)
    MINUS           reduce using rule 194 (empty -> .)
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    search_condition               shift and go to state 20
    boolean_factor                 shift and go to state 16
    empty                          shift and go to state 17
    not_opt                        shift and go to state 19
    expression                     shift and go to state 124
    boolean_term                   shift and go to state 23

state 63

    (176) sign -> PLUS .

    LPAREN          reduce using rule 176 (sign -> PLUS .)
    NULL            reduce using rule 176 (sign -> PLUS .)
    STRING          reduce using rule 176 (sign -> PLUS .)
    DECIMAL         reduce using rule 176 (sign -> PLUS .)
    INTEGER         reduce using rule 176 (sign -> PLUS .)
    TRUE            reduce using rule 176 (sign -> PLUS .)
    FALSE           reduce using rule 176 (sign -> PLUS .)
    INTERVAL        reduce using rule 176 (sign -> PLUS .)
    IDENTIFIER      reduce using rule 176 (sign -> PLUS .)
    DIGIT_IDENTIFIER reduce using rule 176 (sign -> PLUS .)
    CURRENT_DATE    reduce using rule 176 (sign -> PLUS .)
    CURRENT_TIME    reduce using rule 176 (sign -> PLUS .)
    CURRENT_TIMESTAMP reduce using rule 176 (sign -> PLUS .)
    LOCALTIME       reduce using rule 176 (sign -> PLUS .)
    LOCALTIMESTAMP  reduce using rule 176 (sign -> PLUS .)
    QUOTED_IDENTIFIER reduce using rule 176 (sign -> PLUS .)
    BACKQUOTED_IDENTIFIER reduce using rule 176 (sign -> PLUS .)
    NON_RESERVED    reduce using rule 176 (sign -> PLUS .)
    CASE            reduce using rule 176 (sign -> PLUS .)


state 64

    (86) search_condition -> search_condition OR . boolean_term
    (87) boolean_term -> . boolean_factor
    (88) boolean_term -> . boolean_term AND boolean_factor
    (89) boolean_factor -> . not_opt boolean_test
    (161) not_opt -> . NOT
    (162) not_opt -> . empty
    (194) empty -> .

    NOT             shift and go to state 18
    RPAREN          reduce using rule 194 (empty -> .)
    EXISTS          reduce using rule 194 (empty -> .)
    PLUS            reduce using rule 194 (empty -> .)
    MINUS           reduce using rule 194 (empty -> .)
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    boolean_factor                 shift and go to state 16
    empty                          shift and go to state 17
    not_opt                        shift and go to state 19
    boolean_term                   shift and go to state 125

state 65

    (31) values_list -> values_list COMMA . expression
    (84) expression -> . search_condition
    (85) search_condition -> . boolean_term
    (86) search_condition -> . search_condition OR boolean_term
    (87) boolean_term -> . boolean_factor
    (88) boolean_term -> . boolean_term AND boolean_factor
    (89) boolean_factor -> . not_opt boolean_test
    (161) not_opt -> . NOT
    (162) not_opt -> . empty
    (194) empty -> .

    NOT             shift and go to state 18
    RPAREN          reduce using rule 194 (empty -> .)
    EXISTS          reduce using rule 194 (empty -> .)
    PLUS            reduce using rule 194 (empty -> .)
    MINUS           reduce using rule 194 (empty -> .)
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    search_condition               shift and go to state 20
    boolean_factor                 shift and go to state 16
    empty                          shift and go to state 17
    not_opt                        shift and go to state 19
    expression                     shift and go to state 126
    boolean_term                   shift and go to state 23

state 66

    (88) boolean_term -> boolean_term AND . boolean_factor
    (89) boolean_factor -> . not_opt boolean_test
    (161) not_opt -> . NOT
    (162) not_opt -> . empty
    (194) empty -> .

    NOT             shift and go to state 18
    RPAREN          reduce using rule 194 (empty -> .)
    EXISTS          reduce using rule 194 (empty -> .)
    PLUS            reduce using rule 194 (empty -> .)
    MINUS           reduce using rule 194 (empty -> .)
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    boolean_factor                 shift and go to state 127
    not_opt                        shift and go to state 19
    empty                          shift and go to state 17

state 67

    (183) qualified_name -> qualified_name PERIOD . identifier
    (185) identifier -> . IDENTIFIER
    (186) identifier -> . quoted_identifier
    (187) identifier -> . non_reserved
    (188) identifier -> . DIGIT_IDENTIFIER
    (190) quoted_identifier -> . QUOTED_IDENTIFIER
    (191) quoted_identifier -> . BACKQUOTED_IDENTIFIER
    (189) non_reserved -> . NON_RESERVED

    IDENTIFIER      shift and go to state 27
    DIGIT_IDENTIFIER shift and go to state 26
    QUOTED_IDENTIFIER shift and go to state 24
    BACKQUOTED_IDENTIFIER shift and go to state 31
    NON_RESERVED    shift and go to state 30

    non_reserved                   shift and go to state 28
    quoted_identifier              shift and go to state 25
    identifier                     shift and go to state 128

state 68

    (20) query_term -> query_term UNION set_quantifier_opt . query_term_intersect
    (22) query_term_intersect -> . nonjoin_query_primary
    (23) query_term_intersect -> . query_term_intersect INTERSECT set_quantifier_opt nonjoin_query_primary
    (24) nonjoin_query_primary -> . simple_table
    (25) nonjoin_query_primary -> . LPAREN query_term RPAREN
    (26) simple_table -> . query_specification
    (27) simple_table -> . explicit_table
    (28) simple_table -> . table_value_constructor
    (33) query_specification -> . SELECT set_quantifier_opt adql_top_opt select_items table_expression_opt
    (29) explicit_table -> . TABLE qualified_name
    (30) table_value_constructor -> . VALUES values_list

    LPAREN          shift and go to state 12
    SELECT          shift and go to state 13
    TABLE           shift and go to state 10
    VALUES          shift and go to state 3

    query_term_intersect           shift and go to state 129
    simple_table                   shift and go to state 2
    query_specification            shift and go to state 5
    table_value_constructor        shift and go to state 14
    explicit_table                 shift and go to state 4
    nonjoin_query_primary          shift and go to state 6

state 69

    (21) query_term -> query_term EXCEPT set_quantifier_opt . query_term_intersect
    (22) query_term_intersect -> . nonjoin_query_primary
    (23) query_term_intersect -> . query_term_intersect INTERSECT set_quantifier_opt nonjoin_query_primary
    (24) nonjoin_query_primary -> . simple_table
    (25) nonjoin_query_primary -> . LPAREN query_term RPAREN
    (26) simple_table -> . query_specification
    (27) simple_table -> . explicit_table
    (28) simple_table -> . table_value_constructor
    (33) query_specification -> . SELECT set_quantifier_opt adql_top_opt select_items table_expression_opt
    (29) explicit_table -> . TABLE qualified_name
    (30) table_value_constructor -> . VALUES values_list

    LPAREN          shift and go to state 12
    SELECT          shift and go to state 13
    TABLE           shift and go to state 10
    VALUES          shift and go to state 3

    query_term_intersect           shift and go to state 130
    simple_table                   shift and go to state 2
    query_specification            shift and go to state 5
    table_value_constructor        shift and go to state 14
    explicit_table                 shift and go to state 4
    nonjoin_query_primary          shift and go to state 6

state 70

    (5) order_by_opt -> ORDER BY . sort_items
    (7) sort_items -> . sort_item
    (8) sort_items -> . sort_items COMMA sort_item
    (9) sort_item -> . expression order_opt null_ordering_opt
    (84) expression -> . search_condition
    (85) search_condition -> . boolean_term
    (86) search_condition -> . search_condition OR boolean_term
    (87) boolean_term -> . boolean_factor
    (88) boolean_term -> . boolean_term AND boolean_factor
    (89) boolean_factor -> . not_opt boolean_test
    (161) not_opt -> . NOT
    (162) not_opt -> . empty
    (194) empty -> .

    NOT             shift and go to state 18
    RPAREN          reduce using rule 194 (empty -> .)
    EXISTS          reduce using rule 194 (empty -> .)
    PLUS            reduce using rule 194 (empty -> .)
    MINUS           reduce using rule 194 (empty -> .)
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    search_condition               shift and go to state 20
    sort_item                      shift and go to state 132
    boolean_factor                 shift and go to state 16
    boolean_term                   shift and go to state 23
    empty                          shift and go to state 17
    not_opt                        shift and go to state 19
    expression                     shift and go to state 133
    sort_items                     shift and go to state 131

state 71

    (18) limit_opt -> empty .

    $end            reduce using rule 18 (limit_opt -> empty .)
    RPAREN          reduce using rule 18 (limit_opt -> empty .)


state 72

    (4) query_no_with -> query_term order_by_opt limit_opt .

    RPAREN          reduce using rule 4 (query_no_with -> query_term order_by_opt limit_opt .)
    $end            reduce using rule 4 (query_no_with -> query_term order_by_opt limit_opt .)


state 73

    (16) limit_opt -> LIMIT . INTEGER
    (17) limit_opt -> LIMIT . ALL

    INTEGER         shift and go to state 134
    ALL             shift and go to state 135


state 74

    (25) nonjoin_query_primary -> LPAREN query_term RPAREN .

    INTERSECT       reduce using rule 25 (nonjoin_query_primary -> LPAREN query_term RPAREN .)
    UNION           reduce using rule 25 (nonjoin_query_primary -> LPAREN query_term RPAREN .)
    EXCEPT          reduce using rule 25 (nonjoin_query_primary -> LPAREN query_term RPAREN .)
    ORDER           reduce using rule 25 (nonjoin_query_primary -> LPAREN query_term RPAREN .)
    LIMIT           reduce using rule 25 (nonjoin_query_primary -> LPAREN query_term RPAREN .)
    $end            reduce using rule 25 (nonjoin_query_primary -> LPAREN query_term RPAREN .)
    RPAREN          reduce using rule 25 (nonjoin_query_primary -> LPAREN query_term RPAREN .)


state 75

    (34) adql_top_opt -> TOP . INTEGER

    INTEGER         shift and go to state 136


state 76

    (35) adql_top_opt -> empty .

    ASTERISK        reduce using rule 35 (adql_top_opt -> empty .)
    PLUS            reduce using rule 35 (adql_top_opt -> empty .)
    MINUS           reduce using rule 35 (adql_top_opt -> empty .)
    LPAREN          reduce using rule 35 (adql_top_opt -> empty .)
    NULL            reduce using rule 35 (adql_top_opt -> empty .)
    STRING          reduce using rule 35 (adql_top_opt -> empty .)
    DECIMAL         reduce using rule 35 (adql_top_opt -> empty .)
    INTEGER         reduce using rule 35 (adql_top_opt -> empty .)
    TRUE            reduce using rule 35 (adql_top_opt -> empty .)
    FALSE           reduce using rule 35 (adql_top_opt -> empty .)
    INTERVAL        reduce using rule 35 (adql_top_opt -> empty .)
    IDENTIFIER      reduce using rule 35 (adql_top_opt -> empty .)
    DIGIT_IDENTIFIER reduce using rule 35 (adql_top_opt -> empty .)
    CURRENT_DATE    reduce using rule 35 (adql_top_opt -> empty .)
    CURRENT_TIME    reduce using rule 35 (adql_top_opt -> empty .)
    CURRENT_TIMESTAMP reduce using rule 35 (adql_top_opt -> empty .)
    LOCALTIME       reduce using rule 35 (adql_top_opt -> empty .)
    LOCALTIMESTAMP  reduce using rule 35 (adql_top_opt -> empty .)
    QUOTED_IDENTIFIER reduce using rule 35 (adql_top_opt -> empty .)
    BACKQUOTED_IDENTIFIER reduce using rule 35 (adql_top_opt -> empty .)
    NON_RESERVED    reduce using rule 35 (adql_top_opt -> empty .)
    CASE            reduce using rule 35 (adql_top_opt -> empty .)


state 77

    (33) query_specification -> SELECT set_quantifier_opt adql_top_opt . select_items table_expression_opt
    (47) select_items -> . select_item
    (48) select_items -> . select_items COMMA select_item
    (49) select_item -> . derived_column
    (50) select_item -> . all_columns
    (51) derived_column -> . value_expression alias_opt
    (52) all_columns -> . ASTERISK
    (109) value_expression -> . value_expression PLUS term
    (110) value_expression -> . value_expression MINUS term
    (111) value_expression -> . term
    (112) term -> . term ASTERISK factor
    (113) term -> . term SLASH factor
    (114) term -> . term PERCENT factor
    (115) term -> . term CONCAT factor
    (116) term -> . factor
    (117) factor -> . sign_opt primary_expression
    (174) sign_opt -> . sign
    (175) sign_opt -> . empty
    (176) sign -> . PLUS
    (177) sign -> . MINUS
    (194) empty -> .

    ASTERISK        shift and go to state 139
    PLUS            shift and go to state 63
    MINUS           shift and go to state 47
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    all_columns                    shift and go to state 137
    sign_opt                       shift and go to state 49
    value_expression               shift and go to state 138
    factor                         shift and go to state 57
    select_item                    shift and go to state 141
    term                           shift and go to state 54
    empty                          shift and go to state 55
    sign                           shift and go to state 56
    select_items                   shift and go to state 142
    derived_column                 shift and go to state 140

state 78

    (23) query_term_intersect -> query_term_intersect INTERSECT set_quantifier_opt nonjoin_query_primary .

    INTERSECT       reduce using rule 23 (query_term_intersect -> query_term_intersect INTERSECT set_quantifier_opt nonjoin_query_primary .)
    UNION           reduce using rule 23 (query_term_intersect -> query_term_intersect INTERSECT set_quantifier_opt nonjoin_query_primary .)
    EXCEPT          reduce using rule 23 (query_term_intersect -> query_term_intersect INTERSECT set_quantifier_opt nonjoin_query_primary .)
    ORDER           reduce using rule 23 (query_term_intersect -> query_term_intersect INTERSECT set_quantifier_opt nonjoin_query_primary .)
    LIMIT           reduce using rule 23 (query_term_intersect -> query_term_intersect INTERSECT set_quantifier_opt nonjoin_query_primary .)
    $end            reduce using rule 23 (query_term_intersect -> query_term_intersect INTERSECT set_quantifier_opt nonjoin_query_primary .)
    RPAREN          reduce using rule 23 (query_term_intersect -> query_term_intersect INTERSECT set_quantifier_opt nonjoin_query_primary .)


state 79

    (154) comparison_operator -> NE .

    PLUS            reduce using rule 154 (comparison_operator -> NE .)
    MINUS           reduce using rule 154 (comparison_operator -> NE .)
    LPAREN          reduce using rule 154 (comparison_operator -> NE .)
    NULL            reduce using rule 154 (comparison_operator -> NE .)
    STRING          reduce using rule 154 (comparison_operator -> NE .)
    DECIMAL         reduce using rule 154 (comparison_operator -> NE .)
    INTEGER         reduce using rule 154 (comparison_operator -> NE .)
    TRUE            reduce using rule 154 (comparison_operator -> NE .)
    FALSE           reduce using rule 154 (comparison_operator -> NE .)
    INTERVAL        reduce using rule 154 (comparison_operator -> NE .)
    IDENTIFIER      reduce using rule 154 (comparison_operator -> NE .)
    DIGIT_IDENTIFIER reduce using rule 154 (comparison_operator -> NE .)
    CURRENT_DATE    reduce using rule 154 (comparison_operator -> NE .)
    CURRENT_TIME    reduce using rule 154 (comparison_operator -> NE .)
    CURRENT_TIMESTAMP reduce using rule 154 (comparison_operator -> NE .)
    LOCALTIME       reduce using rule 154 (comparison_operator -> NE .)
    LOCALTIMESTAMP  reduce using rule 154 (comparison_operator -> NE .)
    QUOTED_IDENTIFIER reduce using rule 154 (comparison_operator -> NE .)
    BACKQUOTED_IDENTIFIER reduce using rule 154 (comparison_operator -> NE .)
    NON_RESERVED    reduce using rule 154 (comparison_operator -> NE .)
    CASE            reduce using rule 154 (comparison_operator -> NE .)


state 80

    (156) comparison_operator -> LE .

    PLUS            reduce using rule 156 (comparison_operator -> LE .)
    MINUS           reduce using rule 156 (comparison_operator -> LE .)
    LPAREN          reduce using rule 156 (comparison_operator -> LE .)
    NULL            reduce using rule 156 (comparison_operator -> LE .)
    STRING          reduce using rule 156 (comparison_operator -> LE .)
    DECIMAL         reduce using rule 156 (comparison_operator -> LE .)
    INTEGER         reduce using rule 156 (comparison_operator -> LE .)
    TRUE            reduce using rule 156 (comparison_operator -> LE .)
    FALSE           reduce using rule 156 (comparison_operator -> LE .)
    INTERVAL        reduce using rule 156 (comparison_operator -> LE .)
    IDENTIFIER      reduce using rule 156 (comparison_operator -> LE .)
    DIGIT_IDENTIFIER reduce using rule 156 (comparison_operator -> LE .)
    CURRENT_DATE    reduce using rule 156 (comparison_operator -> LE .)
    CURRENT_TIME    reduce using rule 156 (comparison_operator -> LE .)
    CURRENT_TIMESTAMP reduce using rule 156 (comparison_operator -> LE .)
    LOCALTIME       reduce using rule 156 (comparison_operator -> LE .)
    LOCALTIMESTAMP  reduce using rule 156 (comparison_operator -> LE .)
    QUOTED_IDENTIFIER reduce using rule 156 (comparison_operator -> LE .)
    BACKQUOTED_IDENTIFIER reduce using rule 156 (comparison_operator -> LE .)
    NON_RESERVED    reduce using rule 156 (comparison_operator -> LE .)
    CASE            reduce using rule 156 (comparison_operator -> LE .)


state 81

    (107) null_predicate -> value_expression IS . not_opt NULL
    (161) not_opt -> . NOT
    (162) not_opt -> . empty
    (194) empty -> .

    NOT             shift and go to state 18
    NULL            reduce using rule 194 (empty -> .)

    not_opt                        shift and go to state 143
    empty                          shift and go to state 17

state 82

    (109) value_expression -> value_expression PLUS . term
    (112) term -> . term ASTERISK factor
    (113) term -> . term SLASH factor
    (114) term -> . term PERCENT factor
    (115) term -> . term CONCAT factor
    (116) term -> . factor
    (117) factor -> . sign_opt primary_expression
    (174) sign_opt -> . sign
    (175) sign_opt -> . empty
    (176) sign -> . PLUS
    (177) sign -> . MINUS
    (194) empty -> .

    PLUS            shift and go to state 63
    MINUS           shift and go to state 47
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    term                           shift and go to state 144
    sign_opt                       shift and go to state 49
    factor                         shift and go to state 57
    empty                          shift and go to state 55
    sign                           shift and go to state 56

state 83

    (110) value_expression -> value_expression MINUS . term
    (112) term -> . term ASTERISK factor
    (113) term -> . term SLASH factor
    (114) term -> . term PERCENT factor
    (115) term -> . term CONCAT factor
    (116) term -> . factor
    (117) factor -> . sign_opt primary_expression
    (174) sign_opt -> . sign
    (175) sign_opt -> . empty
    (176) sign -> . PLUS
    (177) sign -> . MINUS
    (194) empty -> .

    PLUS            shift and go to state 63
    MINUS           shift and go to state 47
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    term                           shift and go to state 145
    sign_opt                       shift and go to state 49
    factor                         shift and go to state 57
    empty                          shift and go to state 55
    sign                           shift and go to state 56

state 84

    (157) comparison_operator -> GT .

    PLUS            reduce using rule 157 (comparison_operator -> GT .)
    MINUS           reduce using rule 157 (comparison_operator -> GT .)
    LPAREN          reduce using rule 157 (comparison_operator -> GT .)
    NULL            reduce using rule 157 (comparison_operator -> GT .)
    STRING          reduce using rule 157 (comparison_operator -> GT .)
    DECIMAL         reduce using rule 157 (comparison_operator -> GT .)
    INTEGER         reduce using rule 157 (comparison_operator -> GT .)
    TRUE            reduce using rule 157 (comparison_operator -> GT .)
    FALSE           reduce using rule 157 (comparison_operator -> GT .)
    INTERVAL        reduce using rule 157 (comparison_operator -> GT .)
    IDENTIFIER      reduce using rule 157 (comparison_operator -> GT .)
    DIGIT_IDENTIFIER reduce using rule 157 (comparison_operator -> GT .)
    CURRENT_DATE    reduce using rule 157 (comparison_operator -> GT .)
    CURRENT_TIME    reduce using rule 157 (comparison_operator -> GT .)
    CURRENT_TIMESTAMP reduce using rule 157 (comparison_operator -> GT .)
    LOCALTIME       reduce using rule 157 (comparison_operator -> GT .)
    LOCALTIMESTAMP  reduce using rule 157 (comparison_operator -> GT .)
    QUOTED_IDENTIFIER reduce using rule 157 (comparison_operator -> GT .)
    BACKQUOTED_IDENTIFIER reduce using rule 157 (comparison_operator -> GT .)
    NON_RESERVED    reduce using rule 157 (comparison_operator -> GT .)
    CASE            reduce using rule 157 (comparison_operator -> GT .)


state 85

    (100) comparison_predicate -> value_expression comparison_operator . value_expression
    (109) value_expression -> . value_expression PLUS term
    (110) value_expression -> . value_expression MINUS term
    (111) value_expression -> . term
    (112) term -> . term ASTERISK factor
    (113) term -> . term SLASH factor
    (114) term -> . term PERCENT factor
    (115) term -> . term CONCAT factor
    (116) term -> . factor
    (117) factor -> . sign_opt primary_expression
    (174) sign_opt -> . sign
    (175) sign_opt -> . empty
    (176) sign -> . PLUS
    (177) sign -> . MINUS
    (194) empty -> .

    PLUS            shift and go to state 63
    MINUS           shift and go to state 47
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    term                           shift and go to state 54
    sign_opt                       shift and go to state 49
    value_expression               shift and go to state 146
    factor                         shift and go to state 57
    empty                          shift and go to state 55
    sign                           shift and go to state 56

state 86

    (155) comparison_operator -> LT .

    PLUS            reduce using rule 155 (comparison_operator -> LT .)
    MINUS           reduce using rule 155 (comparison_operator -> LT .)
    LPAREN          reduce using rule 155 (comparison_operator -> LT .)
    NULL            reduce using rule 155 (comparison_operator -> LT .)
    STRING          reduce using rule 155 (comparison_operator -> LT .)
    DECIMAL         reduce using rule 155 (comparison_operator -> LT .)
    INTEGER         reduce using rule 155 (comparison_operator -> LT .)
    TRUE            reduce using rule 155 (comparison_operator -> LT .)
    FALSE           reduce using rule 155 (comparison_operator -> LT .)
    INTERVAL        reduce using rule 155 (comparison_operator -> LT .)
    IDENTIFIER      reduce using rule 155 (comparison_operator -> LT .)
    DIGIT_IDENTIFIER reduce using rule 155 (comparison_operator -> LT .)
    CURRENT_DATE    reduce using rule 155 (comparison_operator -> LT .)
    CURRENT_TIME    reduce using rule 155 (comparison_operator -> LT .)
    CURRENT_TIMESTAMP reduce using rule 155 (comparison_operator -> LT .)
    LOCALTIME       reduce using rule 155 (comparison_operator -> LT .)
    LOCALTIMESTAMP  reduce using rule 155 (comparison_operator -> LT .)
    QUOTED_IDENTIFIER reduce using rule 155 (comparison_operator -> LT .)
    BACKQUOTED_IDENTIFIER reduce using rule 155 (comparison_operator -> LT .)
    NON_RESERVED    reduce using rule 155 (comparison_operator -> LT .)
    CASE            reduce using rule 155 (comparison_operator -> LT .)


state 87

    (153) comparison_operator -> EQ .

    PLUS            reduce using rule 153 (comparison_operator -> EQ .)
    MINUS           reduce using rule 153 (comparison_operator -> EQ .)
    LPAREN          reduce using rule 153 (comparison_operator -> EQ .)
    NULL            reduce using rule 153 (comparison_operator -> EQ .)
    STRING          reduce using rule 153 (comparison_operator -> EQ .)
    DECIMAL         reduce using rule 153 (comparison_operator -> EQ .)
    INTEGER         reduce using rule 153 (comparison_operator -> EQ .)
    TRUE            reduce using rule 153 (comparison_operator -> EQ .)
    FALSE           reduce using rule 153 (comparison_operator -> EQ .)
    INTERVAL        reduce using rule 153 (comparison_operator -> EQ .)
    IDENTIFIER      reduce using rule 153 (comparison_operator -> EQ .)
    DIGIT_IDENTIFIER reduce using rule 153 (comparison_operator -> EQ .)
    CURRENT_DATE    reduce using rule 153 (comparison_operator -> EQ .)
    CURRENT_TIME    reduce using rule 153 (comparison_operator -> EQ .)
    CURRENT_TIMESTAMP reduce using rule 153 (comparison_operator -> EQ .)
    LOCALTIME       reduce using rule 153 (comparison_operator -> EQ .)
    LOCALTIMESTAMP  reduce using rule 153 (comparison_operator -> EQ .)
    QUOTED_IDENTIFIER reduce using rule 153 (comparison_operator -> EQ .)
    BACKQUOTED_IDENTIFIER reduce using rule 153 (comparison_operator -> EQ .)
    NON_RESERVED    reduce using rule 153 (comparison_operator -> EQ .)
    CASE            reduce using rule 153 (comparison_operator -> EQ .)


state 88

    (158) comparison_operator -> GE .

    PLUS            reduce using rule 158 (comparison_operator -> GE .)
    MINUS           reduce using rule 158 (comparison_operator -> GE .)
    LPAREN          reduce using rule 158 (comparison_operator -> GE .)
    NULL            reduce using rule 158 (comparison_operator -> GE .)
    STRING          reduce using rule 158 (comparison_operator -> GE .)
    DECIMAL         reduce using rule 158 (comparison_operator -> GE .)
    INTEGER         reduce using rule 158 (comparison_operator -> GE .)
    TRUE            reduce using rule 158 (comparison_operator -> GE .)
    FALSE           reduce using rule 158 (comparison_operator -> GE .)
    INTERVAL        reduce using rule 158 (comparison_operator -> GE .)
    IDENTIFIER      reduce using rule 158 (comparison_operator -> GE .)
    DIGIT_IDENTIFIER reduce using rule 158 (comparison_operator -> GE .)
    CURRENT_DATE    reduce using rule 158 (comparison_operator -> GE .)
    CURRENT_TIME    reduce using rule 158 (comparison_operator -> GE .)
    CURRENT_TIMESTAMP reduce using rule 158 (comparison_operator -> GE .)
    LOCALTIME       reduce using rule 158 (comparison_operator -> GE .)
    LOCALTIMESTAMP  reduce using rule 158 (comparison_operator -> GE .)
    QUOTED_IDENTIFIER reduce using rule 158 (comparison_operator -> GE .)
    BACKQUOTED_IDENTIFIER reduce using rule 158 (comparison_operator -> GE .)
    NON_RESERVED    reduce using rule 158 (comparison_operator -> GE .)
    CASE            reduce using rule 158 (comparison_operator -> GE .)


state 89

    (101) between_predicate -> value_expression not_opt . BETWEEN value_expression AND value_expression
    (102) in_predicate -> value_expression not_opt . IN in_value
    (106) like_predicate -> value_expression not_opt . LIKE value_expression

    BETWEEN         shift and go to state 147
    IN              shift and go to state 149
    LIKE            shift and go to state 148


state 90

    (131) base_primary_expression -> subquery .

    ASTERISK        reduce using rule 131 (base_primary_expression -> subquery .)
    SLASH           reduce using rule 131 (base_primary_expression -> subquery .)
    PERCENT         reduce using rule 131 (base_primary_expression -> subquery .)
    CONCAT          reduce using rule 131 (base_primary_expression -> subquery .)
    IS              reduce using rule 131 (base_primary_expression -> subquery .)
    PLUS            reduce using rule 131 (base_primary_expression -> subquery .)
    MINUS           reduce using rule 131 (base_primary_expression -> subquery .)
    EQ              reduce using rule 131 (base_primary_expression -> subquery .)
    NE              reduce using rule 131 (base_primary_expression -> subquery .)
    LT              reduce using rule 131 (base_primary_expression -> subquery .)
    LE              reduce using rule 131 (base_primary_expression -> subquery .)
    GT              reduce using rule 131 (base_primary_expression -> subquery .)
    GE              reduce using rule 131 (base_primary_expression -> subquery .)
    NOT             reduce using rule 131 (base_primary_expression -> subquery .)
    BETWEEN         reduce using rule 131 (base_primary_expression -> subquery .)
    IN              reduce using rule 131 (base_primary_expression -> subquery .)
    LIKE            reduce using rule 131 (base_primary_expression -> subquery .)
    AS              reduce using rule 131 (base_primary_expression -> subquery .)
    IDENTIFIER      reduce using rule 131 (base_primary_expression -> subquery .)
    DIGIT_IDENTIFIER reduce using rule 131 (base_primary_expression -> subquery .)
    QUOTED_IDENTIFIER reduce using rule 131 (base_primary_expression -> subquery .)
    BACKQUOTED_IDENTIFIER reduce using rule 131 (base_primary_expression -> subquery .)
    NON_RESERVED    reduce using rule 131 (base_primary_expression -> subquery .)
    COMMA           reduce using rule 131 (base_primary_expression -> subquery .)
    FROM            reduce using rule 131 (base_primary_expression -> subquery .)
    INTERSECT       reduce using rule 131 (base_primary_expression -> subquery .)
    UNION           reduce using rule 131 (base_primary_expression -> subquery .)
    EXCEPT          reduce using rule 131 (base_primary_expression -> subquery .)
    ORDER           reduce using rule 131 (base_primary_expression -> subquery .)
    LIMIT           reduce using rule 131 (base_primary_expression -> subquery .)
    $end            reduce using rule 131 (base_primary_expression -> subquery .)
    RPAREN          reduce using rule 131 (base_primary_expression -> subquery .)
    AND             reduce using rule 131 (base_primary_expression -> subquery .)
    OR              reduce using rule 131 (base_primary_expression -> subquery .)
    ASC             reduce using rule 131 (base_primary_expression -> subquery .)
    DESC            reduce using rule 131 (base_primary_expression -> subquery .)
    NULLS           reduce using rule 131 (base_primary_expression -> subquery .)
    THEN            reduce using rule 131 (base_primary_expression -> subquery .)
    GROUP           reduce using rule 131 (base_primary_expression -> subquery .)
    HAVING          reduce using rule 131 (base_primary_expression -> subquery .)
    CROSS           reduce using rule 131 (base_primary_expression -> subquery .)
    NATURAL         reduce using rule 131 (base_primary_expression -> subquery .)
    INNER           reduce using rule 131 (base_primary_expression -> subquery .)
    LEFT            reduce using rule 131 (base_primary_expression -> subquery .)
    RIGHT           reduce using rule 131 (base_primary_expression -> subquery .)
    FULL            reduce using rule 131 (base_primary_expression -> subquery .)
    JOIN            reduce using rule 131 (base_primary_expression -> subquery .)
    WHERE           reduce using rule 131 (base_primary_expression -> subquery .)
    ON              reduce using rule 131 (base_primary_expression -> subquery .)
    USING           reduce using rule 131 (base_primary_expression -> subquery .)
    WHEN            reduce using rule 131 (base_primary_expression -> subquery .)
    END             reduce using rule 131 (base_primary_expression -> subquery .)
    ELSE            reduce using rule 131 (base_primary_expression -> subquery .)


state 91

    (148) date_time -> CURRENT_TIMESTAMP . integer_param_opt
    (180) integer_param_opt -> . LPAREN INTEGER RPAREN
    (181) integer_param_opt -> . empty
    (194) empty -> .

    LPAREN          shift and go to state 150
    ASTERISK        reduce using rule 194 (empty -> .)
    SLASH           reduce using rule 194 (empty -> .)
    PERCENT         reduce using rule 194 (empty -> .)
    CONCAT          reduce using rule 194 (empty -> .)
    IS              reduce using rule 194 (empty -> .)
    PLUS            reduce using rule 194 (empty -> .)
    MINUS           reduce using rule 194 (empty -> .)
    EQ              reduce using rule 194 (empty -> .)
    NE              reduce using rule 194 (empty -> .)
    LT              reduce using rule 194 (empty -> .)
    LE              reduce using rule 194 (empty -> .)
    GT              reduce using rule 194 (empty -> .)
    GE              reduce using rule 194 (empty -> .)
    NOT             reduce using rule 194 (empty -> .)
    BETWEEN         reduce using rule 194 (empty -> .)
    IN              reduce using rule 194 (empty -> .)
    LIKE            reduce using rule 194 (empty -> .)
    AS              reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    COMMA           reduce using rule 194 (empty -> .)
    FROM            reduce using rule 194 (empty -> .)
    INTERSECT       reduce using rule 194 (empty -> .)
    UNION           reduce using rule 194 (empty -> .)
    EXCEPT          reduce using rule 194 (empty -> .)
    ORDER           reduce using rule 194 (empty -> .)
    LIMIT           reduce using rule 194 (empty -> .)
    $end            reduce using rule 194 (empty -> .)
    RPAREN          reduce using rule 194 (empty -> .)
    AND             reduce using rule 194 (empty -> .)
    OR              reduce using rule 194 (empty -> .)
    ASC             reduce using rule 194 (empty -> .)
    DESC            reduce using rule 194 (empty -> .)
    NULLS           reduce using rule 194 (empty -> .)
    THEN            reduce using rule 194 (empty -> .)
    GROUP           reduce using rule 194 (empty -> .)
    HAVING          reduce using rule 194 (empty -> .)
    CROSS           reduce using rule 194 (empty -> .)
    NATURAL         reduce using rule 194 (empty -> .)
    INNER           reduce using rule 194 (empty -> .)
    LEFT            reduce using rule 194 (empty -> .)
    RIGHT           reduce using rule 194 (empty -> .)
    FULL            reduce using rule 194 (empty -> .)
    JOIN            reduce using rule 194 (empty -> .)
    WHERE           reduce using rule 194 (empty -> .)
    ON              reduce using rule 194 (empty -> .)
    USING           reduce using rule 194 (empty -> .)
    WHEN            reduce using rule 194 (empty -> .)
    END             reduce using rule 194 (empty -> .)
    ELSE            reduce using rule 194 (empty -> .)

    empty                          shift and go to state 151
    integer_param_opt              shift and go to state 152

state 92

    (146) date_time -> CURRENT_DATE .

    ASTERISK        reduce using rule 146 (date_time -> CURRENT_DATE .)
    SLASH           reduce using rule 146 (date_time -> CURRENT_DATE .)
    PERCENT         reduce using rule 146 (date_time -> CURRENT_DATE .)
    CONCAT          reduce using rule 146 (date_time -> CURRENT_DATE .)
    IS              reduce using rule 146 (date_time -> CURRENT_DATE .)
    PLUS            reduce using rule 146 (date_time -> CURRENT_DATE .)
    MINUS           reduce using rule 146 (date_time -> CURRENT_DATE .)
    EQ              reduce using rule 146 (date_time -> CURRENT_DATE .)
    NE              reduce using rule 146 (date_time -> CURRENT_DATE .)
    LT              reduce using rule 146 (date_time -> CURRENT_DATE .)
    LE              reduce using rule 146 (date_time -> CURRENT_DATE .)
    GT              reduce using rule 146 (date_time -> CURRENT_DATE .)
    GE              reduce using rule 146 (date_time -> CURRENT_DATE .)
    NOT             reduce using rule 146 (date_time -> CURRENT_DATE .)
    BETWEEN         reduce using rule 146 (date_time -> CURRENT_DATE .)
    IN              reduce using rule 146 (date_time -> CURRENT_DATE .)
    LIKE            reduce using rule 146 (date_time -> CURRENT_DATE .)
    AS              reduce using rule 146 (date_time -> CURRENT_DATE .)
    IDENTIFIER      reduce using rule 146 (date_time -> CURRENT_DATE .)
    DIGIT_IDENTIFIER reduce using rule 146 (date_time -> CURRENT_DATE .)
    QUOTED_IDENTIFIER reduce using rule 146 (date_time -> CURRENT_DATE .)
    BACKQUOTED_IDENTIFIER reduce using rule 146 (date_time -> CURRENT_DATE .)
    NON_RESERVED    reduce using rule 146 (date_time -> CURRENT_DATE .)
    COMMA           reduce using rule 146 (date_time -> CURRENT_DATE .)
    FROM            reduce using rule 146 (date_time -> CURRENT_DATE .)
    INTERSECT       reduce using rule 146 (date_time -> CURRENT_DATE .)
    UNION           reduce using rule 146 (date_time -> CURRENT_DATE .)
    EXCEPT          reduce using rule 146 (date_time -> CURRENT_DATE .)
    ORDER           reduce using rule 146 (date_time -> CURRENT_DATE .)
    LIMIT           reduce using rule 146 (date_time -> CURRENT_DATE .)
    $end            reduce using rule 146 (date_time -> CURRENT_DATE .)
    RPAREN          reduce using rule 146 (date_time -> CURRENT_DATE .)
    AND             reduce using rule 146 (date_time -> CURRENT_DATE .)
    OR              reduce using rule 146 (date_time -> CURRENT_DATE .)
    ASC             reduce using rule 146 (date_time -> CURRENT_DATE .)
    DESC            reduce using rule 146 (date_time -> CURRENT_DATE .)
    NULLS           reduce using rule 146 (date_time -> CURRENT_DATE .)
    THEN            reduce using rule 146 (date_time -> CURRENT_DATE .)
    GROUP           reduce using rule 146 (date_time -> CURRENT_DATE .)
    HAVING          reduce using rule 146 (date_time -> CURRENT_DATE .)
    CROSS           reduce using rule 146 (date_time -> CURRENT_DATE .)
    NATURAL         reduce using rule 146 (date_time -> CURRENT_DATE .)
    INNER           reduce using rule 146 (date_time -> CURRENT_DATE .)
    LEFT            reduce using rule 146 (date_time -> CURRENT_DATE .)
    RIGHT           reduce using rule 146 (date_time -> CURRENT_DATE .)
    FULL            reduce using rule 146 (date_time -> CURRENT_DATE .)
    JOIN            reduce using rule 146 (date_time -> CURRENT_DATE .)
    WHERE           reduce using rule 146 (date_time -> CURRENT_DATE .)
    ON              reduce using rule 146 (date_time -> CURRENT_DATE .)
    USING           reduce using rule 146 (date_time -> CURRENT_DATE .)
    WHEN            reduce using rule 146 (date_time -> CURRENT_DATE .)
    END             reduce using rule 146 (date_time -> CURRENT_DATE .)
    ELSE            reduce using rule 146 (date_time -> CURRENT_DATE .)


state 93

    (123) base_primary_expression -> boolean_value .

    ASTERISK        reduce using rule 123 (base_primary_expression -> boolean_value .)
    SLASH           reduce using rule 123 (base_primary_expression -> boolean_value .)
    PERCENT         reduce using rule 123 (base_primary_expression -> boolean_value .)
    CONCAT          reduce using rule 123 (base_primary_expression -> boolean_value .)
    IS              reduce using rule 123 (base_primary_expression -> boolean_value .)
    PLUS            reduce using rule 123 (base_primary_expression -> boolean_value .)
    MINUS           reduce using rule 123 (base_primary_expression -> boolean_value .)
    EQ              reduce using rule 123 (base_primary_expression -> boolean_value .)
    NE              reduce using rule 123 (base_primary_expression -> boolean_value .)
    LT              reduce using rule 123 (base_primary_expression -> boolean_value .)
    LE              reduce using rule 123 (base_primary_expression -> boolean_value .)
    GT              reduce using rule 123 (base_primary_expression -> boolean_value .)
    GE              reduce using rule 123 (base_primary_expression -> boolean_value .)
    NOT             reduce using rule 123 (base_primary_expression -> boolean_value .)
    BETWEEN         reduce using rule 123 (base_primary_expression -> boolean_value .)
    IN              reduce using rule 123 (base_primary_expression -> boolean_value .)
    LIKE            reduce using rule 123 (base_primary_expression -> boolean_value .)
    AS              reduce using rule 123 (base_primary_expression -> boolean_value .)
    IDENTIFIER      reduce using rule 123 (base_primary_expression -> boolean_value .)
    DIGIT_IDENTIFIER reduce using rule 123 (base_primary_expression -> boolean_value .)
    QUOTED_IDENTIFIER reduce using rule 123 (base_primary_expression -> boolean_value .)
    BACKQUOTED_IDENTIFIER reduce using rule 123 (base_primary_expression -> boolean_value .)
    NON_RESERVED    reduce using rule 123 (base_primary_expression -> boolean_value .)
    COMMA           reduce using rule 123 (base_primary_expression -> boolean_value .)
    FROM            reduce using rule 123 (base_primary_expression -> boolean_value .)
    INTERSECT       reduce using rule 123 (base_primary_expression -> boolean_value .)
    UNION           reduce using rule 123 (base_primary_expression -> boolean_value .)
    EXCEPT          reduce using rule 123 (base_primary_expression -> boolean_value .)
    ORDER           reduce using rule 123 (base_primary_expression -> boolean_value .)
    LIMIT           reduce using rule 123 (base_primary_expression -> boolean_value .)
    $end            reduce using rule 123 (base_primary_expression -> boolean_value .)
    RPAREN          reduce using rule 123 (base_primary_expression -> boolean_value .)
    AND             reduce using rule 123 (base_primary_expression -> boolean_value .)
    OR              reduce using rule 123 (base_primary_expression -> boolean_value .)
    ASC             reduce using rule 123 (base_primary_expression -> boolean_value .)
    DESC            reduce using rule 123 (base_primary_expression -> boolean_value .)
    NULLS           reduce using rule 123 (base_primary_expression -> boolean_value .)
    THEN            reduce using rule 123 (base_primary_expression -> boolean_value .)
    GROUP           reduce using rule 123 (base_primary_expression -> boolean_value .)
    HAVING          reduce using rule 123 (base_primary_expression -> boolean_value .)
    CROSS           reduce using rule 123 (base_primary_expression -> boolean_value .)
    NATURAL         reduce using rule 123 (base_primary_expression -> boolean_value .)
    INNER           reduce using rule 123 (base_primary_expression -> boolean_value .)
    LEFT            reduce using rule 123 (base_primary_expression -> boolean_value .)
    RIGHT           reduce using rule 123 (base_primary_expression -> boolean_value .)
    FULL            reduce using rule 123 (base_primary_expression -> boolean_value .)
    JOIN            reduce using rule 123 (base_primary_expression -> boolean_value .)
    WHERE           reduce using rule 123 (base_primary_expression -> boolean_value .)
    ON              reduce using rule 123 (base_primary_expression -> boolean_value .)
    USING           reduce using rule 123 (base_primary_expression -> boolean_value .)
    WHEN            reduce using rule 123 (base_primary_expression -> boolean_value .)
    END             reduce using rule 123 (base_primary_expression -> boolean_value .)
    ELSE            reduce using rule 123 (base_primary_expression -> boolean_value .)


state 94

    (124) base_primary_expression -> STRING .

    ASTERISK        reduce using rule 124 (base_primary_expression -> STRING .)
    SLASH           reduce using rule 124 (base_primary_expression -> STRING .)
    PERCENT         reduce using rule 124 (base_primary_expression -> STRING .)
    CONCAT          reduce using rule 124 (base_primary_expression -> STRING .)
    IS              reduce using rule 124 (base_primary_expression -> STRING .)
    PLUS            reduce using rule 124 (base_primary_expression -> STRING .)
    MINUS           reduce using rule 124 (base_primary_expression -> STRING .)
    EQ              reduce using rule 124 (base_primary_expression -> STRING .)
    NE              reduce using rule 124 (base_primary_expression -> STRING .)
    LT              reduce using rule 124 (base_primary_expression -> STRING .)
    LE              reduce using rule 124 (base_primary_expression -> STRING .)
    GT              reduce using rule 124 (base_primary_expression -> STRING .)
    GE              reduce using rule 124 (base_primary_expression -> STRING .)
    NOT             reduce using rule 124 (base_primary_expression -> STRING .)
    BETWEEN         reduce using rule 124 (base_primary_expression -> STRING .)
    IN              reduce using rule 124 (base_primary_expression -> STRING .)
    LIKE            reduce using rule 124 (base_primary_expression -> STRING .)
    AS              reduce using rule 124 (base_primary_expression -> STRING .)
    IDENTIFIER      reduce using rule 124 (base_primary_expression -> STRING .)
    DIGIT_IDENTIFIER reduce using rule 124 (base_primary_expression -> STRING .)
    QUOTED_IDENTIFIER reduce using rule 124 (base_primary_expression -> STRING .)
    BACKQUOTED_IDENTIFIER reduce using rule 124 (base_primary_expression -> STRING .)
    NON_RESERVED    reduce using rule 124 (base_primary_expression -> STRING .)
    COMMA           reduce using rule 124 (base_primary_expression -> STRING .)
    FROM            reduce using rule 124 (base_primary_expression -> STRING .)
    INTERSECT       reduce using rule 124 (base_primary_expression -> STRING .)
    UNION           reduce using rule 124 (base_primary_expression -> STRING .)
    EXCEPT          reduce using rule 124 (base_primary_expression -> STRING .)
    ORDER           reduce using rule 124 (base_primary_expression -> STRING .)
    LIMIT           reduce using rule 124 (base_primary_expression -> STRING .)
    $end            reduce using rule 124 (base_primary_expression -> STRING .)
    RPAREN          reduce using rule 124 (base_primary_expression -> STRING .)
    AND             reduce using rule 124 (base_primary_expression -> STRING .)
    OR              reduce using rule 124 (base_primary_expression -> STRING .)
    ASC             reduce using rule 124 (base_primary_expression -> STRING .)
    DESC            reduce using rule 124 (base_primary_expression -> STRING .)
    NULLS           reduce using rule 124 (base_primary_expression -> STRING .)
    THEN            reduce using rule 124 (base_primary_expression -> STRING .)
    GROUP           reduce using rule 124 (base_primary_expression -> STRING .)
    HAVING          reduce using rule 124 (base_primary_expression -> STRING .)
    CROSS           reduce using rule 124 (base_primary_expression -> STRING .)
    NATURAL         reduce using rule 124 (base_primary_expression -> STRING .)
    INNER           reduce using rule 124 (base_primary_expression -> STRING .)
    LEFT            reduce using rule 124 (base_primary_expression -> STRING .)
    RIGHT           reduce using rule 124 (base_primary_expression -> STRING .)
    FULL            reduce using rule 124 (base_primary_expression -> STRING .)
    JOIN            reduce using rule 124 (base_primary_expression -> STRING .)
    WHERE           reduce using rule 124 (base_primary_expression -> STRING .)
    ON              reduce using rule 124 (base_primary_expression -> STRING .)
    USING           reduce using rule 124 (base_primary_expression -> STRING .)
    WHEN            reduce using rule 124 (base_primary_expression -> STRING .)
    END             reduce using rule 124 (base_primary_expression -> STRING .)
    ELSE            reduce using rule 124 (base_primary_expression -> STRING .)


state 95

    (134) case_specification -> searched_case .

    RPAREN          reduce using rule 134 (case_specification -> searched_case .)
    ASTERISK        reduce using rule 134 (case_specification -> searched_case .)
    SLASH           reduce using rule 134 (case_specification -> searched_case .)
    PERCENT         reduce using rule 134 (case_specification -> searched_case .)
    CONCAT          reduce using rule 134 (case_specification -> searched_case .)
    IS              reduce using rule 134 (case_specification -> searched_case .)
    PLUS            reduce using rule 134 (case_specification -> searched_case .)
    MINUS           reduce using rule 134 (case_specification -> searched_case .)
    EQ              reduce using rule 134 (case_specification -> searched_case .)
    NE              reduce using rule 134 (case_specification -> searched_case .)
    LT              reduce using rule 134 (case_specification -> searched_case .)
    LE              reduce using rule 134 (case_specification -> searched_case .)
    GT              reduce using rule 134 (case_specification -> searched_case .)
    GE              reduce using rule 134 (case_specification -> searched_case .)
    NOT             reduce using rule 134 (case_specification -> searched_case .)
    BETWEEN         reduce using rule 134 (case_specification -> searched_case .)
    IN              reduce using rule 134 (case_specification -> searched_case .)
    LIKE            reduce using rule 134 (case_specification -> searched_case .)
    AS              reduce using rule 134 (case_specification -> searched_case .)
    IDENTIFIER      reduce using rule 134 (case_specification -> searched_case .)
    DIGIT_IDENTIFIER reduce using rule 134 (case_specification -> searched_case .)
    QUOTED_IDENTIFIER reduce using rule 134 (case_specification -> searched_case .)
    BACKQUOTED_IDENTIFIER reduce using rule 134 (case_specification -> searched_case .)
    NON_RESERVED    reduce using rule 134 (case_specification -> searched_case .)
    COMMA           reduce using rule 134 (case_specification -> searched_case .)
    FROM            reduce using rule 134 (case_specification -> searched_case .)
    INTERSECT       reduce using rule 134 (case_specification -> searched_case .)
    UNION           reduce using rule 134 (case_specification -> searched_case .)
    EXCEPT          reduce using rule 134 (case_specification -> searched_case .)
    ORDER           reduce using rule 134 (case_specification -> searched_case .)
    LIMIT           reduce using rule 134 (case_specification -> searched_case .)
    $end            reduce using rule 134 (case_specification -> searched_case .)
    AND             reduce using rule 134 (case_specification -> searched_case .)
    OR              reduce using rule 134 (case_specification -> searched_case .)
    ASC             reduce using rule 134 (case_specification -> searched_case .)
    DESC            reduce using rule 134 (case_specification -> searched_case .)
    NULLS           reduce using rule 134 (case_specification -> searched_case .)
    THEN            reduce using rule 134 (case_specification -> searched_case .)
    GROUP           reduce using rule 134 (case_specification -> searched_case .)
    HAVING          reduce using rule 134 (case_specification -> searched_case .)
    CROSS           reduce using rule 134 (case_specification -> searched_case .)
    NATURAL         reduce using rule 134 (case_specification -> searched_case .)
    INNER           reduce using rule 134 (case_specification -> searched_case .)
    LEFT            reduce using rule 134 (case_specification -> searched_case .)
    RIGHT           reduce using rule 134 (case_specification -> searched_case .)
    FULL            reduce using rule 134 (case_specification -> searched_case .)
    JOIN            reduce using rule 134 (case_specification -> searched_case .)
    WHERE           reduce using rule 134 (case_specification -> searched_case .)
    ON              reduce using rule 134 (case_specification -> searched_case .)
    USING           reduce using rule 134 (case_specification -> searched_case .)
    WHEN            reduce using rule 134 (case_specification -> searched_case .)
    END             reduce using rule 134 (case_specification -> searched_case .)
    ELSE            reduce using rule 134 (case_specification -> searched_case .)


state 96

    (149) date_time -> LOCALTIME . integer_param_opt
    (180) integer_param_opt -> . LPAREN INTEGER RPAREN
    (181) integer_param_opt -> . empty
    (194) empty -> .

    LPAREN          shift and go to state 150
    ASTERISK        reduce using rule 194 (empty -> .)
    SLASH           reduce using rule 194 (empty -> .)
    PERCENT         reduce using rule 194 (empty -> .)
    CONCAT          reduce using rule 194 (empty -> .)
    IS              reduce using rule 194 (empty -> .)
    PLUS            reduce using rule 194 (empty -> .)
    MINUS           reduce using rule 194 (empty -> .)
    EQ              reduce using rule 194 (empty -> .)
    NE              reduce using rule 194 (empty -> .)
    LT              reduce using rule 194 (empty -> .)
    LE              reduce using rule 194 (empty -> .)
    GT              reduce using rule 194 (empty -> .)
    GE              reduce using rule 194 (empty -> .)
    NOT             reduce using rule 194 (empty -> .)
    BETWEEN         reduce using rule 194 (empty -> .)
    IN              reduce using rule 194 (empty -> .)
    LIKE            reduce using rule 194 (empty -> .)
    AS              reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    COMMA           reduce using rule 194 (empty -> .)
    FROM            reduce using rule 194 (empty -> .)
    INTERSECT       reduce using rule 194 (empty -> .)
    UNION           reduce using rule 194 (empty -> .)
    EXCEPT          reduce using rule 194 (empty -> .)
    ORDER           reduce using rule 194 (empty -> .)
    LIMIT           reduce using rule 194 (empty -> .)
    $end            reduce using rule 194 (empty -> .)
    RPAREN          reduce using rule 194 (empty -> .)
    AND             reduce using rule 194 (empty -> .)
    OR              reduce using rule 194 (empty -> .)
    ASC             reduce using rule 194 (empty -> .)
    DESC            reduce using rule 194 (empty -> .)
    NULLS           reduce using rule 194 (empty -> .)
    THEN            reduce using rule 194 (empty -> .)
    GROUP           reduce using rule 194 (empty -> .)
    HAVING          reduce using rule 194 (empty -> .)
    CROSS           reduce using rule 194 (empty -> .)
    NATURAL         reduce using rule 194 (empty -> .)
    INNER           reduce using rule 194 (empty -> .)
    LEFT            reduce using rule 194 (empty -> .)
    RIGHT           reduce using rule 194 (empty -> .)
    FULL            reduce using rule 194 (empty -> .)
    JOIN            reduce using rule 194 (empty -> .)
    WHERE           reduce using rule 194 (empty -> .)
    ON              reduce using rule 194 (empty -> .)
    USING           reduce using rule 194 (empty -> .)
    WHEN            reduce using rule 194 (empty -> .)
    END             reduce using rule 194 (empty -> .)
    ELSE            reduce using rule 194 (empty -> .)

    empty                          shift and go to state 151
    integer_param_opt              shift and go to state 153

state 97

    (135) simple_case -> CASE . value_expression when_clauses else_opt END
    (136) searched_case -> CASE . when_clauses else_opt END
    (109) value_expression -> . value_expression PLUS term
    (110) value_expression -> . value_expression MINUS term
    (111) value_expression -> . term
    (137) when_clauses -> . when_clauses when_clause
    (138) when_clauses -> . when_clause
    (112) term -> . term ASTERISK factor
    (113) term -> . term SLASH factor
    (114) term -> . term PERCENT factor
    (115) term -> . term CONCAT factor
    (116) term -> . factor
    (139) when_clause -> . WHEN search_condition THEN value_expression
    (117) factor -> . sign_opt primary_expression
    (174) sign_opt -> . sign
    (175) sign_opt -> . empty
    (176) sign -> . PLUS
    (177) sign -> . MINUS
    (194) empty -> .

    WHEN            shift and go to state 156
    PLUS            shift and go to state 63
    MINUS           shift and go to state 47
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    term                           shift and go to state 54
    sign_opt                       shift and go to state 49
    value_expression               shift and go to state 154
    factor                         shift and go to state 57
    when_clause                    shift and go to state 155
    sign                           shift and go to state 56
    empty                          shift and go to state 55
    when_clauses                   shift and go to state 157

state 98

    (164) boolean_value -> FALSE .

    RPAREN          reduce using rule 164 (boolean_value -> FALSE .)
    ASTERISK        reduce using rule 164 (boolean_value -> FALSE .)
    SLASH           reduce using rule 164 (boolean_value -> FALSE .)
    PERCENT         reduce using rule 164 (boolean_value -> FALSE .)
    CONCAT          reduce using rule 164 (boolean_value -> FALSE .)
    IS              reduce using rule 164 (boolean_value -> FALSE .)
    PLUS            reduce using rule 164 (boolean_value -> FALSE .)
    MINUS           reduce using rule 164 (boolean_value -> FALSE .)
    EQ              reduce using rule 164 (boolean_value -> FALSE .)
    NE              reduce using rule 164 (boolean_value -> FALSE .)
    LT              reduce using rule 164 (boolean_value -> FALSE .)
    LE              reduce using rule 164 (boolean_value -> FALSE .)
    GT              reduce using rule 164 (boolean_value -> FALSE .)
    GE              reduce using rule 164 (boolean_value -> FALSE .)
    NOT             reduce using rule 164 (boolean_value -> FALSE .)
    BETWEEN         reduce using rule 164 (boolean_value -> FALSE .)
    IN              reduce using rule 164 (boolean_value -> FALSE .)
    LIKE            reduce using rule 164 (boolean_value -> FALSE .)
    AS              reduce using rule 164 (boolean_value -> FALSE .)
    IDENTIFIER      reduce using rule 164 (boolean_value -> FALSE .)
    DIGIT_IDENTIFIER reduce using rule 164 (boolean_value -> FALSE .)
    QUOTED_IDENTIFIER reduce using rule 164 (boolean_value -> FALSE .)
    BACKQUOTED_IDENTIFIER reduce using rule 164 (boolean_value -> FALSE .)
    NON_RESERVED    reduce using rule 164 (boolean_value -> FALSE .)
    COMMA           reduce using rule 164 (boolean_value -> FALSE .)
    FROM            reduce using rule 164 (boolean_value -> FALSE .)
    INTERSECT       reduce using rule 164 (boolean_value -> FALSE .)
    UNION           reduce using rule 164 (boolean_value -> FALSE .)
    EXCEPT          reduce using rule 164 (boolean_value -> FALSE .)
    ORDER           reduce using rule 164 (boolean_value -> FALSE .)
    LIMIT           reduce using rule 164 (boolean_value -> FALSE .)
    $end            reduce using rule 164 (boolean_value -> FALSE .)
    AND             reduce using rule 164 (boolean_value -> FALSE .)
    OR              reduce using rule 164 (boolean_value -> FALSE .)
    ASC             reduce using rule 164 (boolean_value -> FALSE .)
    DESC            reduce using rule 164 (boolean_value -> FALSE .)
    NULLS           reduce using rule 164 (boolean_value -> FALSE .)
    THEN            reduce using rule 164 (boolean_value -> FALSE .)
    GROUP           reduce using rule 164 (boolean_value -> FALSE .)
    HAVING          reduce using rule 164 (boolean_value -> FALSE .)
    CROSS           reduce using rule 164 (boolean_value -> FALSE .)
    NATURAL         reduce using rule 164 (boolean_value -> FALSE .)
    INNER           reduce using rule 164 (boolean_value -> FALSE .)
    LEFT            reduce using rule 164 (boolean_value -> FALSE .)
    RIGHT           reduce using rule 164 (boolean_value -> FALSE .)
    FULL            reduce using rule 164 (boolean_value -> FALSE .)
    JOIN            reduce using rule 164 (boolean_value -> FALSE .)
    WHERE           reduce using rule 164 (boolean_value -> FALSE .)
    ON              reduce using rule 164 (boolean_value -> FALSE .)
    USING           reduce using rule 164 (boolean_value -> FALSE .)
    WHEN            reduce using rule 164 (boolean_value -> FALSE .)
    END             reduce using rule 164 (boolean_value -> FALSE .)
    ELSE            reduce using rule 164 (boolean_value -> FALSE .)


state 99

    (127) base_primary_expression -> qualified_name .
    (183) qualified_name -> qualified_name . PERIOD identifier
    (132) function_call -> qualified_name . LPAREN call_list RPAREN

    ASTERISK        reduce using rule 127 (base_primary_expression -> qualified_name .)
    SLASH           reduce using rule 127 (base_primary_expression -> qualified_name .)
    PERCENT         reduce using rule 127 (base_primary_expression -> qualified_name .)
    CONCAT          reduce using rule 127 (base_primary_expression -> qualified_name .)
    IS              reduce using rule 127 (base_primary_expression -> qualified_name .)
    PLUS            reduce using rule 127 (base_primary_expression -> qualified_name .)
    MINUS           reduce using rule 127 (base_primary_expression -> qualified_name .)
    EQ              reduce using rule 127 (base_primary_expression -> qualified_name .)
    NE              reduce using rule 127 (base_primary_expression -> qualified_name .)
    LT              reduce using rule 127 (base_primary_expression -> qualified_name .)
    LE              reduce using rule 127 (base_primary_expression -> qualified_name .)
    GT              reduce using rule 127 (base_primary_expression -> qualified_name .)
    GE              reduce using rule 127 (base_primary_expression -> qualified_name .)
    NOT             reduce using rule 127 (base_primary_expression -> qualified_name .)
    BETWEEN         reduce using rule 127 (base_primary_expression -> qualified_name .)
    IN              reduce using rule 127 (base_primary_expression -> qualified_name .)
    LIKE            reduce using rule 127 (base_primary_expression -> qualified_name .)
    AS              reduce using rule 127 (base_primary_expression -> qualified_name .)
    IDENTIFIER      reduce using rule 127 (base_primary_expression -> qualified_name .)
    DIGIT_IDENTIFIER reduce using rule 127 (base_primary_expression -> qualified_name .)
    QUOTED_IDENTIFIER reduce using rule 127 (base_primary_expression -> qualified_name .)
    BACKQUOTED_IDENTIFIER reduce using rule 127 (base_primary_expression -> qualified_name .)
    NON_RESERVED    reduce using rule 127 (base_primary_expression -> qualified_name .)
    COMMA           reduce using rule 127 (base_primary_expression -> qualified_name .)
    FROM            reduce using rule 127 (base_primary_expression -> qualified_name .)
    INTERSECT       reduce using rule 127 (base_primary_expression -> qualified_name .)
    UNION           reduce using rule 127 (base_primary_expression -> qualified_name .)
    EXCEPT          reduce using rule 127 (base_primary_expression -> qualified_name .)
    ORDER           reduce using rule 127 (base_primary_expression -> qualified_name .)
    LIMIT           reduce using rule 127 (base_primary_expression -> qualified_name .)
    $end            reduce using rule 127 (base_primary_expression -> qualified_name .)
    RPAREN          reduce using rule 127 (base_primary_expression -> qualified_name .)
    AND             reduce using rule 127 (base_primary_expression -> qualified_name .)
    OR              reduce using rule 127 (base_primary_expression -> qualified_name .)
    ASC             reduce using rule 127 (base_primary_expression -> qualified_name .)
    DESC            reduce using rule 127 (base_primary_expression -> qualified_name .)
    NULLS           reduce using rule 127 (base_primary_expression -> qualified_name .)
    THEN            reduce using rule 127 (base_primary_expression -> qualified_name .)
    GROUP           reduce using rule 127 (base_primary_expression -> qualified_name .)
    HAVING          reduce using rule 127 (base_primary_expression -> qualified_name .)
    CROSS           reduce using rule 127 (base_primary_expression -> qualified_name .)
    NATURAL         reduce using rule 127 (base_primary_expression -> qualified_name .)
    INNER           reduce using rule 127 (base_primary_expression -> qualified_name .)
    LEFT            reduce using rule 127 (base_primary_expression -> qualified_name .)
    RIGHT           reduce using rule 127 (base_primary_expression -> qualified_name .)
    FULL            reduce using rule 127 (base_primary_expression -> qualified_name .)
    JOIN            reduce using rule 127 (base_primary_expression -> qualified_name .)
    WHERE           reduce using rule 127 (base_primary_expression -> qualified_name .)
    ON              reduce using rule 127 (base_primary_expression -> qualified_name .)
    USING           reduce using rule 127 (base_primary_expression -> qualified_name .)
    WHEN            reduce using rule 127 (base_primary_expression -> qualified_name .)
    END             reduce using rule 127 (base_primary_expression -> qualified_name .)
    ELSE            reduce using rule 127 (base_primary_expression -> qualified_name .)
    PERIOD          shift and go to state 67
    LPAREN          shift and go to state 158


state 100

    (117) factor -> sign_opt primary_expression .

    ASTERISK        reduce using rule 117 (factor -> sign_opt primary_expression .)
    SLASH           reduce using rule 117 (factor -> sign_opt primary_expression .)
    PERCENT         reduce using rule 117 (factor -> sign_opt primary_expression .)
    CONCAT          reduce using rule 117 (factor -> sign_opt primary_expression .)
    PLUS            reduce using rule 117 (factor -> sign_opt primary_expression .)
    MINUS           reduce using rule 117 (factor -> sign_opt primary_expression .)
    AND             reduce using rule 117 (factor -> sign_opt primary_expression .)
    OR              reduce using rule 117 (factor -> sign_opt primary_expression .)
    COMMA           reduce using rule 117 (factor -> sign_opt primary_expression .)
    INTERSECT       reduce using rule 117 (factor -> sign_opt primary_expression .)
    UNION           reduce using rule 117 (factor -> sign_opt primary_expression .)
    EXCEPT          reduce using rule 117 (factor -> sign_opt primary_expression .)
    ORDER           reduce using rule 117 (factor -> sign_opt primary_expression .)
    LIMIT           reduce using rule 117 (factor -> sign_opt primary_expression .)
    $end            reduce using rule 117 (factor -> sign_opt primary_expression .)
    RPAREN          reduce using rule 117 (factor -> sign_opt primary_expression .)
    ASC             reduce using rule 117 (factor -> sign_opt primary_expression .)
    DESC            reduce using rule 117 (factor -> sign_opt primary_expression .)
    NULLS           reduce using rule 117 (factor -> sign_opt primary_expression .)
    THEN            reduce using rule 117 (factor -> sign_opt primary_expression .)
    GROUP           reduce using rule 117 (factor -> sign_opt primary_expression .)
    HAVING          reduce using rule 117 (factor -> sign_opt primary_expression .)
    CROSS           reduce using rule 117 (factor -> sign_opt primary_expression .)
    NATURAL         reduce using rule 117 (factor -> sign_opt primary_expression .)
    INNER           reduce using rule 117 (factor -> sign_opt primary_expression .)
    LEFT            reduce using rule 117 (factor -> sign_opt primary_expression .)
    RIGHT           reduce using rule 117 (factor -> sign_opt primary_expression .)
    FULL            reduce using rule 117 (factor -> sign_opt primary_expression .)
    JOIN            reduce using rule 117 (factor -> sign_opt primary_expression .)
    WHERE           reduce using rule 117 (factor -> sign_opt primary_expression .)
    ON              reduce using rule 117 (factor -> sign_opt primary_expression .)
    USING           reduce using rule 117 (factor -> sign_opt primary_expression .)
    AS              reduce using rule 117 (factor -> sign_opt primary_expression .)
    IDENTIFIER      reduce using rule 117 (factor -> sign_opt primary_expression .)
    DIGIT_IDENTIFIER reduce using rule 117 (factor -> sign_opt primary_expression .)
    QUOTED_IDENTIFIER reduce using rule 117 (factor -> sign_opt primary_expression .)
    BACKQUOTED_IDENTIFIER reduce using rule 117 (factor -> sign_opt primary_expression .)
    NON_RESERVED    reduce using rule 117 (factor -> sign_opt primary_expression .)
    FROM            reduce using rule 117 (factor -> sign_opt primary_expression .)
    IS              reduce using rule 117 (factor -> sign_opt primary_expression .)
    EQ              reduce using rule 117 (factor -> sign_opt primary_expression .)
    NE              reduce using rule 117 (factor -> sign_opt primary_expression .)
    LT              reduce using rule 117 (factor -> sign_opt primary_expression .)
    LE              reduce using rule 117 (factor -> sign_opt primary_expression .)
    GT              reduce using rule 117 (factor -> sign_opt primary_expression .)
    GE              reduce using rule 117 (factor -> sign_opt primary_expression .)
    NOT             reduce using rule 117 (factor -> sign_opt primary_expression .)
    BETWEEN         reduce using rule 117 (factor -> sign_opt primary_expression .)
    IN              reduce using rule 117 (factor -> sign_opt primary_expression .)
    LIKE            reduce using rule 117 (factor -> sign_opt primary_expression .)
    WHEN            reduce using rule 117 (factor -> sign_opt primary_expression .)
    END             reduce using rule 117 (factor -> sign_opt primary_expression .)
    ELSE            reduce using rule 117 (factor -> sign_opt primary_expression .)


state 101

    (150) date_time -> LOCALTIMESTAMP . integer_param_opt
    (180) integer_param_opt -> . LPAREN INTEGER RPAREN
    (181) integer_param_opt -> . empty
    (194) empty -> .

    LPAREN          shift and go to state 150
    ASTERISK        reduce using rule 194 (empty -> .)
    SLASH           reduce using rule 194 (empty -> .)
    PERCENT         reduce using rule 194 (empty -> .)
    CONCAT          reduce using rule 194 (empty -> .)
    IS              reduce using rule 194 (empty -> .)
    PLUS            reduce using rule 194 (empty -> .)
    MINUS           reduce using rule 194 (empty -> .)
    EQ              reduce using rule 194 (empty -> .)
    NE              reduce using rule 194 (empty -> .)
    LT              reduce using rule 194 (empty -> .)
    LE              reduce using rule 194 (empty -> .)
    GT              reduce using rule 194 (empty -> .)
    GE              reduce using rule 194 (empty -> .)
    NOT             reduce using rule 194 (empty -> .)
    BETWEEN         reduce using rule 194 (empty -> .)
    IN              reduce using rule 194 (empty -> .)
    LIKE            reduce using rule 194 (empty -> .)
    AS              reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    COMMA           reduce using rule 194 (empty -> .)
    FROM            reduce using rule 194 (empty -> .)
    INTERSECT       reduce using rule 194 (empty -> .)
    UNION           reduce using rule 194 (empty -> .)
    EXCEPT          reduce using rule 194 (empty -> .)
    ORDER           reduce using rule 194 (empty -> .)
    LIMIT           reduce using rule 194 (empty -> .)
    $end            reduce using rule 194 (empty -> .)
    RPAREN          reduce using rule 194 (empty -> .)
    AND             reduce using rule 194 (empty -> .)
    OR              reduce using rule 194 (empty -> .)
    ASC             reduce using rule 194 (empty -> .)
    DESC            reduce using rule 194 (empty -> .)
    NULLS           reduce using rule 194 (empty -> .)
    THEN            reduce using rule 194 (empty -> .)
    GROUP           reduce using rule 194 (empty -> .)
    HAVING          reduce using rule 194 (empty -> .)
    CROSS           reduce using rule 194 (empty -> .)
    NATURAL         reduce using rule 194 (empty -> .)
    INNER           reduce using rule 194 (empty -> .)
    LEFT            reduce using rule 194 (empty -> .)
    RIGHT           reduce using rule 194 (empty -> .)
    FULL            reduce using rule 194 (empty -> .)
    JOIN            reduce using rule 194 (empty -> .)
    WHERE           reduce using rule 194 (empty -> .)
    ON              reduce using rule 194 (empty -> .)
    USING           reduce using rule 194 (empty -> .)
    WHEN            reduce using rule 194 (empty -> .)
    END             reduce using rule 194 (empty -> .)
    ELSE            reduce using rule 194 (empty -> .)

    empty                          shift and go to state 151
    integer_param_opt              shift and go to state 159

state 102

    (121) base_primary_expression -> NULL .

    ASTERISK        reduce using rule 121 (base_primary_expression -> NULL .)
    SLASH           reduce using rule 121 (base_primary_expression -> NULL .)
    PERCENT         reduce using rule 121 (base_primary_expression -> NULL .)
    CONCAT          reduce using rule 121 (base_primary_expression -> NULL .)
    IS              reduce using rule 121 (base_primary_expression -> NULL .)
    PLUS            reduce using rule 121 (base_primary_expression -> NULL .)
    MINUS           reduce using rule 121 (base_primary_expression -> NULL .)
    EQ              reduce using rule 121 (base_primary_expression -> NULL .)
    NE              reduce using rule 121 (base_primary_expression -> NULL .)
    LT              reduce using rule 121 (base_primary_expression -> NULL .)
    LE              reduce using rule 121 (base_primary_expression -> NULL .)
    GT              reduce using rule 121 (base_primary_expression -> NULL .)
    GE              reduce using rule 121 (base_primary_expression -> NULL .)
    NOT             reduce using rule 121 (base_primary_expression -> NULL .)
    BETWEEN         reduce using rule 121 (base_primary_expression -> NULL .)
    IN              reduce using rule 121 (base_primary_expression -> NULL .)
    LIKE            reduce using rule 121 (base_primary_expression -> NULL .)
    AS              reduce using rule 121 (base_primary_expression -> NULL .)
    IDENTIFIER      reduce using rule 121 (base_primary_expression -> NULL .)
    DIGIT_IDENTIFIER reduce using rule 121 (base_primary_expression -> NULL .)
    QUOTED_IDENTIFIER reduce using rule 121 (base_primary_expression -> NULL .)
    BACKQUOTED_IDENTIFIER reduce using rule 121 (base_primary_expression -> NULL .)
    NON_RESERVED    reduce using rule 121 (base_primary_expression -> NULL .)
    COMMA           reduce using rule 121 (base_primary_expression -> NULL .)
    FROM            reduce using rule 121 (base_primary_expression -> NULL .)
    INTERSECT       reduce using rule 121 (base_primary_expression -> NULL .)
    UNION           reduce using rule 121 (base_primary_expression -> NULL .)
    EXCEPT          reduce using rule 121 (base_primary_expression -> NULL .)
    ORDER           reduce using rule 121 (base_primary_expression -> NULL .)
    LIMIT           reduce using rule 121 (base_primary_expression -> NULL .)
    $end            reduce using rule 121 (base_primary_expression -> NULL .)
    RPAREN          reduce using rule 121 (base_primary_expression -> NULL .)
    AND             reduce using rule 121 (base_primary_expression -> NULL .)
    OR              reduce using rule 121 (base_primary_expression -> NULL .)
    ASC             reduce using rule 121 (base_primary_expression -> NULL .)
    DESC            reduce using rule 121 (base_primary_expression -> NULL .)
    NULLS           reduce using rule 121 (base_primary_expression -> NULL .)
    THEN            reduce using rule 121 (base_primary_expression -> NULL .)
    GROUP           reduce using rule 121 (base_primary_expression -> NULL .)
    HAVING          reduce using rule 121 (base_primary_expression -> NULL .)
    CROSS           reduce using rule 121 (base_primary_expression -> NULL .)
    NATURAL         reduce using rule 121 (base_primary_expression -> NULL .)
    INNER           reduce using rule 121 (base_primary_expression -> NULL .)
    LEFT            reduce using rule 121 (base_primary_expression -> NULL .)
    RIGHT           reduce using rule 121 (base_primary_expression -> NULL .)
    FULL            reduce using rule 121 (base_primary_expression -> NULL .)
    JOIN            reduce using rule 121 (base_primary_expression -> NULL .)
    WHERE           reduce using rule 121 (base_primary_expression -> NULL .)
    ON              reduce using rule 121 (base_primary_expression -> NULL .)
    USING           reduce using rule 121 (base_primary_expression -> NULL .)
    WHEN            reduce using rule 121 (base_primary_expression -> NULL .)
    END             reduce using rule 121 (base_primary_expression -> NULL .)
    ELSE            reduce using rule 121 (base_primary_expression -> NULL .)


state 103

    (163) boolean_value -> TRUE .

    RPAREN          reduce using rule 163 (boolean_value -> TRUE .)
    ASTERISK        reduce using rule 163 (boolean_value -> TRUE .)
    SLASH           reduce using rule 163 (boolean_value -> TRUE .)
    PERCENT         reduce using rule 163 (boolean_value -> TRUE .)
    CONCAT          reduce using rule 163 (boolean_value -> TRUE .)
    IS              reduce using rule 163 (boolean_value -> TRUE .)
    PLUS            reduce using rule 163 (boolean_value -> TRUE .)
    MINUS           reduce using rule 163 (boolean_value -> TRUE .)
    EQ              reduce using rule 163 (boolean_value -> TRUE .)
    NE              reduce using rule 163 (boolean_value -> TRUE .)
    LT              reduce using rule 163 (boolean_value -> TRUE .)
    LE              reduce using rule 163 (boolean_value -> TRUE .)
    GT              reduce using rule 163 (boolean_value -> TRUE .)
    GE              reduce using rule 163 (boolean_value -> TRUE .)
    NOT             reduce using rule 163 (boolean_value -> TRUE .)
    BETWEEN         reduce using rule 163 (boolean_value -> TRUE .)
    IN              reduce using rule 163 (boolean_value -> TRUE .)
    LIKE            reduce using rule 163 (boolean_value -> TRUE .)
    AS              reduce using rule 163 (boolean_value -> TRUE .)
    IDENTIFIER      reduce using rule 163 (boolean_value -> TRUE .)
    DIGIT_IDENTIFIER reduce using rule 163 (boolean_value -> TRUE .)
    QUOTED_IDENTIFIER reduce using rule 163 (boolean_value -> TRUE .)
    BACKQUOTED_IDENTIFIER reduce using rule 163 (boolean_value -> TRUE .)
    NON_RESERVED    reduce using rule 163 (boolean_value -> TRUE .)
    COMMA           reduce using rule 163 (boolean_value -> TRUE .)
    FROM            reduce using rule 163 (boolean_value -> TRUE .)
    INTERSECT       reduce using rule 163 (boolean_value -> TRUE .)
    UNION           reduce using rule 163 (boolean_value -> TRUE .)
    EXCEPT          reduce using rule 163 (boolean_value -> TRUE .)
    ORDER           reduce using rule 163 (boolean_value -> TRUE .)
    LIMIT           reduce using rule 163 (boolean_value -> TRUE .)
    $end            reduce using rule 163 (boolean_value -> TRUE .)
    AND             reduce using rule 163 (boolean_value -> TRUE .)
    OR              reduce using rule 163 (boolean_value -> TRUE .)
    ASC             reduce using rule 163 (boolean_value -> TRUE .)
    DESC            reduce using rule 163 (boolean_value -> TRUE .)
    NULLS           reduce using rule 163 (boolean_value -> TRUE .)
    THEN            reduce using rule 163 (boolean_value -> TRUE .)
    GROUP           reduce using rule 163 (boolean_value -> TRUE .)
    HAVING          reduce using rule 163 (boolean_value -> TRUE .)
    CROSS           reduce using rule 163 (boolean_value -> TRUE .)
    NATURAL         reduce using rule 163 (boolean_value -> TRUE .)
    INNER           reduce using rule 163 (boolean_value -> TRUE .)
    LEFT            reduce using rule 163 (boolean_value -> TRUE .)
    RIGHT           reduce using rule 163 (boolean_value -> TRUE .)
    FULL            reduce using rule 163 (boolean_value -> TRUE .)
    JOIN            reduce using rule 163 (boolean_value -> TRUE .)
    WHERE           reduce using rule 163 (boolean_value -> TRUE .)
    ON              reduce using rule 163 (boolean_value -> TRUE .)
    USING           reduce using rule 163 (boolean_value -> TRUE .)
    WHEN            reduce using rule 163 (boolean_value -> TRUE .)
    END             reduce using rule 163 (boolean_value -> TRUE .)
    ELSE            reduce using rule 163 (boolean_value -> TRUE .)


state 104

    (165) interval -> INTERVAL . sign_opt STRING interval_field interval_end_opt
    (174) sign_opt -> . sign
    (175) sign_opt -> . empty
    (176) sign -> . PLUS
    (177) sign -> . MINUS
    (194) empty -> .

    PLUS            shift and go to state 63
    MINUS           shift and go to state 47
    STRING          reduce using rule 194 (empty -> .)

    empty                          shift and go to state 55
    sign_opt                       shift and go to state 160
    sign                           shift and go to state 56

state 105

    (125) base_primary_expression -> interval .

    ASTERISK        reduce using rule 125 (base_primary_expression -> interval .)
    SLASH           reduce using rule 125 (base_primary_expression -> interval .)
    PERCENT         reduce using rule 125 (base_primary_expression -> interval .)
    CONCAT          reduce using rule 125 (base_primary_expression -> interval .)
    IS              reduce using rule 125 (base_primary_expression -> interval .)
    PLUS            reduce using rule 125 (base_primary_expression -> interval .)
    MINUS           reduce using rule 125 (base_primary_expression -> interval .)
    EQ              reduce using rule 125 (base_primary_expression -> interval .)
    NE              reduce using rule 125 (base_primary_expression -> interval .)
    LT              reduce using rule 125 (base_primary_expression -> interval .)
    LE              reduce using rule 125 (base_primary_expression -> interval .)
    GT              reduce using rule 125 (base_primary_expression -> interval .)
    GE              reduce using rule 125 (base_primary_expression -> interval .)
    NOT             reduce using rule 125 (base_primary_expression -> interval .)
    BETWEEN         reduce using rule 125 (base_primary_expression -> interval .)
    IN              reduce using rule 125 (base_primary_expression -> interval .)
    LIKE            reduce using rule 125 (base_primary_expression -> interval .)
    AS              reduce using rule 125 (base_primary_expression -> interval .)
    IDENTIFIER      reduce using rule 125 (base_primary_expression -> interval .)
    DIGIT_IDENTIFIER reduce using rule 125 (base_primary_expression -> interval .)
    QUOTED_IDENTIFIER reduce using rule 125 (base_primary_expression -> interval .)
    BACKQUOTED_IDENTIFIER reduce using rule 125 (base_primary_expression -> interval .)
    NON_RESERVED    reduce using rule 125 (base_primary_expression -> interval .)
    COMMA           reduce using rule 125 (base_primary_expression -> interval .)
    FROM            reduce using rule 125 (base_primary_expression -> interval .)
    INTERSECT       reduce using rule 125 (base_primary_expression -> interval .)
    UNION           reduce using rule 125 (base_primary_expression -> interval .)
    EXCEPT          reduce using rule 125 (base_primary_expression -> interval .)
    ORDER           reduce using rule 125 (base_primary_expression -> interval .)
    LIMIT           reduce using rule 125 (base_primary_expression -> interval .)
    $end            reduce using rule 125 (base_primary_expression -> interval .)
    RPAREN          reduce using rule 125 (base_primary_expression -> interval .)
    AND             reduce using rule 125 (base_primary_expression -> interval .)
    OR              reduce using rule 125 (base_primary_expression -> interval .)
    ASC             reduce using rule 125 (base_primary_expression -> interval .)
    DESC            reduce using rule 125 (base_primary_expression -> interval .)
    NULLS           reduce using rule 125 (base_primary_expression -> interval .)
    THEN            reduce using rule 125 (base_primary_expression -> interval .)
    GROUP           reduce using rule 125 (base_primary_expression -> interval .)
    HAVING          reduce using rule 125 (base_primary_expression -> interval .)
    CROSS           reduce using rule 125 (base_primary_expression -> interval .)
    NATURAL         reduce using rule 125 (base_primary_expression -> interval .)
    INNER           reduce using rule 125 (base_primary_expression -> interval .)
    LEFT            reduce using rule 125 (base_primary_expression -> interval .)
    RIGHT           reduce using rule 125 (base_primary_expression -> interval .)
    FULL            reduce using rule 125 (base_primary_expression -> interval .)
    JOIN            reduce using rule 125 (base_primary_expression -> interval .)
    WHERE           reduce using rule 125 (base_primary_expression -> interval .)
    ON              reduce using rule 125 (base_primary_expression -> interval .)
    USING           reduce using rule 125 (base_primary_expression -> interval .)
    WHEN            reduce using rule 125 (base_primary_expression -> interval .)
    END             reduce using rule 125 (base_primary_expression -> interval .)
    ELSE            reduce using rule 125 (base_primary_expression -> interval .)


state 106

    (128) base_primary_expression -> function_call .

    ASTERISK        reduce using rule 128 (base_primary_expression -> function_call .)
    SLASH           reduce using rule 128 (base_primary_expression -> function_call .)
    PERCENT         reduce using rule 128 (base_primary_expression -> function_call .)
    CONCAT          reduce using rule 128 (base_primary_expression -> function_call .)
    IS              reduce using rule 128 (base_primary_expression -> function_call .)
    PLUS            reduce using rule 128 (base_primary_expression -> function_call .)
    MINUS           reduce using rule 128 (base_primary_expression -> function_call .)
    EQ              reduce using rule 128 (base_primary_expression -> function_call .)
    NE              reduce using rule 128 (base_primary_expression -> function_call .)
    LT              reduce using rule 128 (base_primary_expression -> function_call .)
    LE              reduce using rule 128 (base_primary_expression -> function_call .)
    GT              reduce using rule 128 (base_primary_expression -> function_call .)
    GE              reduce using rule 128 (base_primary_expression -> function_call .)
    NOT             reduce using rule 128 (base_primary_expression -> function_call .)
    BETWEEN         reduce using rule 128 (base_primary_expression -> function_call .)
    IN              reduce using rule 128 (base_primary_expression -> function_call .)
    LIKE            reduce using rule 128 (base_primary_expression -> function_call .)
    AS              reduce using rule 128 (base_primary_expression -> function_call .)
    IDENTIFIER      reduce using rule 128 (base_primary_expression -> function_call .)
    DIGIT_IDENTIFIER reduce using rule 128 (base_primary_expression -> function_call .)
    QUOTED_IDENTIFIER reduce using rule 128 (base_primary_expression -> function_call .)
    BACKQUOTED_IDENTIFIER reduce using rule 128 (base_primary_expression -> function_call .)
    NON_RESERVED    reduce using rule 128 (base_primary_expression -> function_call .)
    COMMA           reduce using rule 128 (base_primary_expression -> function_call .)
    FROM            reduce using rule 128 (base_primary_expression -> function_call .)
    INTERSECT       reduce using rule 128 (base_primary_expression -> function_call .)
    UNION           reduce using rule 128 (base_primary_expression -> function_call .)
    EXCEPT          reduce using rule 128 (base_primary_expression -> function_call .)
    ORDER           reduce using rule 128 (base_primary_expression -> function_call .)
    LIMIT           reduce using rule 128 (base_primary_expression -> function_call .)
    $end            reduce using rule 128 (base_primary_expression -> function_call .)
    RPAREN          reduce using rule 128 (base_primary_expression -> function_call .)
    AND             reduce using rule 128 (base_primary_expression -> function_call .)
    OR              reduce using rule 128 (base_primary_expression -> function_call .)
    ASC             reduce using rule 128 (base_primary_expression -> function_call .)
    DESC            reduce using rule 128 (base_primary_expression -> function_call .)
    NULLS           reduce using rule 128 (base_primary_expression -> function_call .)
    THEN            reduce using rule 128 (base_primary_expression -> function_call .)
    GROUP           reduce using rule 128 (base_primary_expression -> function_call .)
    HAVING          reduce using rule 128 (base_primary_expression -> function_call .)
    CROSS           reduce using rule 128 (base_primary_expression -> function_call .)
    NATURAL         reduce using rule 128 (base_primary_expression -> function_call .)
    INNER           reduce using rule 128 (base_primary_expression -> function_call .)
    LEFT            reduce using rule 128 (base_primary_expression -> function_call .)
    RIGHT           reduce using rule 128 (base_primary_expression -> function_call .)
    FULL            reduce using rule 128 (base_primary_expression -> function_call .)
    JOIN            reduce using rule 128 (base_primary_expression -> function_call .)
    WHERE           reduce using rule 128 (base_primary_expression -> function_call .)
    ON              reduce using rule 128 (base_primary_expression -> function_call .)
    USING           reduce using rule 128 (base_primary_expression -> function_call .)
    WHEN            reduce using rule 128 (base_primary_expression -> function_call .)
    END             reduce using rule 128 (base_primary_expression -> function_call .)
    ELSE            reduce using rule 128 (base_primary_expression -> function_call .)


state 107

    (122) base_primary_expression -> number .

    ASTERISK        reduce using rule 122 (base_primary_expression -> number .)
    SLASH           reduce using rule 122 (base_primary_expression -> number .)
    PERCENT         reduce using rule 122 (base_primary_expression -> number .)
    CONCAT          reduce using rule 122 (base_primary_expression -> number .)
    IS              reduce using rule 122 (base_primary_expression -> number .)
    PLUS            reduce using rule 122 (base_primary_expression -> number .)
    MINUS           reduce using rule 122 (base_primary_expression -> number .)
    EQ              reduce using rule 122 (base_primary_expression -> number .)
    NE              reduce using rule 122 (base_primary_expression -> number .)
    LT              reduce using rule 122 (base_primary_expression -> number .)
    LE              reduce using rule 122 (base_primary_expression -> number .)
    GT              reduce using rule 122 (base_primary_expression -> number .)
    GE              reduce using rule 122 (base_primary_expression -> number .)
    NOT             reduce using rule 122 (base_primary_expression -> number .)
    BETWEEN         reduce using rule 122 (base_primary_expression -> number .)
    IN              reduce using rule 122 (base_primary_expression -> number .)
    LIKE            reduce using rule 122 (base_primary_expression -> number .)
    AS              reduce using rule 122 (base_primary_expression -> number .)
    IDENTIFIER      reduce using rule 122 (base_primary_expression -> number .)
    DIGIT_IDENTIFIER reduce using rule 122 (base_primary_expression -> number .)
    QUOTED_IDENTIFIER reduce using rule 122 (base_primary_expression -> number .)
    BACKQUOTED_IDENTIFIER reduce using rule 122 (base_primary_expression -> number .)
    NON_RESERVED    reduce using rule 122 (base_primary_expression -> number .)
    COMMA           reduce using rule 122 (base_primary_expression -> number .)
    FROM            reduce using rule 122 (base_primary_expression -> number .)
    INTERSECT       reduce using rule 122 (base_primary_expression -> number .)
    UNION           reduce using rule 122 (base_primary_expression -> number .)
    EXCEPT          reduce using rule 122 (base_primary_expression -> number .)
    ORDER           reduce using rule 122 (base_primary_expression -> number .)
    LIMIT           reduce using rule 122 (base_primary_expression -> number .)
    $end            reduce using rule 122 (base_primary_expression -> number .)
    RPAREN          reduce using rule 122 (base_primary_expression -> number .)
    AND             reduce using rule 122 (base_primary_expression -> number .)
    OR              reduce using rule 122 (base_primary_expression -> number .)
    ASC             reduce using rule 122 (base_primary_expression -> number .)
    DESC            reduce using rule 122 (base_primary_expression -> number .)
    NULLS           reduce using rule 122 (base_primary_expression -> number .)
    THEN            reduce using rule 122 (base_primary_expression -> number .)
    GROUP           reduce using rule 122 (base_primary_expression -> number .)
    HAVING          reduce using rule 122 (base_primary_expression -> number .)
    CROSS           reduce using rule 122 (base_primary_expression -> number .)
    NATURAL         reduce using rule 122 (base_primary_expression -> number .)
    INNER           reduce using rule 122 (base_primary_expression -> number .)
    LEFT            reduce using rule 122 (base_primary_expression -> number .)
    RIGHT           reduce using rule 122 (base_primary_expression -> number .)
    FULL            reduce using rule 122 (base_primary_expression -> number .)
    JOIN            reduce using rule 122 (base_primary_expression -> number .)
    WHERE           reduce using rule 122 (base_primary_expression -> number .)
    ON              reduce using rule 122 (base_primary_expression -> number .)
    USING           reduce using rule 122 (base_primary_expression -> number .)
    WHEN            reduce using rule 122 (base_primary_expression -> number .)
    END             reduce using rule 122 (base_primary_expression -> number .)
    ELSE            reduce using rule 122 (base_primary_expression -> number .)


state 108

    (130) base_primary_expression -> case_specification .

    ASTERISK        reduce using rule 130 (base_primary_expression -> case_specification .)
    SLASH           reduce using rule 130 (base_primary_expression -> case_specification .)
    PERCENT         reduce using rule 130 (base_primary_expression -> case_specification .)
    CONCAT          reduce using rule 130 (base_primary_expression -> case_specification .)
    IS              reduce using rule 130 (base_primary_expression -> case_specification .)
    PLUS            reduce using rule 130 (base_primary_expression -> case_specification .)
    MINUS           reduce using rule 130 (base_primary_expression -> case_specification .)
    EQ              reduce using rule 130 (base_primary_expression -> case_specification .)
    NE              reduce using rule 130 (base_primary_expression -> case_specification .)
    LT              reduce using rule 130 (base_primary_expression -> case_specification .)
    LE              reduce using rule 130 (base_primary_expression -> case_specification .)
    GT              reduce using rule 130 (base_primary_expression -> case_specification .)
    GE              reduce using rule 130 (base_primary_expression -> case_specification .)
    NOT             reduce using rule 130 (base_primary_expression -> case_specification .)
    BETWEEN         reduce using rule 130 (base_primary_expression -> case_specification .)
    IN              reduce using rule 130 (base_primary_expression -> case_specification .)
    LIKE            reduce using rule 130 (base_primary_expression -> case_specification .)
    AS              reduce using rule 130 (base_primary_expression -> case_specification .)
    IDENTIFIER      reduce using rule 130 (base_primary_expression -> case_specification .)
    DIGIT_IDENTIFIER reduce using rule 130 (base_primary_expression -> case_specification .)
    QUOTED_IDENTIFIER reduce using rule 130 (base_primary_expression -> case_specification .)
    BACKQUOTED_IDENTIFIER reduce using rule 130 (base_primary_expression -> case_specification .)
    NON_RESERVED    reduce using rule 130 (base_primary_expression -> case_specification .)
    COMMA           reduce using rule 130 (base_primary_expression -> case_specification .)
    FROM            reduce using rule 130 (base_primary_expression -> case_specification .)
    INTERSECT       reduce using rule 130 (base_primary_expression -> case_specification .)
    UNION           reduce using rule 130 (base_primary_expression -> case_specification .)
    EXCEPT          reduce using rule 130 (base_primary_expression -> case_specification .)
    ORDER           reduce using rule 130 (base_primary_expression -> case_specification .)
    LIMIT           reduce using rule 130 (base_primary_expression -> case_specification .)
    $end            reduce using rule 130 (base_primary_expression -> case_specification .)
    RPAREN          reduce using rule 130 (base_primary_expression -> case_specification .)
    AND             reduce using rule 130 (base_primary_expression -> case_specification .)
    OR              reduce using rule 130 (base_primary_expression -> case_specification .)
    ASC             reduce using rule 130 (base_primary_expression -> case_specification .)
    DESC            reduce using rule 130 (base_primary_expression -> case_specification .)
    NULLS           reduce using rule 130 (base_primary_expression -> case_specification .)
    THEN            reduce using rule 130 (base_primary_expression -> case_specification .)
    GROUP           reduce using rule 130 (base_primary_expression -> case_specification .)
    HAVING          reduce using rule 130 (base_primary_expression -> case_specification .)
    CROSS           reduce using rule 130 (base_primary_expression -> case_specification .)
    NATURAL         reduce using rule 130 (base_primary_expression -> case_specification .)
    INNER           reduce using rule 130 (base_primary_expression -> case_specification .)
    LEFT            reduce using rule 130 (base_primary_expression -> case_specification .)
    RIGHT           reduce using rule 130 (base_primary_expression -> case_specification .)
    FULL            reduce using rule 130 (base_primary_expression -> case_specification .)
    JOIN            reduce using rule 130 (base_primary_expression -> case_specification .)
    WHERE           reduce using rule 130 (base_primary_expression -> case_specification .)
    ON              reduce using rule 130 (base_primary_expression -> case_specification .)
    USING           reduce using rule 130 (base_primary_expression -> case_specification .)
    WHEN            reduce using rule 130 (base_primary_expression -> case_specification .)
    END             reduce using rule 130 (base_primary_expression -> case_specification .)
    ELSE            reduce using rule 130 (base_primary_expression -> case_specification .)


state 109

    (192) number -> DECIMAL .

    RPAREN          reduce using rule 192 (number -> DECIMAL .)
    ASTERISK        reduce using rule 192 (number -> DECIMAL .)
    SLASH           reduce using rule 192 (number -> DECIMAL .)
    PERCENT         reduce using rule 192 (number -> DECIMAL .)
    CONCAT          reduce using rule 192 (number -> DECIMAL .)
    IS              reduce using rule 192 (number -> DECIMAL .)
    PLUS            reduce using rule 192 (number -> DECIMAL .)
    MINUS           reduce using rule 192 (number -> DECIMAL .)
    EQ              reduce using rule 192 (number -> DECIMAL .)
    NE              reduce using rule 192 (number -> DECIMAL .)
    LT              reduce using rule 192 (number -> DECIMAL .)
    LE              reduce using rule 192 (number -> DECIMAL .)
    GT              reduce using rule 192 (number -> DECIMAL .)
    GE              reduce using rule 192 (number -> DECIMAL .)
    NOT             reduce using rule 192 (number -> DECIMAL .)
    BETWEEN         reduce using rule 192 (number -> DECIMAL .)
    IN              reduce using rule 192 (number -> DECIMAL .)
    LIKE            reduce using rule 192 (number -> DECIMAL .)
    AS              reduce using rule 192 (number -> DECIMAL .)
    IDENTIFIER      reduce using rule 192 (number -> DECIMAL .)
    DIGIT_IDENTIFIER reduce using rule 192 (number -> DECIMAL .)
    QUOTED_IDENTIFIER reduce using rule 192 (number -> DECIMAL .)
    BACKQUOTED_IDENTIFIER reduce using rule 192 (number -> DECIMAL .)
    NON_RESERVED    reduce using rule 192 (number -> DECIMAL .)
    COMMA           reduce using rule 192 (number -> DECIMAL .)
    FROM            reduce using rule 192 (number -> DECIMAL .)
    INTERSECT       reduce using rule 192 (number -> DECIMAL .)
    UNION           reduce using rule 192 (number -> DECIMAL .)
    EXCEPT          reduce using rule 192 (number -> DECIMAL .)
    ORDER           reduce using rule 192 (number -> DECIMAL .)
    LIMIT           reduce using rule 192 (number -> DECIMAL .)
    $end            reduce using rule 192 (number -> DECIMAL .)
    AND             reduce using rule 192 (number -> DECIMAL .)
    OR              reduce using rule 192 (number -> DECIMAL .)
    ASC             reduce using rule 192 (number -> DECIMAL .)
    DESC            reduce using rule 192 (number -> DECIMAL .)
    NULLS           reduce using rule 192 (number -> DECIMAL .)
    THEN            reduce using rule 192 (number -> DECIMAL .)
    GROUP           reduce using rule 192 (number -> DECIMAL .)
    HAVING          reduce using rule 192 (number -> DECIMAL .)
    CROSS           reduce using rule 192 (number -> DECIMAL .)
    NATURAL         reduce using rule 192 (number -> DECIMAL .)
    INNER           reduce using rule 192 (number -> DECIMAL .)
    LEFT            reduce using rule 192 (number -> DECIMAL .)
    RIGHT           reduce using rule 192 (number -> DECIMAL .)
    FULL            reduce using rule 192 (number -> DECIMAL .)
    JOIN            reduce using rule 192 (number -> DECIMAL .)
    WHERE           reduce using rule 192 (number -> DECIMAL .)
    ON              reduce using rule 192 (number -> DECIMAL .)
    USING           reduce using rule 192 (number -> DECIMAL .)
    WHEN            reduce using rule 192 (number -> DECIMAL .)
    END             reduce using rule 192 (number -> DECIMAL .)
    ELSE            reduce using rule 192 (number -> DECIMAL .)


state 110

    (126) base_primary_expression -> identifier . STRING
    (184) qualified_name -> identifier .

    STRING          shift and go to state 161
    PERIOD          reduce using rule 184 (qualified_name -> identifier .)
    LPAREN          reduce using rule 184 (qualified_name -> identifier .)
    ASTERISK        reduce using rule 184 (qualified_name -> identifier .)
    SLASH           reduce using rule 184 (qualified_name -> identifier .)
    PERCENT         reduce using rule 184 (qualified_name -> identifier .)
    CONCAT          reduce using rule 184 (qualified_name -> identifier .)
    IS              reduce using rule 184 (qualified_name -> identifier .)
    PLUS            reduce using rule 184 (qualified_name -> identifier .)
    MINUS           reduce using rule 184 (qualified_name -> identifier .)
    EQ              reduce using rule 184 (qualified_name -> identifier .)
    NE              reduce using rule 184 (qualified_name -> identifier .)
    LT              reduce using rule 184 (qualified_name -> identifier .)
    LE              reduce using rule 184 (qualified_name -> identifier .)
    GT              reduce using rule 184 (qualified_name -> identifier .)
    GE              reduce using rule 184 (qualified_name -> identifier .)
    NOT             reduce using rule 184 (qualified_name -> identifier .)
    BETWEEN         reduce using rule 184 (qualified_name -> identifier .)
    IN              reduce using rule 184 (qualified_name -> identifier .)
    LIKE            reduce using rule 184 (qualified_name -> identifier .)
    AS              reduce using rule 184 (qualified_name -> identifier .)
    IDENTIFIER      reduce using rule 184 (qualified_name -> identifier .)
    DIGIT_IDENTIFIER reduce using rule 184 (qualified_name -> identifier .)
    QUOTED_IDENTIFIER reduce using rule 184 (qualified_name -> identifier .)
    BACKQUOTED_IDENTIFIER reduce using rule 184 (qualified_name -> identifier .)
    NON_RESERVED    reduce using rule 184 (qualified_name -> identifier .)
    COMMA           reduce using rule 184 (qualified_name -> identifier .)
    FROM            reduce using rule 184 (qualified_name -> identifier .)
    INTERSECT       reduce using rule 184 (qualified_name -> identifier .)
    UNION           reduce using rule 184 (qualified_name -> identifier .)
    EXCEPT          reduce using rule 184 (qualified_name -> identifier .)
    ORDER           reduce using rule 184 (qualified_name -> identifier .)
    LIMIT           reduce using rule 184 (qualified_name -> identifier .)
    $end            reduce using rule 184 (qualified_name -> identifier .)
    RPAREN          reduce using rule 184 (qualified_name -> identifier .)
    AND             reduce using rule 184 (qualified_name -> identifier .)
    OR              reduce using rule 184 (qualified_name -> identifier .)
    ASC             reduce using rule 184 (qualified_name -> identifier .)
    DESC            reduce using rule 184 (qualified_name -> identifier .)
    NULLS           reduce using rule 184 (qualified_name -> identifier .)
    THEN            reduce using rule 184 (qualified_name -> identifier .)
    GROUP           reduce using rule 184 (qualified_name -> identifier .)
    HAVING          reduce using rule 184 (qualified_name -> identifier .)
    CROSS           reduce using rule 184 (qualified_name -> identifier .)
    NATURAL         reduce using rule 184 (qualified_name -> identifier .)
    INNER           reduce using rule 184 (qualified_name -> identifier .)
    LEFT            reduce using rule 184 (qualified_name -> identifier .)
    RIGHT           reduce using rule 184 (qualified_name -> identifier .)
    FULL            reduce using rule 184 (qualified_name -> identifier .)
    JOIN            reduce using rule 184 (qualified_name -> identifier .)
    WHERE           reduce using rule 184 (qualified_name -> identifier .)
    ON              reduce using rule 184 (qualified_name -> identifier .)
    USING           reduce using rule 184 (qualified_name -> identifier .)
    WHEN            reduce using rule 184 (qualified_name -> identifier .)
    END             reduce using rule 184 (qualified_name -> identifier .)
    ELSE            reduce using rule 184 (qualified_name -> identifier .)


state 111

    (118) primary_expression -> parenthetic_primary_expression .

    ASTERISK        reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    SLASH           reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    PERCENT         reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    CONCAT          reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    IS              reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    PLUS            reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    MINUS           reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    EQ              reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    NE              reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    LT              reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    LE              reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    GT              reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    GE              reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    NOT             reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    BETWEEN         reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    IN              reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    LIKE            reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    AS              reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    IDENTIFIER      reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    DIGIT_IDENTIFIER reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    QUOTED_IDENTIFIER reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    BACKQUOTED_IDENTIFIER reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    NON_RESERVED    reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    COMMA           reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    FROM            reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    INTERSECT       reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    UNION           reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    EXCEPT          reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    ORDER           reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    LIMIT           reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    $end            reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    RPAREN          reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    AND             reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    OR              reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    ASC             reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    DESC            reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    NULLS           reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    THEN            reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    GROUP           reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    HAVING          reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    CROSS           reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    NATURAL         reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    INNER           reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    LEFT            reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    RIGHT           reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    FULL            reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    JOIN            reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    WHERE           reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    ON              reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    USING           reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    WHEN            reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    END             reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)
    ELSE            reduce using rule 118 (primary_expression -> parenthetic_primary_expression .)


state 112

    (147) date_time -> CURRENT_TIME . integer_param_opt
    (180) integer_param_opt -> . LPAREN INTEGER RPAREN
    (181) integer_param_opt -> . empty
    (194) empty -> .

    LPAREN          shift and go to state 150
    ASTERISK        reduce using rule 194 (empty -> .)
    SLASH           reduce using rule 194 (empty -> .)
    PERCENT         reduce using rule 194 (empty -> .)
    CONCAT          reduce using rule 194 (empty -> .)
    IS              reduce using rule 194 (empty -> .)
    PLUS            reduce using rule 194 (empty -> .)
    MINUS           reduce using rule 194 (empty -> .)
    EQ              reduce using rule 194 (empty -> .)
    NE              reduce using rule 194 (empty -> .)
    LT              reduce using rule 194 (empty -> .)
    LE              reduce using rule 194 (empty -> .)
    GT              reduce using rule 194 (empty -> .)
    GE              reduce using rule 194 (empty -> .)
    NOT             reduce using rule 194 (empty -> .)
    BETWEEN         reduce using rule 194 (empty -> .)
    IN              reduce using rule 194 (empty -> .)
    LIKE            reduce using rule 194 (empty -> .)
    AS              reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    COMMA           reduce using rule 194 (empty -> .)
    FROM            reduce using rule 194 (empty -> .)
    INTERSECT       reduce using rule 194 (empty -> .)
    UNION           reduce using rule 194 (empty -> .)
    EXCEPT          reduce using rule 194 (empty -> .)
    ORDER           reduce using rule 194 (empty -> .)
    LIMIT           reduce using rule 194 (empty -> .)
    $end            reduce using rule 194 (empty -> .)
    RPAREN          reduce using rule 194 (empty -> .)
    AND             reduce using rule 194 (empty -> .)
    OR              reduce using rule 194 (empty -> .)
    ASC             reduce using rule 194 (empty -> .)
    DESC            reduce using rule 194 (empty -> .)
    NULLS           reduce using rule 194 (empty -> .)
    THEN            reduce using rule 194 (empty -> .)
    GROUP           reduce using rule 194 (empty -> .)
    HAVING          reduce using rule 194 (empty -> .)
    CROSS           reduce using rule 194 (empty -> .)
    NATURAL         reduce using rule 194 (empty -> .)
    INNER           reduce using rule 194 (empty -> .)
    LEFT            reduce using rule 194 (empty -> .)
    RIGHT           reduce using rule 194 (empty -> .)
    FULL            reduce using rule 194 (empty -> .)
    JOIN            reduce using rule 194 (empty -> .)
    WHERE           reduce using rule 194 (empty -> .)
    ON              reduce using rule 194 (empty -> .)
    USING           reduce using rule 194 (empty -> .)
    WHEN            reduce using rule 194 (empty -> .)
    END             reduce using rule 194 (empty -> .)
    ELSE            reduce using rule 194 (empty -> .)

    empty                          shift and go to state 151
    integer_param_opt              shift and go to state 162

state 113

    (133) case_specification -> simple_case .

    RPAREN          reduce using rule 133 (case_specification -> simple_case .)
    ASTERISK        reduce using rule 133 (case_specification -> simple_case .)
    SLASH           reduce using rule 133 (case_specification -> simple_case .)
    PERCENT         reduce using rule 133 (case_specification -> simple_case .)
    CONCAT          reduce using rule 133 (case_specification -> simple_case .)
    IS              reduce using rule 133 (case_specification -> simple_case .)
    PLUS            reduce using rule 133 (case_specification -> simple_case .)
    MINUS           reduce using rule 133 (case_specification -> simple_case .)
    EQ              reduce using rule 133 (case_specification -> simple_case .)
    NE              reduce using rule 133 (case_specification -> simple_case .)
    LT              reduce using rule 133 (case_specification -> simple_case .)
    LE              reduce using rule 133 (case_specification -> simple_case .)
    GT              reduce using rule 133 (case_specification -> simple_case .)
    GE              reduce using rule 133 (case_specification -> simple_case .)
    NOT             reduce using rule 133 (case_specification -> simple_case .)
    BETWEEN         reduce using rule 133 (case_specification -> simple_case .)
    IN              reduce using rule 133 (case_specification -> simple_case .)
    LIKE            reduce using rule 133 (case_specification -> simple_case .)
    AS              reduce using rule 133 (case_specification -> simple_case .)
    IDENTIFIER      reduce using rule 133 (case_specification -> simple_case .)
    DIGIT_IDENTIFIER reduce using rule 133 (case_specification -> simple_case .)
    QUOTED_IDENTIFIER reduce using rule 133 (case_specification -> simple_case .)
    BACKQUOTED_IDENTIFIER reduce using rule 133 (case_specification -> simple_case .)
    NON_RESERVED    reduce using rule 133 (case_specification -> simple_case .)
    COMMA           reduce using rule 133 (case_specification -> simple_case .)
    FROM            reduce using rule 133 (case_specification -> simple_case .)
    INTERSECT       reduce using rule 133 (case_specification -> simple_case .)
    UNION           reduce using rule 133 (case_specification -> simple_case .)
    EXCEPT          reduce using rule 133 (case_specification -> simple_case .)
    ORDER           reduce using rule 133 (case_specification -> simple_case .)
    LIMIT           reduce using rule 133 (case_specification -> simple_case .)
    $end            reduce using rule 133 (case_specification -> simple_case .)
    AND             reduce using rule 133 (case_specification -> simple_case .)
    OR              reduce using rule 133 (case_specification -> simple_case .)
    ASC             reduce using rule 133 (case_specification -> simple_case .)
    DESC            reduce using rule 133 (case_specification -> simple_case .)
    NULLS           reduce using rule 133 (case_specification -> simple_case .)
    THEN            reduce using rule 133 (case_specification -> simple_case .)
    GROUP           reduce using rule 133 (case_specification -> simple_case .)
    HAVING          reduce using rule 133 (case_specification -> simple_case .)
    CROSS           reduce using rule 133 (case_specification -> simple_case .)
    NATURAL         reduce using rule 133 (case_specification -> simple_case .)
    INNER           reduce using rule 133 (case_specification -> simple_case .)
    LEFT            reduce using rule 133 (case_specification -> simple_case .)
    RIGHT           reduce using rule 133 (case_specification -> simple_case .)
    FULL            reduce using rule 133 (case_specification -> simple_case .)
    JOIN            reduce using rule 133 (case_specification -> simple_case .)
    WHERE           reduce using rule 133 (case_specification -> simple_case .)
    ON              reduce using rule 133 (case_specification -> simple_case .)
    USING           reduce using rule 133 (case_specification -> simple_case .)
    WHEN            reduce using rule 133 (case_specification -> simple_case .)
    END             reduce using rule 133 (case_specification -> simple_case .)
    ELSE            reduce using rule 133 (case_specification -> simple_case .)


state 114

    (120) parenthetic_primary_expression -> LPAREN . base_primary_expression RPAREN
    (2) subquery -> LPAREN . query RPAREN
    (121) base_primary_expression -> . NULL
    (122) base_primary_expression -> . number
    (123) base_primary_expression -> . boolean_value
    (124) base_primary_expression -> . STRING
    (125) base_primary_expression -> . interval
    (126) base_primary_expression -> . identifier STRING
    (127) base_primary_expression -> . qualified_name
    (128) base_primary_expression -> . function_call
    (129) base_primary_expression -> . date_time
    (130) base_primary_expression -> . case_specification
    (131) base_primary_expression -> . subquery
    (3) query -> . query_no_with
    (192) number -> . DECIMAL
    (193) number -> . INTEGER
    (163) boolean_value -> . TRUE
    (164) boolean_value -> . FALSE
    (165) interval -> . INTERVAL sign_opt STRING interval_field interval_end_opt
    (185) identifier -> . IDENTIFIER
    (186) identifier -> . quoted_identifier
    (187) identifier -> . non_reserved
    (188) identifier -> . DIGIT_IDENTIFIER
    (183) qualified_name -> . qualified_name PERIOD identifier
    (184) qualified_name -> . identifier
    (132) function_call -> . qualified_name LPAREN call_list RPAREN
    (146) date_time -> . CURRENT_DATE
    (147) date_time -> . CURRENT_TIME integer_param_opt
    (148) date_time -> . CURRENT_TIMESTAMP integer_param_opt
    (149) date_time -> . LOCALTIME integer_param_opt
    (150) date_time -> . LOCALTIMESTAMP integer_param_opt
    (133) case_specification -> . simple_case
    (134) case_specification -> . searched_case
    (2) subquery -> . LPAREN query RPAREN
    (4) query_no_with -> . query_term order_by_opt limit_opt
    (190) quoted_identifier -> . QUOTED_IDENTIFIER
    (191) quoted_identifier -> . BACKQUOTED_IDENTIFIER
    (189) non_reserved -> . NON_RESERVED
    (135) simple_case -> . CASE value_expression when_clauses else_opt END
    (136) searched_case -> . CASE when_clauses else_opt END
    (19) query_term -> . query_term_intersect
    (20) query_term -> . query_term UNION set_quantifier_opt query_term_intersect
    (21) query_term -> . query_term EXCEPT set_quantifier_opt query_term_intersect
    (22) query_term_intersect -> . nonjoin_query_primary
    (23) query_term_intersect -> . query_term_intersect INTERSECT set_quantifier_opt nonjoin_query_primary
    (24) nonjoin_query_primary -> . simple_table
    (25) nonjoin_query_primary -> . LPAREN query_term RPAREN
    (26) simple_table -> . query_specification
    (27) simple_table -> . explicit_table
    (28) simple_table -> . table_value_constructor
    (33) query_specification -> . SELECT set_quantifier_opt adql_top_opt select_items table_expression_opt
    (29) explicit_table -> . TABLE qualified_name
    (30) table_value_constructor -> . VALUES values_list

    NULL            shift and go to state 102
    STRING          shift and go to state 94
    DECIMAL         shift and go to state 109
    INTEGER         shift and go to state 115
    TRUE            shift and go to state 103
    FALSE           shift and go to state 98
    INTERVAL        shift and go to state 104
    IDENTIFIER      shift and go to state 27
    DIGIT_IDENTIFIER shift and go to state 26
    CURRENT_DATE    shift and go to state 92
    CURRENT_TIME    shift and go to state 112
    CURRENT_TIMESTAMP shift and go to state 91
    LOCALTIME       shift and go to state 96
    LOCALTIMESTAMP  shift and go to state 101
    LPAREN          shift and go to state 164
    QUOTED_IDENTIFIER shift and go to state 24
    BACKQUOTED_IDENTIFIER shift and go to state 31
    NON_RESERVED    shift and go to state 30
    CASE            shift and go to state 97
    SELECT          shift and go to state 13
    TABLE           shift and go to state 10
    VALUES          shift and go to state 3

    query_term_intersect           shift and go to state 1
    subquery                       shift and go to state 90
    simple_table                   shift and go to state 2
    quoted_identifier              shift and go to state 25
    date_time                      shift and go to state 116
    interval                       shift and go to state 105
    searched_case                  shift and go to state 95
    number                         shift and go to state 107
    boolean_value                  shift and go to state 93
    explicit_table                 shift and go to state 4
    case_specification             shift and go to state 108
    query_specification            shift and go to state 5
    nonjoin_query_primary          shift and go to state 6
    identifier                     shift and go to state 110
    query                          shift and go to state 163
    function_call                  shift and go to state 106
    query_no_with                  shift and go to state 9
    non_reserved                   shift and go to state 28
    qualified_name                 shift and go to state 99
    simple_case                    shift and go to state 113
    query_term                     shift and go to state 11
    base_primary_expression        shift and go to state 165
    table_value_constructor        shift and go to state 14

state 115

    (193) number -> INTEGER .

    RPAREN          reduce using rule 193 (number -> INTEGER .)
    ASTERISK        reduce using rule 193 (number -> INTEGER .)
    SLASH           reduce using rule 193 (number -> INTEGER .)
    PERCENT         reduce using rule 193 (number -> INTEGER .)
    CONCAT          reduce using rule 193 (number -> INTEGER .)
    IS              reduce using rule 193 (number -> INTEGER .)
    PLUS            reduce using rule 193 (number -> INTEGER .)
    MINUS           reduce using rule 193 (number -> INTEGER .)
    EQ              reduce using rule 193 (number -> INTEGER .)
    NE              reduce using rule 193 (number -> INTEGER .)
    LT              reduce using rule 193 (number -> INTEGER .)
    LE              reduce using rule 193 (number -> INTEGER .)
    GT              reduce using rule 193 (number -> INTEGER .)
    GE              reduce using rule 193 (number -> INTEGER .)
    NOT             reduce using rule 193 (number -> INTEGER .)
    BETWEEN         reduce using rule 193 (number -> INTEGER .)
    IN              reduce using rule 193 (number -> INTEGER .)
    LIKE            reduce using rule 193 (number -> INTEGER .)
    AS              reduce using rule 193 (number -> INTEGER .)
    IDENTIFIER      reduce using rule 193 (number -> INTEGER .)
    DIGIT_IDENTIFIER reduce using rule 193 (number -> INTEGER .)
    QUOTED_IDENTIFIER reduce using rule 193 (number -> INTEGER .)
    BACKQUOTED_IDENTIFIER reduce using rule 193 (number -> INTEGER .)
    NON_RESERVED    reduce using rule 193 (number -> INTEGER .)
    COMMA           reduce using rule 193 (number -> INTEGER .)
    FROM            reduce using rule 193 (number -> INTEGER .)
    INTERSECT       reduce using rule 193 (number -> INTEGER .)
    UNION           reduce using rule 193 (number -> INTEGER .)
    EXCEPT          reduce using rule 193 (number -> INTEGER .)
    ORDER           reduce using rule 193 (number -> INTEGER .)
    LIMIT           reduce using rule 193 (number -> INTEGER .)
    $end            reduce using rule 193 (number -> INTEGER .)
    AND             reduce using rule 193 (number -> INTEGER .)
    OR              reduce using rule 193 (number -> INTEGER .)
    ASC             reduce using rule 193 (number -> INTEGER .)
    DESC            reduce using rule 193 (number -> INTEGER .)
    NULLS           reduce using rule 193 (number -> INTEGER .)
    THEN            reduce using rule 193 (number -> INTEGER .)
    GROUP           reduce using rule 193 (number -> INTEGER .)
    HAVING          reduce using rule 193 (number -> INTEGER .)
    CROSS           reduce using rule 193 (number -> INTEGER .)
    NATURAL         reduce using rule 193 (number -> INTEGER .)
    INNER           reduce using rule 193 (number -> INTEGER .)
    LEFT            reduce using rule 193 (number -> INTEGER .)
    RIGHT           reduce using rule 193 (number -> INTEGER .)
    FULL            reduce using rule 193 (number -> INTEGER .)
    JOIN            reduce using rule 193 (number -> INTEGER .)
    WHERE           reduce using rule 193 (number -> INTEGER .)
    ON              reduce using rule 193 (number -> INTEGER .)
    USING           reduce using rule 193 (number -> INTEGER .)
    WHEN            reduce using rule 193 (number -> INTEGER .)
    END             reduce using rule 193 (number -> INTEGER .)
    ELSE            reduce using rule 193 (number -> INTEGER .)


state 116

    (129) base_primary_expression -> date_time .

    ASTERISK        reduce using rule 129 (base_primary_expression -> date_time .)
    SLASH           reduce using rule 129 (base_primary_expression -> date_time .)
    PERCENT         reduce using rule 129 (base_primary_expression -> date_time .)
    CONCAT          reduce using rule 129 (base_primary_expression -> date_time .)
    IS              reduce using rule 129 (base_primary_expression -> date_time .)
    PLUS            reduce using rule 129 (base_primary_expression -> date_time .)
    MINUS           reduce using rule 129 (base_primary_expression -> date_time .)
    EQ              reduce using rule 129 (base_primary_expression -> date_time .)
    NE              reduce using rule 129 (base_primary_expression -> date_time .)
    LT              reduce using rule 129 (base_primary_expression -> date_time .)
    LE              reduce using rule 129 (base_primary_expression -> date_time .)
    GT              reduce using rule 129 (base_primary_expression -> date_time .)
    GE              reduce using rule 129 (base_primary_expression -> date_time .)
    NOT             reduce using rule 129 (base_primary_expression -> date_time .)
    BETWEEN         reduce using rule 129 (base_primary_expression -> date_time .)
    IN              reduce using rule 129 (base_primary_expression -> date_time .)
    LIKE            reduce using rule 129 (base_primary_expression -> date_time .)
    AS              reduce using rule 129 (base_primary_expression -> date_time .)
    IDENTIFIER      reduce using rule 129 (base_primary_expression -> date_time .)
    DIGIT_IDENTIFIER reduce using rule 129 (base_primary_expression -> date_time .)
    QUOTED_IDENTIFIER reduce using rule 129 (base_primary_expression -> date_time .)
    BACKQUOTED_IDENTIFIER reduce using rule 129 (base_primary_expression -> date_time .)
    NON_RESERVED    reduce using rule 129 (base_primary_expression -> date_time .)
    COMMA           reduce using rule 129 (base_primary_expression -> date_time .)
    FROM            reduce using rule 129 (base_primary_expression -> date_time .)
    INTERSECT       reduce using rule 129 (base_primary_expression -> date_time .)
    UNION           reduce using rule 129 (base_primary_expression -> date_time .)
    EXCEPT          reduce using rule 129 (base_primary_expression -> date_time .)
    ORDER           reduce using rule 129 (base_primary_expression -> date_time .)
    LIMIT           reduce using rule 129 (base_primary_expression -> date_time .)
    $end            reduce using rule 129 (base_primary_expression -> date_time .)
    RPAREN          reduce using rule 129 (base_primary_expression -> date_time .)
    AND             reduce using rule 129 (base_primary_expression -> date_time .)
    OR              reduce using rule 129 (base_primary_expression -> date_time .)
    ASC             reduce using rule 129 (base_primary_expression -> date_time .)
    DESC            reduce using rule 129 (base_primary_expression -> date_time .)
    NULLS           reduce using rule 129 (base_primary_expression -> date_time .)
    THEN            reduce using rule 129 (base_primary_expression -> date_time .)
    GROUP           reduce using rule 129 (base_primary_expression -> date_time .)
    HAVING          reduce using rule 129 (base_primary_expression -> date_time .)
    CROSS           reduce using rule 129 (base_primary_expression -> date_time .)
    NATURAL         reduce using rule 129 (base_primary_expression -> date_time .)
    INNER           reduce using rule 129 (base_primary_expression -> date_time .)
    LEFT            reduce using rule 129 (base_primary_expression -> date_time .)
    RIGHT           reduce using rule 129 (base_primary_expression -> date_time .)
    FULL            reduce using rule 129 (base_primary_expression -> date_time .)
    JOIN            reduce using rule 129 (base_primary_expression -> date_time .)
    WHERE           reduce using rule 129 (base_primary_expression -> date_time .)
    ON              reduce using rule 129 (base_primary_expression -> date_time .)
    USING           reduce using rule 129 (base_primary_expression -> date_time .)
    WHEN            reduce using rule 129 (base_primary_expression -> date_time .)
    END             reduce using rule 129 (base_primary_expression -> date_time .)
    ELSE            reduce using rule 129 (base_primary_expression -> date_time .)


state 117

    (119) primary_expression -> base_primary_expression .

    ASTERISK        reduce using rule 119 (primary_expression -> base_primary_expression .)
    SLASH           reduce using rule 119 (primary_expression -> base_primary_expression .)
    PERCENT         reduce using rule 119 (primary_expression -> base_primary_expression .)
    CONCAT          reduce using rule 119 (primary_expression -> base_primary_expression .)
    IS              reduce using rule 119 (primary_expression -> base_primary_expression .)
    PLUS            reduce using rule 119 (primary_expression -> base_primary_expression .)
    MINUS           reduce using rule 119 (primary_expression -> base_primary_expression .)
    EQ              reduce using rule 119 (primary_expression -> base_primary_expression .)
    NE              reduce using rule 119 (primary_expression -> base_primary_expression .)
    LT              reduce using rule 119 (primary_expression -> base_primary_expression .)
    LE              reduce using rule 119 (primary_expression -> base_primary_expression .)
    GT              reduce using rule 119 (primary_expression -> base_primary_expression .)
    GE              reduce using rule 119 (primary_expression -> base_primary_expression .)
    NOT             reduce using rule 119 (primary_expression -> base_primary_expression .)
    BETWEEN         reduce using rule 119 (primary_expression -> base_primary_expression .)
    IN              reduce using rule 119 (primary_expression -> base_primary_expression .)
    LIKE            reduce using rule 119 (primary_expression -> base_primary_expression .)
    AS              reduce using rule 119 (primary_expression -> base_primary_expression .)
    IDENTIFIER      reduce using rule 119 (primary_expression -> base_primary_expression .)
    DIGIT_IDENTIFIER reduce using rule 119 (primary_expression -> base_primary_expression .)
    QUOTED_IDENTIFIER reduce using rule 119 (primary_expression -> base_primary_expression .)
    BACKQUOTED_IDENTIFIER reduce using rule 119 (primary_expression -> base_primary_expression .)
    NON_RESERVED    reduce using rule 119 (primary_expression -> base_primary_expression .)
    COMMA           reduce using rule 119 (primary_expression -> base_primary_expression .)
    FROM            reduce using rule 119 (primary_expression -> base_primary_expression .)
    INTERSECT       reduce using rule 119 (primary_expression -> base_primary_expression .)
    UNION           reduce using rule 119 (primary_expression -> base_primary_expression .)
    EXCEPT          reduce using rule 119 (primary_expression -> base_primary_expression .)
    ORDER           reduce using rule 119 (primary_expression -> base_primary_expression .)
    LIMIT           reduce using rule 119 (primary_expression -> base_primary_expression .)
    $end            reduce using rule 119 (primary_expression -> base_primary_expression .)
    RPAREN          reduce using rule 119 (primary_expression -> base_primary_expression .)
    AND             reduce using rule 119 (primary_expression -> base_primary_expression .)
    OR              reduce using rule 119 (primary_expression -> base_primary_expression .)
    ASC             reduce using rule 119 (primary_expression -> base_primary_expression .)
    DESC            reduce using rule 119 (primary_expression -> base_primary_expression .)
    NULLS           reduce using rule 119 (primary_expression -> base_primary_expression .)
    THEN            reduce using rule 119 (primary_expression -> base_primary_expression .)
    GROUP           reduce using rule 119 (primary_expression -> base_primary_expression .)
    HAVING          reduce using rule 119 (primary_expression -> base_primary_expression .)
    CROSS           reduce using rule 119 (primary_expression -> base_primary_expression .)
    NATURAL         reduce using rule 119 (primary_expression -> base_primary_expression .)
    INNER           reduce using rule 119 (primary_expression -> base_primary_expression .)
    LEFT            reduce using rule 119 (primary_expression -> base_primary_expression .)
    RIGHT           reduce using rule 119 (primary_expression -> base_primary_expression .)
    FULL            reduce using rule 119 (primary_expression -> base_primary_expression .)
    JOIN            reduce using rule 119 (primary_expression -> base_primary_expression .)
    WHERE           reduce using rule 119 (primary_expression -> base_primary_expression .)
    ON              reduce using rule 119 (primary_expression -> base_primary_expression .)
    USING           reduce using rule 119 (primary_expression -> base_primary_expression .)
    WHEN            reduce using rule 119 (primary_expression -> base_primary_expression .)
    END             reduce using rule 119 (primary_expression -> base_primary_expression .)
    ELSE            reduce using rule 119 (primary_expression -> base_primary_expression .)


state 118

    (2) subquery -> LPAREN . query RPAREN
    (3) query -> . query_no_with
    (4) query_no_with -> . query_term order_by_opt limit_opt
    (19) query_term -> . query_term_intersect
    (20) query_term -> . query_term UNION set_quantifier_opt query_term_intersect
    (21) query_term -> . query_term EXCEPT set_quantifier_opt query_term_intersect
    (22) query_term_intersect -> . nonjoin_query_primary
    (23) query_term_intersect -> . query_term_intersect INTERSECT set_quantifier_opt nonjoin_query_primary
    (24) nonjoin_query_primary -> . simple_table
    (25) nonjoin_query_primary -> . LPAREN query_term RPAREN
    (26) simple_table -> . query_specification
    (27) simple_table -> . explicit_table
    (28) simple_table -> . table_value_constructor
    (33) query_specification -> . SELECT set_quantifier_opt adql_top_opt select_items table_expression_opt
    (29) explicit_table -> . TABLE qualified_name
    (30) table_value_constructor -> . VALUES values_list

    LPAREN          shift and go to state 12
    SELECT          shift and go to state 13
    TABLE           shift and go to state 10
    VALUES          shift and go to state 3

    query_no_with                  shift and go to state 9
    simple_table                   shift and go to state 2
    query_term_intersect           shift and go to state 1
    query_specification            shift and go to state 5
    table_value_constructor        shift and go to state 14
    explicit_table                 shift and go to state 4
    query_term                     shift and go to state 11
    nonjoin_query_primary          shift and go to state 6
    query                          shift and go to state 163

state 119

    (108) exists_predicate -> EXISTS subquery .

    AND             reduce using rule 108 (exists_predicate -> EXISTS subquery .)
    OR              reduce using rule 108 (exists_predicate -> EXISTS subquery .)
    COMMA           reduce using rule 108 (exists_predicate -> EXISTS subquery .)
    INTERSECT       reduce using rule 108 (exists_predicate -> EXISTS subquery .)
    UNION           reduce using rule 108 (exists_predicate -> EXISTS subquery .)
    EXCEPT          reduce using rule 108 (exists_predicate -> EXISTS subquery .)
    ORDER           reduce using rule 108 (exists_predicate -> EXISTS subquery .)
    LIMIT           reduce using rule 108 (exists_predicate -> EXISTS subquery .)
    $end            reduce using rule 108 (exists_predicate -> EXISTS subquery .)
    RPAREN          reduce using rule 108 (exists_predicate -> EXISTS subquery .)
    ASC             reduce using rule 108 (exists_predicate -> EXISTS subquery .)
    DESC            reduce using rule 108 (exists_predicate -> EXISTS subquery .)
    NULLS           reduce using rule 108 (exists_predicate -> EXISTS subquery .)
    THEN            reduce using rule 108 (exists_predicate -> EXISTS subquery .)
    GROUP           reduce using rule 108 (exists_predicate -> EXISTS subquery .)
    HAVING          reduce using rule 108 (exists_predicate -> EXISTS subquery .)
    CROSS           reduce using rule 108 (exists_predicate -> EXISTS subquery .)
    NATURAL         reduce using rule 108 (exists_predicate -> EXISTS subquery .)
    INNER           reduce using rule 108 (exists_predicate -> EXISTS subquery .)
    LEFT            reduce using rule 108 (exists_predicate -> EXISTS subquery .)
    RIGHT           reduce using rule 108 (exists_predicate -> EXISTS subquery .)
    FULL            reduce using rule 108 (exists_predicate -> EXISTS subquery .)
    JOIN            reduce using rule 108 (exists_predicate -> EXISTS subquery .)
    WHERE           reduce using rule 108 (exists_predicate -> EXISTS subquery .)
    ON              reduce using rule 108 (exists_predicate -> EXISTS subquery .)
    USING           reduce using rule 108 (exists_predicate -> EXISTS subquery .)


state 120

    (113) term -> term SLASH . factor
    (117) factor -> . sign_opt primary_expression
    (174) sign_opt -> . sign
    (175) sign_opt -> . empty
    (176) sign -> . PLUS
    (177) sign -> . MINUS
    (194) empty -> .

    PLUS            shift and go to state 63
    MINUS           shift and go to state 47
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    sign_opt                       shift and go to state 49
    sign                           shift and go to state 56
    factor                         shift and go to state 166
    empty                          shift and go to state 55

state 121

    (114) term -> term PERCENT . factor
    (117) factor -> . sign_opt primary_expression
    (174) sign_opt -> . sign
    (175) sign_opt -> . empty
    (176) sign -> . PLUS
    (177) sign -> . MINUS
    (194) empty -> .

    PLUS            shift and go to state 63
    MINUS           shift and go to state 47
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    sign_opt                       shift and go to state 49
    sign                           shift and go to state 56
    factor                         shift and go to state 167
    empty                          shift and go to state 55

state 122

    (112) term -> term ASTERISK . factor
    (117) factor -> . sign_opt primary_expression
    (174) sign_opt -> . sign
    (175) sign_opt -> . empty
    (176) sign -> . PLUS
    (177) sign -> . MINUS
    (194) empty -> .

    PLUS            shift and go to state 63
    MINUS           shift and go to state 47
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    sign_opt                       shift and go to state 49
    sign                           shift and go to state 56
    factor                         shift and go to state 168
    empty                          shift and go to state 55

state 123

    (115) term -> term CONCAT . factor
    (117) factor -> . sign_opt primary_expression
    (174) sign_opt -> . sign
    (175) sign_opt -> . empty
    (176) sign -> . PLUS
    (177) sign -> . MINUS
    (194) empty -> .

    PLUS            shift and go to state 63
    MINUS           shift and go to state 47
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    sign_opt                       shift and go to state 49
    sign                           shift and go to state 56
    factor                         shift and go to state 169
    empty                          shift and go to state 55

state 124

    (93) parenthetic_expression -> RPAREN expression . RPAREN

    RPAREN          shift and go to state 170


state 125

    (86) search_condition -> search_condition OR boolean_term .
    (88) boolean_term -> boolean_term . AND boolean_factor

    OR              reduce using rule 86 (search_condition -> search_condition OR boolean_term .)
    ASC             reduce using rule 86 (search_condition -> search_condition OR boolean_term .)
    DESC            reduce using rule 86 (search_condition -> search_condition OR boolean_term .)
    NULLS           reduce using rule 86 (search_condition -> search_condition OR boolean_term .)
    COMMA           reduce using rule 86 (search_condition -> search_condition OR boolean_term .)
    LIMIT           reduce using rule 86 (search_condition -> search_condition OR boolean_term .)
    $end            reduce using rule 86 (search_condition -> search_condition OR boolean_term .)
    RPAREN          reduce using rule 86 (search_condition -> search_condition OR boolean_term .)
    INTERSECT       reduce using rule 86 (search_condition -> search_condition OR boolean_term .)
    UNION           reduce using rule 86 (search_condition -> search_condition OR boolean_term .)
    EXCEPT          reduce using rule 86 (search_condition -> search_condition OR boolean_term .)
    ORDER           reduce using rule 86 (search_condition -> search_condition OR boolean_term .)
    GROUP           reduce using rule 86 (search_condition -> search_condition OR boolean_term .)
    HAVING          reduce using rule 86 (search_condition -> search_condition OR boolean_term .)
    CROSS           reduce using rule 86 (search_condition -> search_condition OR boolean_term .)
    NATURAL         reduce using rule 86 (search_condition -> search_condition OR boolean_term .)
    INNER           reduce using rule 86 (search_condition -> search_condition OR boolean_term .)
    LEFT            reduce using rule 86 (search_condition -> search_condition OR boolean_term .)
    RIGHT           reduce using rule 86 (search_condition -> search_condition OR boolean_term .)
    FULL            reduce using rule 86 (search_condition -> search_condition OR boolean_term .)
    JOIN            reduce using rule 86 (search_condition -> search_condition OR boolean_term .)
    WHERE           reduce using rule 86 (search_condition -> search_condition OR boolean_term .)
    ON              reduce using rule 86 (search_condition -> search_condition OR boolean_term .)
    USING           reduce using rule 86 (search_condition -> search_condition OR boolean_term .)
    THEN            reduce using rule 86 (search_condition -> search_condition OR boolean_term .)
    AND             shift and go to state 66


state 126

    (31) values_list -> values_list COMMA expression .

    COMMA           reduce using rule 31 (values_list -> values_list COMMA expression .)
    INTERSECT       reduce using rule 31 (values_list -> values_list COMMA expression .)
    UNION           reduce using rule 31 (values_list -> values_list COMMA expression .)
    EXCEPT          reduce using rule 31 (values_list -> values_list COMMA expression .)
    ORDER           reduce using rule 31 (values_list -> values_list COMMA expression .)
    LIMIT           reduce using rule 31 (values_list -> values_list COMMA expression .)
    $end            reduce using rule 31 (values_list -> values_list COMMA expression .)
    RPAREN          reduce using rule 31 (values_list -> values_list COMMA expression .)


state 127

    (88) boolean_term -> boolean_term AND boolean_factor .

    AND             reduce using rule 88 (boolean_term -> boolean_term AND boolean_factor .)
    OR              reduce using rule 88 (boolean_term -> boolean_term AND boolean_factor .)
    ASC             reduce using rule 88 (boolean_term -> boolean_term AND boolean_factor .)
    DESC            reduce using rule 88 (boolean_term -> boolean_term AND boolean_factor .)
    NULLS           reduce using rule 88 (boolean_term -> boolean_term AND boolean_factor .)
    COMMA           reduce using rule 88 (boolean_term -> boolean_term AND boolean_factor .)
    LIMIT           reduce using rule 88 (boolean_term -> boolean_term AND boolean_factor .)
    $end            reduce using rule 88 (boolean_term -> boolean_term AND boolean_factor .)
    RPAREN          reduce using rule 88 (boolean_term -> boolean_term AND boolean_factor .)
    INTERSECT       reduce using rule 88 (boolean_term -> boolean_term AND boolean_factor .)
    UNION           reduce using rule 88 (boolean_term -> boolean_term AND boolean_factor .)
    EXCEPT          reduce using rule 88 (boolean_term -> boolean_term AND boolean_factor .)
    ORDER           reduce using rule 88 (boolean_term -> boolean_term AND boolean_factor .)
    THEN            reduce using rule 88 (boolean_term -> boolean_term AND boolean_factor .)
    GROUP           reduce using rule 88 (boolean_term -> boolean_term AND boolean_factor .)
    HAVING          reduce using rule 88 (boolean_term -> boolean_term AND boolean_factor .)
    CROSS           reduce using rule 88 (boolean_term -> boolean_term AND boolean_factor .)
    NATURAL         reduce using rule 88 (boolean_term -> boolean_term AND boolean_factor .)
    INNER           reduce using rule 88 (boolean_term -> boolean_term AND boolean_factor .)
    LEFT            reduce using rule 88 (boolean_term -> boolean_term AND boolean_factor .)
    RIGHT           reduce using rule 88 (boolean_term -> boolean_term AND boolean_factor .)
    FULL            reduce using rule 88 (boolean_term -> boolean_term AND boolean_factor .)
    JOIN            reduce using rule 88 (boolean_term -> boolean_term AND boolean_factor .)
    WHERE           reduce using rule 88 (boolean_term -> boolean_term AND boolean_factor .)
    ON              reduce using rule 88 (boolean_term -> boolean_term AND boolean_factor .)
    USING           reduce using rule 88 (boolean_term -> boolean_term AND boolean_factor .)


state 128

    (183) qualified_name -> qualified_name PERIOD identifier .

    PERIOD          reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    AS              reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    IDENTIFIER      reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    DIGIT_IDENTIFIER reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    QUOTED_IDENTIFIER reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    BACKQUOTED_IDENTIFIER reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    NON_RESERVED    reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    CROSS           reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    NATURAL         reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    INNER           reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    LEFT            reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    RIGHT           reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    FULL            reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    JOIN            reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    COMMA           reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    WHERE           reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    GROUP           reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    HAVING          reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    INTERSECT       reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    UNION           reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    EXCEPT          reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    ORDER           reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    LIMIT           reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    $end            reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    RPAREN          reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    LPAREN          reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    ASTERISK        reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    SLASH           reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    PERCENT         reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    CONCAT          reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    IS              reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    PLUS            reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    MINUS           reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    EQ              reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    NE              reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    LT              reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    LE              reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    GT              reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    GE              reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    NOT             reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    BETWEEN         reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    IN              reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    LIKE            reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    FROM            reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    AND             reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    OR              reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    ASC             reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    DESC            reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    NULLS           reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    THEN            reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    ON              reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    USING           reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    WHEN            reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    END             reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)
    ELSE            reduce using rule 183 (qualified_name -> qualified_name PERIOD identifier .)


state 129

    (20) query_term -> query_term UNION set_quantifier_opt query_term_intersect .
    (23) query_term_intersect -> query_term_intersect . INTERSECT set_quantifier_opt nonjoin_query_primary

    UNION           reduce using rule 20 (query_term -> query_term UNION set_quantifier_opt query_term_intersect .)
    EXCEPT          reduce using rule 20 (query_term -> query_term UNION set_quantifier_opt query_term_intersect .)
    ORDER           reduce using rule 20 (query_term -> query_term UNION set_quantifier_opt query_term_intersect .)
    LIMIT           reduce using rule 20 (query_term -> query_term UNION set_quantifier_opt query_term_intersect .)
    $end            reduce using rule 20 (query_term -> query_term UNION set_quantifier_opt query_term_intersect .)
    RPAREN          reduce using rule 20 (query_term -> query_term UNION set_quantifier_opt query_term_intersect .)
    INTERSECT       shift and go to state 15


state 130

    (21) query_term -> query_term EXCEPT set_quantifier_opt query_term_intersect .
    (23) query_term_intersect -> query_term_intersect . INTERSECT set_quantifier_opt nonjoin_query_primary

    UNION           reduce using rule 21 (query_term -> query_term EXCEPT set_quantifier_opt query_term_intersect .)
    EXCEPT          reduce using rule 21 (query_term -> query_term EXCEPT set_quantifier_opt query_term_intersect .)
    ORDER           reduce using rule 21 (query_term -> query_term EXCEPT set_quantifier_opt query_term_intersect .)
    LIMIT           reduce using rule 21 (query_term -> query_term EXCEPT set_quantifier_opt query_term_intersect .)
    $end            reduce using rule 21 (query_term -> query_term EXCEPT set_quantifier_opt query_term_intersect .)
    RPAREN          reduce using rule 21 (query_term -> query_term EXCEPT set_quantifier_opt query_term_intersect .)
    INTERSECT       shift and go to state 15


state 131

    (5) order_by_opt -> ORDER BY sort_items .
    (8) sort_items -> sort_items . COMMA sort_item

    LIMIT           reduce using rule 5 (order_by_opt -> ORDER BY sort_items .)
    $end            reduce using rule 5 (order_by_opt -> ORDER BY sort_items .)
    RPAREN          reduce using rule 5 (order_by_opt -> ORDER BY sort_items .)
    COMMA           shift and go to state 171


state 132

    (7) sort_items -> sort_item .

    COMMA           reduce using rule 7 (sort_items -> sort_item .)
    LIMIT           reduce using rule 7 (sort_items -> sort_item .)
    $end            reduce using rule 7 (sort_items -> sort_item .)
    RPAREN          reduce using rule 7 (sort_items -> sort_item .)


state 133

    (9) sort_item -> expression . order_opt null_ordering_opt
    (10) order_opt -> . ASC
    (11) order_opt -> . DESC
    (12) order_opt -> . empty
    (194) empty -> .

    ASC             shift and go to state 175
    DESC            shift and go to state 172
    NULLS           reduce using rule 194 (empty -> .)
    COMMA           reduce using rule 194 (empty -> .)
    LIMIT           reduce using rule 194 (empty -> .)
    $end            reduce using rule 194 (empty -> .)
    RPAREN          reduce using rule 194 (empty -> .)

    empty                          shift and go to state 173
    order_opt                      shift and go to state 174

state 134

    (16) limit_opt -> LIMIT INTEGER .

    $end            reduce using rule 16 (limit_opt -> LIMIT INTEGER .)
    RPAREN          reduce using rule 16 (limit_opt -> LIMIT INTEGER .)


state 135

    (17) limit_opt -> LIMIT ALL .

    $end            reduce using rule 17 (limit_opt -> LIMIT ALL .)
    RPAREN          reduce using rule 17 (limit_opt -> LIMIT ALL .)


state 136

    (34) adql_top_opt -> TOP INTEGER .

    ASTERISK        reduce using rule 34 (adql_top_opt -> TOP INTEGER .)
    PLUS            reduce using rule 34 (adql_top_opt -> TOP INTEGER .)
    MINUS           reduce using rule 34 (adql_top_opt -> TOP INTEGER .)
    LPAREN          reduce using rule 34 (adql_top_opt -> TOP INTEGER .)
    NULL            reduce using rule 34 (adql_top_opt -> TOP INTEGER .)
    STRING          reduce using rule 34 (adql_top_opt -> TOP INTEGER .)
    DECIMAL         reduce using rule 34 (adql_top_opt -> TOP INTEGER .)
    INTEGER         reduce using rule 34 (adql_top_opt -> TOP INTEGER .)
    TRUE            reduce using rule 34 (adql_top_opt -> TOP INTEGER .)
    FALSE           reduce using rule 34 (adql_top_opt -> TOP INTEGER .)
    INTERVAL        reduce using rule 34 (adql_top_opt -> TOP INTEGER .)
    IDENTIFIER      reduce using rule 34 (adql_top_opt -> TOP INTEGER .)
    DIGIT_IDENTIFIER reduce using rule 34 (adql_top_opt -> TOP INTEGER .)
    CURRENT_DATE    reduce using rule 34 (adql_top_opt -> TOP INTEGER .)
    CURRENT_TIME    reduce using rule 34 (adql_top_opt -> TOP INTEGER .)
    CURRENT_TIMESTAMP reduce using rule 34 (adql_top_opt -> TOP INTEGER .)
    LOCALTIME       reduce using rule 34 (adql_top_opt -> TOP INTEGER .)
    LOCALTIMESTAMP  reduce using rule 34 (adql_top_opt -> TOP INTEGER .)
    QUOTED_IDENTIFIER reduce using rule 34 (adql_top_opt -> TOP INTEGER .)
    BACKQUOTED_IDENTIFIER reduce using rule 34 (adql_top_opt -> TOP INTEGER .)
    NON_RESERVED    reduce using rule 34 (adql_top_opt -> TOP INTEGER .)
    CASE            reduce using rule 34 (adql_top_opt -> TOP INTEGER .)


state 137

    (50) select_item -> all_columns .

    COMMA           reduce using rule 50 (select_item -> all_columns .)
    FROM            reduce using rule 50 (select_item -> all_columns .)
    INTERSECT       reduce using rule 50 (select_item -> all_columns .)
    UNION           reduce using rule 50 (select_item -> all_columns .)
    EXCEPT          reduce using rule 50 (select_item -> all_columns .)
    ORDER           reduce using rule 50 (select_item -> all_columns .)
    LIMIT           reduce using rule 50 (select_item -> all_columns .)
    $end            reduce using rule 50 (select_item -> all_columns .)
    RPAREN          reduce using rule 50 (select_item -> all_columns .)


state 138

    (51) derived_column -> value_expression . alias_opt
    (109) value_expression -> value_expression . PLUS term
    (110) value_expression -> value_expression . MINUS term
    (81) alias_opt -> . alias
    (82) alias_opt -> . empty
    (83) alias -> . as_opt identifier
    (194) empty -> .
    (159) as_opt -> . AS
    (160) as_opt -> . empty

    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    COMMA           reduce using rule 194 (empty -> .)
    FROM            reduce using rule 194 (empty -> .)
    INTERSECT       reduce using rule 194 (empty -> .)
    UNION           reduce using rule 194 (empty -> .)
    EXCEPT          reduce using rule 194 (empty -> .)
    ORDER           reduce using rule 194 (empty -> .)
    LIMIT           reduce using rule 194 (empty -> .)
    $end            reduce using rule 194 (empty -> .)
    RPAREN          reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    AS              shift and go to state 180

    empty                          shift and go to state 176
    as_opt                         shift and go to state 177
    alias_opt                      shift and go to state 179
    alias                          shift and go to state 178

state 139

    (52) all_columns -> ASTERISK .

    COMMA           reduce using rule 52 (all_columns -> ASTERISK .)
    FROM            reduce using rule 52 (all_columns -> ASTERISK .)
    INTERSECT       reduce using rule 52 (all_columns -> ASTERISK .)
    UNION           reduce using rule 52 (all_columns -> ASTERISK .)
    EXCEPT          reduce using rule 52 (all_columns -> ASTERISK .)
    ORDER           reduce using rule 52 (all_columns -> ASTERISK .)
    LIMIT           reduce using rule 52 (all_columns -> ASTERISK .)
    $end            reduce using rule 52 (all_columns -> ASTERISK .)
    RPAREN          reduce using rule 52 (all_columns -> ASTERISK .)


state 140

    (49) select_item -> derived_column .

    COMMA           reduce using rule 49 (select_item -> derived_column .)
    FROM            reduce using rule 49 (select_item -> derived_column .)
    INTERSECT       reduce using rule 49 (select_item -> derived_column .)
    UNION           reduce using rule 49 (select_item -> derived_column .)
    EXCEPT          reduce using rule 49 (select_item -> derived_column .)
    ORDER           reduce using rule 49 (select_item -> derived_column .)
    LIMIT           reduce using rule 49 (select_item -> derived_column .)
    $end            reduce using rule 49 (select_item -> derived_column .)
    RPAREN          reduce using rule 49 (select_item -> derived_column .)


state 141

    (47) select_items -> select_item .

    COMMA           reduce using rule 47 (select_items -> select_item .)
    FROM            reduce using rule 47 (select_items -> select_item .)
    INTERSECT       reduce using rule 47 (select_items -> select_item .)
    UNION           reduce using rule 47 (select_items -> select_item .)
    EXCEPT          reduce using rule 47 (select_items -> select_item .)
    ORDER           reduce using rule 47 (select_items -> select_item .)
    LIMIT           reduce using rule 47 (select_items -> select_item .)
    $end            reduce using rule 47 (select_items -> select_item .)
    RPAREN          reduce using rule 47 (select_items -> select_item .)


state 142

    (33) query_specification -> SELECT set_quantifier_opt adql_top_opt select_items . table_expression_opt
    (48) select_items -> select_items . COMMA select_item
    (53) table_expression_opt -> . FROM relations where_opt group_by_opt having_opt
    (54) table_expression_opt -> . empty
    (194) empty -> .

    COMMA           shift and go to state 184
    FROM            shift and go to state 183
    INTERSECT       reduce using rule 194 (empty -> .)
    UNION           reduce using rule 194 (empty -> .)
    EXCEPT          reduce using rule 194 (empty -> .)
    ORDER           reduce using rule 194 (empty -> .)
    LIMIT           reduce using rule 194 (empty -> .)
    $end            reduce using rule 194 (empty -> .)
    RPAREN          reduce using rule 194 (empty -> .)

    table_expression_opt           shift and go to state 181
    empty                          shift and go to state 182

state 143

    (107) null_predicate -> value_expression IS not_opt . NULL

    NULL            shift and go to state 185


state 144

    (109) value_expression -> value_expression PLUS term .
    (112) term -> term . ASTERISK factor
    (113) term -> term . SLASH factor
    (114) term -> term . PERCENT factor
    (115) term -> term . CONCAT factor

    PLUS            reduce using rule 109 (value_expression -> value_expression PLUS term .)
    MINUS           reduce using rule 109 (value_expression -> value_expression PLUS term .)
    RPAREN          reduce using rule 109 (value_expression -> value_expression PLUS term .)
    COMMA           reduce using rule 109 (value_expression -> value_expression PLUS term .)
    IS              reduce using rule 109 (value_expression -> value_expression PLUS term .)
    EQ              reduce using rule 109 (value_expression -> value_expression PLUS term .)
    NE              reduce using rule 109 (value_expression -> value_expression PLUS term .)
    LT              reduce using rule 109 (value_expression -> value_expression PLUS term .)
    LE              reduce using rule 109 (value_expression -> value_expression PLUS term .)
    GT              reduce using rule 109 (value_expression -> value_expression PLUS term .)
    GE              reduce using rule 109 (value_expression -> value_expression PLUS term .)
    NOT             reduce using rule 109 (value_expression -> value_expression PLUS term .)
    BETWEEN         reduce using rule 109 (value_expression -> value_expression PLUS term .)
    IN              reduce using rule 109 (value_expression -> value_expression PLUS term .)
    LIKE            reduce using rule 109 (value_expression -> value_expression PLUS term .)
    WHEN            reduce using rule 109 (value_expression -> value_expression PLUS term .)
    END             reduce using rule 109 (value_expression -> value_expression PLUS term .)
    AND             reduce using rule 109 (value_expression -> value_expression PLUS term .)
    OR              reduce using rule 109 (value_expression -> value_expression PLUS term .)
    INTERSECT       reduce using rule 109 (value_expression -> value_expression PLUS term .)
    UNION           reduce using rule 109 (value_expression -> value_expression PLUS term .)
    EXCEPT          reduce using rule 109 (value_expression -> value_expression PLUS term .)
    ORDER           reduce using rule 109 (value_expression -> value_expression PLUS term .)
    LIMIT           reduce using rule 109 (value_expression -> value_expression PLUS term .)
    $end            reduce using rule 109 (value_expression -> value_expression PLUS term .)
    ASC             reduce using rule 109 (value_expression -> value_expression PLUS term .)
    DESC            reduce using rule 109 (value_expression -> value_expression PLUS term .)
    NULLS           reduce using rule 109 (value_expression -> value_expression PLUS term .)
    THEN            reduce using rule 109 (value_expression -> value_expression PLUS term .)
    GROUP           reduce using rule 109 (value_expression -> value_expression PLUS term .)
    HAVING          reduce using rule 109 (value_expression -> value_expression PLUS term .)
    CROSS           reduce using rule 109 (value_expression -> value_expression PLUS term .)
    NATURAL         reduce using rule 109 (value_expression -> value_expression PLUS term .)
    INNER           reduce using rule 109 (value_expression -> value_expression PLUS term .)
    LEFT            reduce using rule 109 (value_expression -> value_expression PLUS term .)
    RIGHT           reduce using rule 109 (value_expression -> value_expression PLUS term .)
    FULL            reduce using rule 109 (value_expression -> value_expression PLUS term .)
    JOIN            reduce using rule 109 (value_expression -> value_expression PLUS term .)
    WHERE           reduce using rule 109 (value_expression -> value_expression PLUS term .)
    ON              reduce using rule 109 (value_expression -> value_expression PLUS term .)
    USING           reduce using rule 109 (value_expression -> value_expression PLUS term .)
    AS              reduce using rule 109 (value_expression -> value_expression PLUS term .)
    IDENTIFIER      reduce using rule 109 (value_expression -> value_expression PLUS term .)
    DIGIT_IDENTIFIER reduce using rule 109 (value_expression -> value_expression PLUS term .)
    QUOTED_IDENTIFIER reduce using rule 109 (value_expression -> value_expression PLUS term .)
    BACKQUOTED_IDENTIFIER reduce using rule 109 (value_expression -> value_expression PLUS term .)
    NON_RESERVED    reduce using rule 109 (value_expression -> value_expression PLUS term .)
    FROM            reduce using rule 109 (value_expression -> value_expression PLUS term .)
    ELSE            reduce using rule 109 (value_expression -> value_expression PLUS term .)
    ASTERISK        shift and go to state 122
    SLASH           shift and go to state 120
    PERCENT         shift and go to state 121
    CONCAT          shift and go to state 123


state 145

    (110) value_expression -> value_expression MINUS term .
    (112) term -> term . ASTERISK factor
    (113) term -> term . SLASH factor
    (114) term -> term . PERCENT factor
    (115) term -> term . CONCAT factor

    PLUS            reduce using rule 110 (value_expression -> value_expression MINUS term .)
    MINUS           reduce using rule 110 (value_expression -> value_expression MINUS term .)
    RPAREN          reduce using rule 110 (value_expression -> value_expression MINUS term .)
    COMMA           reduce using rule 110 (value_expression -> value_expression MINUS term .)
    IS              reduce using rule 110 (value_expression -> value_expression MINUS term .)
    EQ              reduce using rule 110 (value_expression -> value_expression MINUS term .)
    NE              reduce using rule 110 (value_expression -> value_expression MINUS term .)
    LT              reduce using rule 110 (value_expression -> value_expression MINUS term .)
    LE              reduce using rule 110 (value_expression -> value_expression MINUS term .)
    GT              reduce using rule 110 (value_expression -> value_expression MINUS term .)
    GE              reduce using rule 110 (value_expression -> value_expression MINUS term .)
    NOT             reduce using rule 110 (value_expression -> value_expression MINUS term .)
    BETWEEN         reduce using rule 110 (value_expression -> value_expression MINUS term .)
    IN              reduce using rule 110 (value_expression -> value_expression MINUS term .)
    LIKE            reduce using rule 110 (value_expression -> value_expression MINUS term .)
    WHEN            reduce using rule 110 (value_expression -> value_expression MINUS term .)
    END             reduce using rule 110 (value_expression -> value_expression MINUS term .)
    AND             reduce using rule 110 (value_expression -> value_expression MINUS term .)
    OR              reduce using rule 110 (value_expression -> value_expression MINUS term .)
    INTERSECT       reduce using rule 110 (value_expression -> value_expression MINUS term .)
    UNION           reduce using rule 110 (value_expression -> value_expression MINUS term .)
    EXCEPT          reduce using rule 110 (value_expression -> value_expression MINUS term .)
    ORDER           reduce using rule 110 (value_expression -> value_expression MINUS term .)
    LIMIT           reduce using rule 110 (value_expression -> value_expression MINUS term .)
    $end            reduce using rule 110 (value_expression -> value_expression MINUS term .)
    ASC             reduce using rule 110 (value_expression -> value_expression MINUS term .)
    DESC            reduce using rule 110 (value_expression -> value_expression MINUS term .)
    NULLS           reduce using rule 110 (value_expression -> value_expression MINUS term .)
    THEN            reduce using rule 110 (value_expression -> value_expression MINUS term .)
    GROUP           reduce using rule 110 (value_expression -> value_expression MINUS term .)
    HAVING          reduce using rule 110 (value_expression -> value_expression MINUS term .)
    CROSS           reduce using rule 110 (value_expression -> value_expression MINUS term .)
    NATURAL         reduce using rule 110 (value_expression -> value_expression MINUS term .)
    INNER           reduce using rule 110 (value_expression -> value_expression MINUS term .)
    LEFT            reduce using rule 110 (value_expression -> value_expression MINUS term .)
    RIGHT           reduce using rule 110 (value_expression -> value_expression MINUS term .)
    FULL            reduce using rule 110 (value_expression -> value_expression MINUS term .)
    JOIN            reduce using rule 110 (value_expression -> value_expression MINUS term .)
    WHERE           reduce using rule 110 (value_expression -> value_expression MINUS term .)
    ON              reduce using rule 110 (value_expression -> value_expression MINUS term .)
    USING           reduce using rule 110 (value_expression -> value_expression MINUS term .)
    AS              reduce using rule 110 (value_expression -> value_expression MINUS term .)
    IDENTIFIER      reduce using rule 110 (value_expression -> value_expression MINUS term .)
    DIGIT_IDENTIFIER reduce using rule 110 (value_expression -> value_expression MINUS term .)
    QUOTED_IDENTIFIER reduce using rule 110 (value_expression -> value_expression MINUS term .)
    BACKQUOTED_IDENTIFIER reduce using rule 110 (value_expression -> value_expression MINUS term .)
    NON_RESERVED    reduce using rule 110 (value_expression -> value_expression MINUS term .)
    FROM            reduce using rule 110 (value_expression -> value_expression MINUS term .)
    ELSE            reduce using rule 110 (value_expression -> value_expression MINUS term .)
    ASTERISK        shift and go to state 122
    SLASH           shift and go to state 120
    PERCENT         shift and go to state 121
    CONCAT          shift and go to state 123


state 146

    (100) comparison_predicate -> value_expression comparison_operator value_expression .
    (109) value_expression -> value_expression . PLUS term
    (110) value_expression -> value_expression . MINUS term

    AND             reduce using rule 100 (comparison_predicate -> value_expression comparison_operator value_expression .)
    OR              reduce using rule 100 (comparison_predicate -> value_expression comparison_operator value_expression .)
    COMMA           reduce using rule 100 (comparison_predicate -> value_expression comparison_operator value_expression .)
    INTERSECT       reduce using rule 100 (comparison_predicate -> value_expression comparison_operator value_expression .)
    UNION           reduce using rule 100 (comparison_predicate -> value_expression comparison_operator value_expression .)
    EXCEPT          reduce using rule 100 (comparison_predicate -> value_expression comparison_operator value_expression .)
    ORDER           reduce using rule 100 (comparison_predicate -> value_expression comparison_operator value_expression .)
    LIMIT           reduce using rule 100 (comparison_predicate -> value_expression comparison_operator value_expression .)
    $end            reduce using rule 100 (comparison_predicate -> value_expression comparison_operator value_expression .)
    RPAREN          reduce using rule 100 (comparison_predicate -> value_expression comparison_operator value_expression .)
    ASC             reduce using rule 100 (comparison_predicate -> value_expression comparison_operator value_expression .)
    DESC            reduce using rule 100 (comparison_predicate -> value_expression comparison_operator value_expression .)
    NULLS           reduce using rule 100 (comparison_predicate -> value_expression comparison_operator value_expression .)
    THEN            reduce using rule 100 (comparison_predicate -> value_expression comparison_operator value_expression .)
    GROUP           reduce using rule 100 (comparison_predicate -> value_expression comparison_operator value_expression .)
    HAVING          reduce using rule 100 (comparison_predicate -> value_expression comparison_operator value_expression .)
    CROSS           reduce using rule 100 (comparison_predicate -> value_expression comparison_operator value_expression .)
    NATURAL         reduce using rule 100 (comparison_predicate -> value_expression comparison_operator value_expression .)
    INNER           reduce using rule 100 (comparison_predicate -> value_expression comparison_operator value_expression .)
    LEFT            reduce using rule 100 (comparison_predicate -> value_expression comparison_operator value_expression .)
    RIGHT           reduce using rule 100 (comparison_predicate -> value_expression comparison_operator value_expression .)
    FULL            reduce using rule 100 (comparison_predicate -> value_expression comparison_operator value_expression .)
    JOIN            reduce using rule 100 (comparison_predicate -> value_expression comparison_operator value_expression .)
    WHERE           reduce using rule 100 (comparison_predicate -> value_expression comparison_operator value_expression .)
    ON              reduce using rule 100 (comparison_predicate -> value_expression comparison_operator value_expression .)
    USING           reduce using rule 100 (comparison_predicate -> value_expression comparison_operator value_expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83


state 147

    (101) between_predicate -> value_expression not_opt BETWEEN . value_expression AND value_expression
    (109) value_expression -> . value_expression PLUS term
    (110) value_expression -> . value_expression MINUS term
    (111) value_expression -> . term
    (112) term -> . term ASTERISK factor
    (113) term -> . term SLASH factor
    (114) term -> . term PERCENT factor
    (115) term -> . term CONCAT factor
    (116) term -> . factor
    (117) factor -> . sign_opt primary_expression
    (174) sign_opt -> . sign
    (175) sign_opt -> . empty
    (176) sign -> . PLUS
    (177) sign -> . MINUS
    (194) empty -> .

    PLUS            shift and go to state 63
    MINUS           shift and go to state 47
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    term                           shift and go to state 54
    sign_opt                       shift and go to state 49
    value_expression               shift and go to state 186
    factor                         shift and go to state 57
    empty                          shift and go to state 55
    sign                           shift and go to state 56

state 148

    (106) like_predicate -> value_expression not_opt LIKE . value_expression
    (109) value_expression -> . value_expression PLUS term
    (110) value_expression -> . value_expression MINUS term
    (111) value_expression -> . term
    (112) term -> . term ASTERISK factor
    (113) term -> . term SLASH factor
    (114) term -> . term PERCENT factor
    (115) term -> . term CONCAT factor
    (116) term -> . factor
    (117) factor -> . sign_opt primary_expression
    (174) sign_opt -> . sign
    (175) sign_opt -> . empty
    (176) sign -> . PLUS
    (177) sign -> . MINUS
    (194) empty -> .

    PLUS            shift and go to state 63
    MINUS           shift and go to state 47
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    term                           shift and go to state 54
    sign_opt                       shift and go to state 49
    value_expression               shift and go to state 187
    factor                         shift and go to state 57
    empty                          shift and go to state 55
    sign                           shift and go to state 56

state 149

    (102) in_predicate -> value_expression not_opt IN . in_value
    (103) in_value -> . LPAREN in_expressions RPAREN

    LPAREN          shift and go to state 188

    in_value                       shift and go to state 189

state 150

    (180) integer_param_opt -> LPAREN . INTEGER RPAREN

    INTEGER         shift and go to state 190


state 151

    (181) integer_param_opt -> empty .

    ASTERISK        reduce using rule 181 (integer_param_opt -> empty .)
    SLASH           reduce using rule 181 (integer_param_opt -> empty .)
    PERCENT         reduce using rule 181 (integer_param_opt -> empty .)
    CONCAT          reduce using rule 181 (integer_param_opt -> empty .)
    IS              reduce using rule 181 (integer_param_opt -> empty .)
    PLUS            reduce using rule 181 (integer_param_opt -> empty .)
    MINUS           reduce using rule 181 (integer_param_opt -> empty .)
    EQ              reduce using rule 181 (integer_param_opt -> empty .)
    NE              reduce using rule 181 (integer_param_opt -> empty .)
    LT              reduce using rule 181 (integer_param_opt -> empty .)
    LE              reduce using rule 181 (integer_param_opt -> empty .)
    GT              reduce using rule 181 (integer_param_opt -> empty .)
    GE              reduce using rule 181 (integer_param_opt -> empty .)
    NOT             reduce using rule 181 (integer_param_opt -> empty .)
    BETWEEN         reduce using rule 181 (integer_param_opt -> empty .)
    IN              reduce using rule 181 (integer_param_opt -> empty .)
    LIKE            reduce using rule 181 (integer_param_opt -> empty .)
    AS              reduce using rule 181 (integer_param_opt -> empty .)
    IDENTIFIER      reduce using rule 181 (integer_param_opt -> empty .)
    DIGIT_IDENTIFIER reduce using rule 181 (integer_param_opt -> empty .)
    QUOTED_IDENTIFIER reduce using rule 181 (integer_param_opt -> empty .)
    BACKQUOTED_IDENTIFIER reduce using rule 181 (integer_param_opt -> empty .)
    NON_RESERVED    reduce using rule 181 (integer_param_opt -> empty .)
    COMMA           reduce using rule 181 (integer_param_opt -> empty .)
    FROM            reduce using rule 181 (integer_param_opt -> empty .)
    INTERSECT       reduce using rule 181 (integer_param_opt -> empty .)
    UNION           reduce using rule 181 (integer_param_opt -> empty .)
    EXCEPT          reduce using rule 181 (integer_param_opt -> empty .)
    ORDER           reduce using rule 181 (integer_param_opt -> empty .)
    LIMIT           reduce using rule 181 (integer_param_opt -> empty .)
    $end            reduce using rule 181 (integer_param_opt -> empty .)
    RPAREN          reduce using rule 181 (integer_param_opt -> empty .)
    AND             reduce using rule 181 (integer_param_opt -> empty .)
    OR              reduce using rule 181 (integer_param_opt -> empty .)
    ASC             reduce using rule 181 (integer_param_opt -> empty .)
    DESC            reduce using rule 181 (integer_param_opt -> empty .)
    NULLS           reduce using rule 181 (integer_param_opt -> empty .)
    THEN            reduce using rule 181 (integer_param_opt -> empty .)
    GROUP           reduce using rule 181 (integer_param_opt -> empty .)
    HAVING          reduce using rule 181 (integer_param_opt -> empty .)
    CROSS           reduce using rule 181 (integer_param_opt -> empty .)
    NATURAL         reduce using rule 181 (integer_param_opt -> empty .)
    INNER           reduce using rule 181 (integer_param_opt -> empty .)
    LEFT            reduce using rule 181 (integer_param_opt -> empty .)
    RIGHT           reduce using rule 181 (integer_param_opt -> empty .)
    FULL            reduce using rule 181 (integer_param_opt -> empty .)
    JOIN            reduce using rule 181 (integer_param_opt -> empty .)
    WHERE           reduce using rule 181 (integer_param_opt -> empty .)
    ON              reduce using rule 181 (integer_param_opt -> empty .)
    USING           reduce using rule 181 (integer_param_opt -> empty .)
    WHEN            reduce using rule 181 (integer_param_opt -> empty .)
    END             reduce using rule 181 (integer_param_opt -> empty .)
    ELSE            reduce using rule 181 (integer_param_opt -> empty .)


state 152

    (148) date_time -> CURRENT_TIMESTAMP integer_param_opt .

    ASTERISK        reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    SLASH           reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    PERCENT         reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    CONCAT          reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    IS              reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    PLUS            reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    MINUS           reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    EQ              reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    NE              reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    LT              reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    LE              reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    GT              reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    GE              reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    NOT             reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    BETWEEN         reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    IN              reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    LIKE            reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    AS              reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    IDENTIFIER      reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    DIGIT_IDENTIFIER reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    QUOTED_IDENTIFIER reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    BACKQUOTED_IDENTIFIER reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    NON_RESERVED    reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    COMMA           reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    FROM            reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    INTERSECT       reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    UNION           reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    EXCEPT          reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    ORDER           reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    LIMIT           reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    $end            reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    RPAREN          reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    AND             reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    OR              reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    ASC             reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    DESC            reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    NULLS           reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    THEN            reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    GROUP           reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    HAVING          reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    CROSS           reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    NATURAL         reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    INNER           reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    LEFT            reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    RIGHT           reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    FULL            reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    JOIN            reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    WHERE           reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    ON              reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    USING           reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    WHEN            reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    END             reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)
    ELSE            reduce using rule 148 (date_time -> CURRENT_TIMESTAMP integer_param_opt .)


state 153

    (149) date_time -> LOCALTIME integer_param_opt .

    ASTERISK        reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    SLASH           reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    PERCENT         reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    CONCAT          reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    IS              reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    PLUS            reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    MINUS           reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    EQ              reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    NE              reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    LT              reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    LE              reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    GT              reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    GE              reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    NOT             reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    BETWEEN         reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    IN              reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    LIKE            reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    AS              reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    IDENTIFIER      reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    DIGIT_IDENTIFIER reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    QUOTED_IDENTIFIER reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    BACKQUOTED_IDENTIFIER reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    NON_RESERVED    reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    COMMA           reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    FROM            reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    INTERSECT       reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    UNION           reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    EXCEPT          reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    ORDER           reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    LIMIT           reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    $end            reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    RPAREN          reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    AND             reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    OR              reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    ASC             reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    DESC            reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    NULLS           reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    THEN            reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    GROUP           reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    HAVING          reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    CROSS           reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    NATURAL         reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    INNER           reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    LEFT            reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    RIGHT           reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    FULL            reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    JOIN            reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    WHERE           reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    ON              reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    USING           reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    WHEN            reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    END             reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)
    ELSE            reduce using rule 149 (date_time -> LOCALTIME integer_param_opt .)


state 154

    (135) simple_case -> CASE value_expression . when_clauses else_opt END
    (109) value_expression -> value_expression . PLUS term
    (110) value_expression -> value_expression . MINUS term
    (137) when_clauses -> . when_clauses when_clause
    (138) when_clauses -> . when_clause
    (139) when_clause -> . WHEN search_condition THEN value_expression

    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    WHEN            shift and go to state 156

    when_clause                    shift and go to state 155
    when_clauses                   shift and go to state 191

state 155

    (138) when_clauses -> when_clause .

    ELSE            reduce using rule 138 (when_clauses -> when_clause .)
    WHEN            reduce using rule 138 (when_clauses -> when_clause .)
    END             reduce using rule 138 (when_clauses -> when_clause .)


state 156

    (139) when_clause -> WHEN . search_condition THEN value_expression
    (85) search_condition -> . boolean_term
    (86) search_condition -> . search_condition OR boolean_term
    (87) boolean_term -> . boolean_factor
    (88) boolean_term -> . boolean_term AND boolean_factor
    (89) boolean_factor -> . not_opt boolean_test
    (161) not_opt -> . NOT
    (162) not_opt -> . empty
    (194) empty -> .

    NOT             shift and go to state 18
    RPAREN          reduce using rule 194 (empty -> .)
    EXISTS          reduce using rule 194 (empty -> .)
    PLUS            reduce using rule 194 (empty -> .)
    MINUS           reduce using rule 194 (empty -> .)
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    search_condition               shift and go to state 192
    boolean_factor                 shift and go to state 16
    empty                          shift and go to state 17
    not_opt                        shift and go to state 19
    boolean_term                   shift and go to state 23

state 157

    (136) searched_case -> CASE when_clauses . else_opt END
    (137) when_clauses -> when_clauses . when_clause
    (140) else_opt -> . ELSE value_expression
    (141) else_opt -> . empty
    (139) when_clause -> . WHEN search_condition THEN value_expression
    (194) empty -> .

    ELSE            shift and go to state 193
    WHEN            shift and go to state 156
    END             reduce using rule 194 (empty -> .)

    empty                          shift and go to state 194
    when_clause                    shift and go to state 195
    else_opt                       shift and go to state 196

state 158

    (132) function_call -> qualified_name LPAREN . call_list RPAREN
    (142) call_list -> . call_list COMMA value_expression
    (143) call_list -> . value_expression
    (109) value_expression -> . value_expression PLUS term
    (110) value_expression -> . value_expression MINUS term
    (111) value_expression -> . term
    (112) term -> . term ASTERISK factor
    (113) term -> . term SLASH factor
    (114) term -> . term PERCENT factor
    (115) term -> . term CONCAT factor
    (116) term -> . factor
    (117) factor -> . sign_opt primary_expression
    (174) sign_opt -> . sign
    (175) sign_opt -> . empty
    (176) sign -> . PLUS
    (177) sign -> . MINUS
    (194) empty -> .

    PLUS            shift and go to state 63
    MINUS           shift and go to state 47
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    term                           shift and go to state 54
    sign_opt                       shift and go to state 49
    value_expression               shift and go to state 197
    factor                         shift and go to state 57
    empty                          shift and go to state 55
    call_list                      shift and go to state 198
    sign                           shift and go to state 56

state 159

    (150) date_time -> LOCALTIMESTAMP integer_param_opt .

    ASTERISK        reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    SLASH           reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    PERCENT         reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    CONCAT          reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    IS              reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    PLUS            reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    MINUS           reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    EQ              reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    NE              reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    LT              reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    LE              reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    GT              reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    GE              reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    NOT             reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    BETWEEN         reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    IN              reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    LIKE            reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    AS              reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    IDENTIFIER      reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    DIGIT_IDENTIFIER reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    QUOTED_IDENTIFIER reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    BACKQUOTED_IDENTIFIER reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    NON_RESERVED    reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    COMMA           reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    FROM            reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    INTERSECT       reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    UNION           reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    EXCEPT          reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    ORDER           reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    LIMIT           reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    $end            reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    RPAREN          reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    AND             reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    OR              reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    ASC             reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    DESC            reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    NULLS           reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    THEN            reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    GROUP           reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    HAVING          reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    CROSS           reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    NATURAL         reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    INNER           reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    LEFT            reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    RIGHT           reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    FULL            reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    JOIN            reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    WHERE           reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    ON              reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    USING           reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    WHEN            reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    END             reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)
    ELSE            reduce using rule 150 (date_time -> LOCALTIMESTAMP integer_param_opt .)


state 160

    (165) interval -> INTERVAL sign_opt . STRING interval_field interval_end_opt

    STRING          shift and go to state 199


state 161

    (126) base_primary_expression -> identifier STRING .

    ASTERISK        reduce using rule 126 (base_primary_expression -> identifier STRING .)
    SLASH           reduce using rule 126 (base_primary_expression -> identifier STRING .)
    PERCENT         reduce using rule 126 (base_primary_expression -> identifier STRING .)
    CONCAT          reduce using rule 126 (base_primary_expression -> identifier STRING .)
    IS              reduce using rule 126 (base_primary_expression -> identifier STRING .)
    PLUS            reduce using rule 126 (base_primary_expression -> identifier STRING .)
    MINUS           reduce using rule 126 (base_primary_expression -> identifier STRING .)
    EQ              reduce using rule 126 (base_primary_expression -> identifier STRING .)
    NE              reduce using rule 126 (base_primary_expression -> identifier STRING .)
    LT              reduce using rule 126 (base_primary_expression -> identifier STRING .)
    LE              reduce using rule 126 (base_primary_expression -> identifier STRING .)
    GT              reduce using rule 126 (base_primary_expression -> identifier STRING .)
    GE              reduce using rule 126 (base_primary_expression -> identifier STRING .)
    NOT             reduce using rule 126 (base_primary_expression -> identifier STRING .)
    BETWEEN         reduce using rule 126 (base_primary_expression -> identifier STRING .)
    IN              reduce using rule 126 (base_primary_expression -> identifier STRING .)
    LIKE            reduce using rule 126 (base_primary_expression -> identifier STRING .)
    AS              reduce using rule 126 (base_primary_expression -> identifier STRING .)
    IDENTIFIER      reduce using rule 126 (base_primary_expression -> identifier STRING .)
    DIGIT_IDENTIFIER reduce using rule 126 (base_primary_expression -> identifier STRING .)
    QUOTED_IDENTIFIER reduce using rule 126 (base_primary_expression -> identifier STRING .)
    BACKQUOTED_IDENTIFIER reduce using rule 126 (base_primary_expression -> identifier STRING .)
    NON_RESERVED    reduce using rule 126 (base_primary_expression -> identifier STRING .)
    COMMA           reduce using rule 126 (base_primary_expression -> identifier STRING .)
    FROM            reduce using rule 126 (base_primary_expression -> identifier STRING .)
    INTERSECT       reduce using rule 126 (base_primary_expression -> identifier STRING .)
    UNION           reduce using rule 126 (base_primary_expression -> identifier STRING .)
    EXCEPT          reduce using rule 126 (base_primary_expression -> identifier STRING .)
    ORDER           reduce using rule 126 (base_primary_expression -> identifier STRING .)
    LIMIT           reduce using rule 126 (base_primary_expression -> identifier STRING .)
    $end            reduce using rule 126 (base_primary_expression -> identifier STRING .)
    RPAREN          reduce using rule 126 (base_primary_expression -> identifier STRING .)
    AND             reduce using rule 126 (base_primary_expression -> identifier STRING .)
    OR              reduce using rule 126 (base_primary_expression -> identifier STRING .)
    ASC             reduce using rule 126 (base_primary_expression -> identifier STRING .)
    DESC            reduce using rule 126 (base_primary_expression -> identifier STRING .)
    NULLS           reduce using rule 126 (base_primary_expression -> identifier STRING .)
    THEN            reduce using rule 126 (base_primary_expression -> identifier STRING .)
    GROUP           reduce using rule 126 (base_primary_expression -> identifier STRING .)
    HAVING          reduce using rule 126 (base_primary_expression -> identifier STRING .)
    CROSS           reduce using rule 126 (base_primary_expression -> identifier STRING .)
    NATURAL         reduce using rule 126 (base_primary_expression -> identifier STRING .)
    INNER           reduce using rule 126 (base_primary_expression -> identifier STRING .)
    LEFT            reduce using rule 126 (base_primary_expression -> identifier STRING .)
    RIGHT           reduce using rule 126 (base_primary_expression -> identifier STRING .)
    FULL            reduce using rule 126 (base_primary_expression -> identifier STRING .)
    JOIN            reduce using rule 126 (base_primary_expression -> identifier STRING .)
    WHERE           reduce using rule 126 (base_primary_expression -> identifier STRING .)
    ON              reduce using rule 126 (base_primary_expression -> identifier STRING .)
    USING           reduce using rule 126 (base_primary_expression -> identifier STRING .)
    WHEN            reduce using rule 126 (base_primary_expression -> identifier STRING .)
    END             reduce using rule 126 (base_primary_expression -> identifier STRING .)
    ELSE            reduce using rule 126 (base_primary_expression -> identifier STRING .)


state 162

    (147) date_time -> CURRENT_TIME integer_param_opt .

    ASTERISK        reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    SLASH           reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    PERCENT         reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    CONCAT          reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    IS              reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    PLUS            reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    MINUS           reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    EQ              reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    NE              reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    LT              reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    LE              reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    GT              reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    GE              reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    NOT             reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    BETWEEN         reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    IN              reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    LIKE            reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    AS              reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    IDENTIFIER      reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    DIGIT_IDENTIFIER reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    QUOTED_IDENTIFIER reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    BACKQUOTED_IDENTIFIER reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    NON_RESERVED    reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    COMMA           reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    FROM            reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    INTERSECT       reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    UNION           reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    EXCEPT          reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    ORDER           reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    LIMIT           reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    $end            reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    RPAREN          reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    AND             reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    OR              reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    ASC             reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    DESC            reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    NULLS           reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    THEN            reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    GROUP           reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    HAVING          reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    CROSS           reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    NATURAL         reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    INNER           reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    LEFT            reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    RIGHT           reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    FULL            reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    JOIN            reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    WHERE           reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    ON              reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    USING           reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    WHEN            reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    END             reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)
    ELSE            reduce using rule 147 (date_time -> CURRENT_TIME integer_param_opt .)


state 163

    (2) subquery -> LPAREN query . RPAREN

    RPAREN          shift and go to state 200


state 164

    (2) subquery -> LPAREN . query RPAREN
    (25) nonjoin_query_primary -> LPAREN . query_term RPAREN
    (3) query -> . query_no_with
    (19) query_term -> . query_term_intersect
    (20) query_term -> . query_term UNION set_quantifier_opt query_term_intersect
    (21) query_term -> . query_term EXCEPT set_quantifier_opt query_term_intersect
    (4) query_no_with -> . query_term order_by_opt limit_opt
    (22) query_term_intersect -> . nonjoin_query_primary
    (23) query_term_intersect -> . query_term_intersect INTERSECT set_quantifier_opt nonjoin_query_primary
    (24) nonjoin_query_primary -> . simple_table
    (25) nonjoin_query_primary -> . LPAREN query_term RPAREN
    (26) simple_table -> . query_specification
    (27) simple_table -> . explicit_table
    (28) simple_table -> . table_value_constructor
    (33) query_specification -> . SELECT set_quantifier_opt adql_top_opt select_items table_expression_opt
    (29) explicit_table -> . TABLE qualified_name
    (30) table_value_constructor -> . VALUES values_list

    LPAREN          shift and go to state 12
    SELECT          shift and go to state 13
    TABLE           shift and go to state 10
    VALUES          shift and go to state 3

    query_no_with                  shift and go to state 9
    simple_table                   shift and go to state 2
    query_term_intersect           shift and go to state 1
    query_specification            shift and go to state 5
    table_value_constructor        shift and go to state 14
    explicit_table                 shift and go to state 4
    query_term                     shift and go to state 201
    nonjoin_query_primary          shift and go to state 6
    query                          shift and go to state 163

state 165

    (120) parenthetic_primary_expression -> LPAREN base_primary_expression . RPAREN

    RPAREN          shift and go to state 202


state 166

    (113) term -> term SLASH factor .

    ASTERISK        reduce using rule 113 (term -> term SLASH factor .)
    SLASH           reduce using rule 113 (term -> term SLASH factor .)
    PERCENT         reduce using rule 113 (term -> term SLASH factor .)
    CONCAT          reduce using rule 113 (term -> term SLASH factor .)
    PLUS            reduce using rule 113 (term -> term SLASH factor .)
    MINUS           reduce using rule 113 (term -> term SLASH factor .)
    AND             reduce using rule 113 (term -> term SLASH factor .)
    OR              reduce using rule 113 (term -> term SLASH factor .)
    COMMA           reduce using rule 113 (term -> term SLASH factor .)
    INTERSECT       reduce using rule 113 (term -> term SLASH factor .)
    UNION           reduce using rule 113 (term -> term SLASH factor .)
    EXCEPT          reduce using rule 113 (term -> term SLASH factor .)
    ORDER           reduce using rule 113 (term -> term SLASH factor .)
    LIMIT           reduce using rule 113 (term -> term SLASH factor .)
    $end            reduce using rule 113 (term -> term SLASH factor .)
    RPAREN          reduce using rule 113 (term -> term SLASH factor .)
    ASC             reduce using rule 113 (term -> term SLASH factor .)
    DESC            reduce using rule 113 (term -> term SLASH factor .)
    NULLS           reduce using rule 113 (term -> term SLASH factor .)
    THEN            reduce using rule 113 (term -> term SLASH factor .)
    GROUP           reduce using rule 113 (term -> term SLASH factor .)
    HAVING          reduce using rule 113 (term -> term SLASH factor .)
    CROSS           reduce using rule 113 (term -> term SLASH factor .)
    NATURAL         reduce using rule 113 (term -> term SLASH factor .)
    INNER           reduce using rule 113 (term -> term SLASH factor .)
    LEFT            reduce using rule 113 (term -> term SLASH factor .)
    RIGHT           reduce using rule 113 (term -> term SLASH factor .)
    FULL            reduce using rule 113 (term -> term SLASH factor .)
    JOIN            reduce using rule 113 (term -> term SLASH factor .)
    WHERE           reduce using rule 113 (term -> term SLASH factor .)
    ON              reduce using rule 113 (term -> term SLASH factor .)
    USING           reduce using rule 113 (term -> term SLASH factor .)
    ELSE            reduce using rule 113 (term -> term SLASH factor .)
    WHEN            reduce using rule 113 (term -> term SLASH factor .)
    END             reduce using rule 113 (term -> term SLASH factor .)
    AS              reduce using rule 113 (term -> term SLASH factor .)
    IDENTIFIER      reduce using rule 113 (term -> term SLASH factor .)
    DIGIT_IDENTIFIER reduce using rule 113 (term -> term SLASH factor .)
    QUOTED_IDENTIFIER reduce using rule 113 (term -> term SLASH factor .)
    BACKQUOTED_IDENTIFIER reduce using rule 113 (term -> term SLASH factor .)
    NON_RESERVED    reduce using rule 113 (term -> term SLASH factor .)
    FROM            reduce using rule 113 (term -> term SLASH factor .)
    IS              reduce using rule 113 (term -> term SLASH factor .)
    EQ              reduce using rule 113 (term -> term SLASH factor .)
    NE              reduce using rule 113 (term -> term SLASH factor .)
    LT              reduce using rule 113 (term -> term SLASH factor .)
    LE              reduce using rule 113 (term -> term SLASH factor .)
    GT              reduce using rule 113 (term -> term SLASH factor .)
    GE              reduce using rule 113 (term -> term SLASH factor .)
    NOT             reduce using rule 113 (term -> term SLASH factor .)
    BETWEEN         reduce using rule 113 (term -> term SLASH factor .)
    IN              reduce using rule 113 (term -> term SLASH factor .)
    LIKE            reduce using rule 113 (term -> term SLASH factor .)


state 167

    (114) term -> term PERCENT factor .

    ASTERISK        reduce using rule 114 (term -> term PERCENT factor .)
    SLASH           reduce using rule 114 (term -> term PERCENT factor .)
    PERCENT         reduce using rule 114 (term -> term PERCENT factor .)
    CONCAT          reduce using rule 114 (term -> term PERCENT factor .)
    PLUS            reduce using rule 114 (term -> term PERCENT factor .)
    MINUS           reduce using rule 114 (term -> term PERCENT factor .)
    AND             reduce using rule 114 (term -> term PERCENT factor .)
    OR              reduce using rule 114 (term -> term PERCENT factor .)
    COMMA           reduce using rule 114 (term -> term PERCENT factor .)
    INTERSECT       reduce using rule 114 (term -> term PERCENT factor .)
    UNION           reduce using rule 114 (term -> term PERCENT factor .)
    EXCEPT          reduce using rule 114 (term -> term PERCENT factor .)
    ORDER           reduce using rule 114 (term -> term PERCENT factor .)
    LIMIT           reduce using rule 114 (term -> term PERCENT factor .)
    $end            reduce using rule 114 (term -> term PERCENT factor .)
    RPAREN          reduce using rule 114 (term -> term PERCENT factor .)
    ASC             reduce using rule 114 (term -> term PERCENT factor .)
    DESC            reduce using rule 114 (term -> term PERCENT factor .)
    NULLS           reduce using rule 114 (term -> term PERCENT factor .)
    THEN            reduce using rule 114 (term -> term PERCENT factor .)
    GROUP           reduce using rule 114 (term -> term PERCENT factor .)
    HAVING          reduce using rule 114 (term -> term PERCENT factor .)
    CROSS           reduce using rule 114 (term -> term PERCENT factor .)
    NATURAL         reduce using rule 114 (term -> term PERCENT factor .)
    INNER           reduce using rule 114 (term -> term PERCENT factor .)
    LEFT            reduce using rule 114 (term -> term PERCENT factor .)
    RIGHT           reduce using rule 114 (term -> term PERCENT factor .)
    FULL            reduce using rule 114 (term -> term PERCENT factor .)
    JOIN            reduce using rule 114 (term -> term PERCENT factor .)
    WHERE           reduce using rule 114 (term -> term PERCENT factor .)
    ON              reduce using rule 114 (term -> term PERCENT factor .)
    USING           reduce using rule 114 (term -> term PERCENT factor .)
    ELSE            reduce using rule 114 (term -> term PERCENT factor .)
    WHEN            reduce using rule 114 (term -> term PERCENT factor .)
    END             reduce using rule 114 (term -> term PERCENT factor .)
    AS              reduce using rule 114 (term -> term PERCENT factor .)
    IDENTIFIER      reduce using rule 114 (term -> term PERCENT factor .)
    DIGIT_IDENTIFIER reduce using rule 114 (term -> term PERCENT factor .)
    QUOTED_IDENTIFIER reduce using rule 114 (term -> term PERCENT factor .)
    BACKQUOTED_IDENTIFIER reduce using rule 114 (term -> term PERCENT factor .)
    NON_RESERVED    reduce using rule 114 (term -> term PERCENT factor .)
    FROM            reduce using rule 114 (term -> term PERCENT factor .)
    IS              reduce using rule 114 (term -> term PERCENT factor .)
    EQ              reduce using rule 114 (term -> term PERCENT factor .)
    NE              reduce using rule 114 (term -> term PERCENT factor .)
    LT              reduce using rule 114 (term -> term PERCENT factor .)
    LE              reduce using rule 114 (term -> term PERCENT factor .)
    GT              reduce using rule 114 (term -> term PERCENT factor .)
    GE              reduce using rule 114 (term -> term PERCENT factor .)
    NOT             reduce using rule 114 (term -> term PERCENT factor .)
    BETWEEN         reduce using rule 114 (term -> term PERCENT factor .)
    IN              reduce using rule 114 (term -> term PERCENT factor .)
    LIKE            reduce using rule 114 (term -> term PERCENT factor .)


state 168

    (112) term -> term ASTERISK factor .

    ASTERISK        reduce using rule 112 (term -> term ASTERISK factor .)
    SLASH           reduce using rule 112 (term -> term ASTERISK factor .)
    PERCENT         reduce using rule 112 (term -> term ASTERISK factor .)
    CONCAT          reduce using rule 112 (term -> term ASTERISK factor .)
    PLUS            reduce using rule 112 (term -> term ASTERISK factor .)
    MINUS           reduce using rule 112 (term -> term ASTERISK factor .)
    AND             reduce using rule 112 (term -> term ASTERISK factor .)
    OR              reduce using rule 112 (term -> term ASTERISK factor .)
    COMMA           reduce using rule 112 (term -> term ASTERISK factor .)
    INTERSECT       reduce using rule 112 (term -> term ASTERISK factor .)
    UNION           reduce using rule 112 (term -> term ASTERISK factor .)
    EXCEPT          reduce using rule 112 (term -> term ASTERISK factor .)
    ORDER           reduce using rule 112 (term -> term ASTERISK factor .)
    LIMIT           reduce using rule 112 (term -> term ASTERISK factor .)
    $end            reduce using rule 112 (term -> term ASTERISK factor .)
    RPAREN          reduce using rule 112 (term -> term ASTERISK factor .)
    ASC             reduce using rule 112 (term -> term ASTERISK factor .)
    DESC            reduce using rule 112 (term -> term ASTERISK factor .)
    NULLS           reduce using rule 112 (term -> term ASTERISK factor .)
    THEN            reduce using rule 112 (term -> term ASTERISK factor .)
    GROUP           reduce using rule 112 (term -> term ASTERISK factor .)
    HAVING          reduce using rule 112 (term -> term ASTERISK factor .)
    CROSS           reduce using rule 112 (term -> term ASTERISK factor .)
    NATURAL         reduce using rule 112 (term -> term ASTERISK factor .)
    INNER           reduce using rule 112 (term -> term ASTERISK factor .)
    LEFT            reduce using rule 112 (term -> term ASTERISK factor .)
    RIGHT           reduce using rule 112 (term -> term ASTERISK factor .)
    FULL            reduce using rule 112 (term -> term ASTERISK factor .)
    JOIN            reduce using rule 112 (term -> term ASTERISK factor .)
    WHERE           reduce using rule 112 (term -> term ASTERISK factor .)
    ON              reduce using rule 112 (term -> term ASTERISK factor .)
    USING           reduce using rule 112 (term -> term ASTERISK factor .)
    ELSE            reduce using rule 112 (term -> term ASTERISK factor .)
    WHEN            reduce using rule 112 (term -> term ASTERISK factor .)
    END             reduce using rule 112 (term -> term ASTERISK factor .)
    AS              reduce using rule 112 (term -> term ASTERISK factor .)
    IDENTIFIER      reduce using rule 112 (term -> term ASTERISK factor .)
    DIGIT_IDENTIFIER reduce using rule 112 (term -> term ASTERISK factor .)
    QUOTED_IDENTIFIER reduce using rule 112 (term -> term ASTERISK factor .)
    BACKQUOTED_IDENTIFIER reduce using rule 112 (term -> term ASTERISK factor .)
    NON_RESERVED    reduce using rule 112 (term -> term ASTERISK factor .)
    FROM            reduce using rule 112 (term -> term ASTERISK factor .)
    IS              reduce using rule 112 (term -> term ASTERISK factor .)
    EQ              reduce using rule 112 (term -> term ASTERISK factor .)
    NE              reduce using rule 112 (term -> term ASTERISK factor .)
    LT              reduce using rule 112 (term -> term ASTERISK factor .)
    LE              reduce using rule 112 (term -> term ASTERISK factor .)
    GT              reduce using rule 112 (term -> term ASTERISK factor .)
    GE              reduce using rule 112 (term -> term ASTERISK factor .)
    NOT             reduce using rule 112 (term -> term ASTERISK factor .)
    BETWEEN         reduce using rule 112 (term -> term ASTERISK factor .)
    IN              reduce using rule 112 (term -> term ASTERISK factor .)
    LIKE            reduce using rule 112 (term -> term ASTERISK factor .)


state 169

    (115) term -> term CONCAT factor .

    ASTERISK        reduce using rule 115 (term -> term CONCAT factor .)
    SLASH           reduce using rule 115 (term -> term CONCAT factor .)
    PERCENT         reduce using rule 115 (term -> term CONCAT factor .)
    CONCAT          reduce using rule 115 (term -> term CONCAT factor .)
    PLUS            reduce using rule 115 (term -> term CONCAT factor .)
    MINUS           reduce using rule 115 (term -> term CONCAT factor .)
    AND             reduce using rule 115 (term -> term CONCAT factor .)
    OR              reduce using rule 115 (term -> term CONCAT factor .)
    COMMA           reduce using rule 115 (term -> term CONCAT factor .)
    INTERSECT       reduce using rule 115 (term -> term CONCAT factor .)
    UNION           reduce using rule 115 (term -> term CONCAT factor .)
    EXCEPT          reduce using rule 115 (term -> term CONCAT factor .)
    ORDER           reduce using rule 115 (term -> term CONCAT factor .)
    LIMIT           reduce using rule 115 (term -> term CONCAT factor .)
    $end            reduce using rule 115 (term -> term CONCAT factor .)
    RPAREN          reduce using rule 115 (term -> term CONCAT factor .)
    ASC             reduce using rule 115 (term -> term CONCAT factor .)
    DESC            reduce using rule 115 (term -> term CONCAT factor .)
    NULLS           reduce using rule 115 (term -> term CONCAT factor .)
    THEN            reduce using rule 115 (term -> term CONCAT factor .)
    GROUP           reduce using rule 115 (term -> term CONCAT factor .)
    HAVING          reduce using rule 115 (term -> term CONCAT factor .)
    CROSS           reduce using rule 115 (term -> term CONCAT factor .)
    NATURAL         reduce using rule 115 (term -> term CONCAT factor .)
    INNER           reduce using rule 115 (term -> term CONCAT factor .)
    LEFT            reduce using rule 115 (term -> term CONCAT factor .)
    RIGHT           reduce using rule 115 (term -> term CONCAT factor .)
    FULL            reduce using rule 115 (term -> term CONCAT factor .)
    JOIN            reduce using rule 115 (term -> term CONCAT factor .)
    WHERE           reduce using rule 115 (term -> term CONCAT factor .)
    ON              reduce using rule 115 (term -> term CONCAT factor .)
    USING           reduce using rule 115 (term -> term CONCAT factor .)
    ELSE            reduce using rule 115 (term -> term CONCAT factor .)
    WHEN            reduce using rule 115 (term -> term CONCAT factor .)
    END             reduce using rule 115 (term -> term CONCAT factor .)
    AS              reduce using rule 115 (term -> term CONCAT factor .)
    IDENTIFIER      reduce using rule 115 (term -> term CONCAT factor .)
    DIGIT_IDENTIFIER reduce using rule 115 (term -> term CONCAT factor .)
    QUOTED_IDENTIFIER reduce using rule 115 (term -> term CONCAT factor .)
    BACKQUOTED_IDENTIFIER reduce using rule 115 (term -> term CONCAT factor .)
    NON_RESERVED    reduce using rule 115 (term -> term CONCAT factor .)
    FROM            reduce using rule 115 (term -> term CONCAT factor .)
    IS              reduce using rule 115 (term -> term CONCAT factor .)
    EQ              reduce using rule 115 (term -> term CONCAT factor .)
    NE              reduce using rule 115 (term -> term CONCAT factor .)
    LT              reduce using rule 115 (term -> term CONCAT factor .)
    LE              reduce using rule 115 (term -> term CONCAT factor .)
    GT              reduce using rule 115 (term -> term CONCAT factor .)
    GE              reduce using rule 115 (term -> term CONCAT factor .)
    NOT             reduce using rule 115 (term -> term CONCAT factor .)
    BETWEEN         reduce using rule 115 (term -> term CONCAT factor .)
    IN              reduce using rule 115 (term -> term CONCAT factor .)
    LIKE            reduce using rule 115 (term -> term CONCAT factor .)


state 170

    (93) parenthetic_expression -> RPAREN expression RPAREN .

    AND             reduce using rule 93 (parenthetic_expression -> RPAREN expression RPAREN .)
    OR              reduce using rule 93 (parenthetic_expression -> RPAREN expression RPAREN .)
    COMMA           reduce using rule 93 (parenthetic_expression -> RPAREN expression RPAREN .)
    INTERSECT       reduce using rule 93 (parenthetic_expression -> RPAREN expression RPAREN .)
    UNION           reduce using rule 93 (parenthetic_expression -> RPAREN expression RPAREN .)
    EXCEPT          reduce using rule 93 (parenthetic_expression -> RPAREN expression RPAREN .)
    ORDER           reduce using rule 93 (parenthetic_expression -> RPAREN expression RPAREN .)
    LIMIT           reduce using rule 93 (parenthetic_expression -> RPAREN expression RPAREN .)
    $end            reduce using rule 93 (parenthetic_expression -> RPAREN expression RPAREN .)
    RPAREN          reduce using rule 93 (parenthetic_expression -> RPAREN expression RPAREN .)
    ASC             reduce using rule 93 (parenthetic_expression -> RPAREN expression RPAREN .)
    DESC            reduce using rule 93 (parenthetic_expression -> RPAREN expression RPAREN .)
    NULLS           reduce using rule 93 (parenthetic_expression -> RPAREN expression RPAREN .)
    THEN            reduce using rule 93 (parenthetic_expression -> RPAREN expression RPAREN .)
    GROUP           reduce using rule 93 (parenthetic_expression -> RPAREN expression RPAREN .)
    HAVING          reduce using rule 93 (parenthetic_expression -> RPAREN expression RPAREN .)
    CROSS           reduce using rule 93 (parenthetic_expression -> RPAREN expression RPAREN .)
    NATURAL         reduce using rule 93 (parenthetic_expression -> RPAREN expression RPAREN .)
    INNER           reduce using rule 93 (parenthetic_expression -> RPAREN expression RPAREN .)
    LEFT            reduce using rule 93 (parenthetic_expression -> RPAREN expression RPAREN .)
    RIGHT           reduce using rule 93 (parenthetic_expression -> RPAREN expression RPAREN .)
    FULL            reduce using rule 93 (parenthetic_expression -> RPAREN expression RPAREN .)
    JOIN            reduce using rule 93 (parenthetic_expression -> RPAREN expression RPAREN .)
    WHERE           reduce using rule 93 (parenthetic_expression -> RPAREN expression RPAREN .)
    ON              reduce using rule 93 (parenthetic_expression -> RPAREN expression RPAREN .)
    USING           reduce using rule 93 (parenthetic_expression -> RPAREN expression RPAREN .)


state 171

    (8) sort_items -> sort_items COMMA . sort_item
    (9) sort_item -> . expression order_opt null_ordering_opt
    (84) expression -> . search_condition
    (85) search_condition -> . boolean_term
    (86) search_condition -> . search_condition OR boolean_term
    (87) boolean_term -> . boolean_factor
    (88) boolean_term -> . boolean_term AND boolean_factor
    (89) boolean_factor -> . not_opt boolean_test
    (161) not_opt -> . NOT
    (162) not_opt -> . empty
    (194) empty -> .

    NOT             shift and go to state 18
    RPAREN          reduce using rule 194 (empty -> .)
    EXISTS          reduce using rule 194 (empty -> .)
    PLUS            reduce using rule 194 (empty -> .)
    MINUS           reduce using rule 194 (empty -> .)
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    search_condition               shift and go to state 20
    sort_item                      shift and go to state 203
    boolean_factor                 shift and go to state 16
    boolean_term                   shift and go to state 23
    empty                          shift and go to state 17
    not_opt                        shift and go to state 19
    expression                     shift and go to state 133

state 172

    (11) order_opt -> DESC .

    NULLS           reduce using rule 11 (order_opt -> DESC .)
    COMMA           reduce using rule 11 (order_opt -> DESC .)
    LIMIT           reduce using rule 11 (order_opt -> DESC .)
    $end            reduce using rule 11 (order_opt -> DESC .)
    RPAREN          reduce using rule 11 (order_opt -> DESC .)


state 173

    (12) order_opt -> empty .

    NULLS           reduce using rule 12 (order_opt -> empty .)
    COMMA           reduce using rule 12 (order_opt -> empty .)
    LIMIT           reduce using rule 12 (order_opt -> empty .)
    $end            reduce using rule 12 (order_opt -> empty .)
    RPAREN          reduce using rule 12 (order_opt -> empty .)


state 174

    (9) sort_item -> expression order_opt . null_ordering_opt
    (13) null_ordering_opt -> . NULLS FIRST
    (14) null_ordering_opt -> . NULLS LAST
    (15) null_ordering_opt -> . empty
    (194) empty -> .

    NULLS           shift and go to state 206
    COMMA           reduce using rule 194 (empty -> .)
    LIMIT           reduce using rule 194 (empty -> .)
    $end            reduce using rule 194 (empty -> .)
    RPAREN          reduce using rule 194 (empty -> .)

    null_ordering_opt              shift and go to state 205
    empty                          shift and go to state 204

state 175

    (10) order_opt -> ASC .

    NULLS           reduce using rule 10 (order_opt -> ASC .)
    COMMA           reduce using rule 10 (order_opt -> ASC .)
    LIMIT           reduce using rule 10 (order_opt -> ASC .)
    $end            reduce using rule 10 (order_opt -> ASC .)
    RPAREN          reduce using rule 10 (order_opt -> ASC .)


state 176

    (82) alias_opt -> empty .
    (160) as_opt -> empty .

    CROSS           reduce using rule 82 (alias_opt -> empty .)
    NATURAL         reduce using rule 82 (alias_opt -> empty .)
    INNER           reduce using rule 82 (alias_opt -> empty .)
    LEFT            reduce using rule 82 (alias_opt -> empty .)
    RIGHT           reduce using rule 82 (alias_opt -> empty .)
    FULL            reduce using rule 82 (alias_opt -> empty .)
    JOIN            reduce using rule 82 (alias_opt -> empty .)
    COMMA           reduce using rule 82 (alias_opt -> empty .)
    WHERE           reduce using rule 82 (alias_opt -> empty .)
    GROUP           reduce using rule 82 (alias_opt -> empty .)
    HAVING          reduce using rule 82 (alias_opt -> empty .)
    INTERSECT       reduce using rule 82 (alias_opt -> empty .)
    UNION           reduce using rule 82 (alias_opt -> empty .)
    EXCEPT          reduce using rule 82 (alias_opt -> empty .)
    ORDER           reduce using rule 82 (alias_opt -> empty .)
    LIMIT           reduce using rule 82 (alias_opt -> empty .)
    $end            reduce using rule 82 (alias_opt -> empty .)
    RPAREN          reduce using rule 82 (alias_opt -> empty .)
    ON              reduce using rule 82 (alias_opt -> empty .)
    USING           reduce using rule 82 (alias_opt -> empty .)
    FROM            reduce using rule 82 (alias_opt -> empty .)
    IDENTIFIER      reduce using rule 160 (as_opt -> empty .)
    DIGIT_IDENTIFIER reduce using rule 160 (as_opt -> empty .)
    QUOTED_IDENTIFIER reduce using rule 160 (as_opt -> empty .)
    BACKQUOTED_IDENTIFIER reduce using rule 160 (as_opt -> empty .)
    NON_RESERVED    reduce using rule 160 (as_opt -> empty .)


state 177

    (83) alias -> as_opt . identifier
    (185) identifier -> . IDENTIFIER
    (186) identifier -> . quoted_identifier
    (187) identifier -> . non_reserved
    (188) identifier -> . DIGIT_IDENTIFIER
    (190) quoted_identifier -> . QUOTED_IDENTIFIER
    (191) quoted_identifier -> . BACKQUOTED_IDENTIFIER
    (189) non_reserved -> . NON_RESERVED

    IDENTIFIER      shift and go to state 27
    DIGIT_IDENTIFIER shift and go to state 26
    QUOTED_IDENTIFIER shift and go to state 24
    BACKQUOTED_IDENTIFIER shift and go to state 31
    NON_RESERVED    shift and go to state 30

    non_reserved                   shift and go to state 28
    quoted_identifier              shift and go to state 25
    identifier                     shift and go to state 207

state 178

    (81) alias_opt -> alias .

    CROSS           reduce using rule 81 (alias_opt -> alias .)
    NATURAL         reduce using rule 81 (alias_opt -> alias .)
    INNER           reduce using rule 81 (alias_opt -> alias .)
    LEFT            reduce using rule 81 (alias_opt -> alias .)
    RIGHT           reduce using rule 81 (alias_opt -> alias .)
    FULL            reduce using rule 81 (alias_opt -> alias .)
    JOIN            reduce using rule 81 (alias_opt -> alias .)
    COMMA           reduce using rule 81 (alias_opt -> alias .)
    WHERE           reduce using rule 81 (alias_opt -> alias .)
    GROUP           reduce using rule 81 (alias_opt -> alias .)
    HAVING          reduce using rule 81 (alias_opt -> alias .)
    INTERSECT       reduce using rule 81 (alias_opt -> alias .)
    UNION           reduce using rule 81 (alias_opt -> alias .)
    EXCEPT          reduce using rule 81 (alias_opt -> alias .)
    ORDER           reduce using rule 81 (alias_opt -> alias .)
    LIMIT           reduce using rule 81 (alias_opt -> alias .)
    $end            reduce using rule 81 (alias_opt -> alias .)
    RPAREN          reduce using rule 81 (alias_opt -> alias .)
    ON              reduce using rule 81 (alias_opt -> alias .)
    USING           reduce using rule 81 (alias_opt -> alias .)
    FROM            reduce using rule 81 (alias_opt -> alias .)


state 179

    (51) derived_column -> value_expression alias_opt .

    COMMA           reduce using rule 51 (derived_column -> value_expression alias_opt .)
    FROM            reduce using rule 51 (derived_column -> value_expression alias_opt .)
    INTERSECT       reduce using rule 51 (derived_column -> value_expression alias_opt .)
    UNION           reduce using rule 51 (derived_column -> value_expression alias_opt .)
    EXCEPT          reduce using rule 51 (derived_column -> value_expression alias_opt .)
    ORDER           reduce using rule 51 (derived_column -> value_expression alias_opt .)
    LIMIT           reduce using rule 51 (derived_column -> value_expression alias_opt .)
    $end            reduce using rule 51 (derived_column -> value_expression alias_opt .)
    RPAREN          reduce using rule 51 (derived_column -> value_expression alias_opt .)


state 180

    (159) as_opt -> AS .

    IDENTIFIER      reduce using rule 159 (as_opt -> AS .)
    DIGIT_IDENTIFIER reduce using rule 159 (as_opt -> AS .)
    QUOTED_IDENTIFIER reduce using rule 159 (as_opt -> AS .)
    BACKQUOTED_IDENTIFIER reduce using rule 159 (as_opt -> AS .)
    NON_RESERVED    reduce using rule 159 (as_opt -> AS .)


state 181

    (33) query_specification -> SELECT set_quantifier_opt adql_top_opt select_items table_expression_opt .

    INTERSECT       reduce using rule 33 (query_specification -> SELECT set_quantifier_opt adql_top_opt select_items table_expression_opt .)
    UNION           reduce using rule 33 (query_specification -> SELECT set_quantifier_opt adql_top_opt select_items table_expression_opt .)
    EXCEPT          reduce using rule 33 (query_specification -> SELECT set_quantifier_opt adql_top_opt select_items table_expression_opt .)
    ORDER           reduce using rule 33 (query_specification -> SELECT set_quantifier_opt adql_top_opt select_items table_expression_opt .)
    LIMIT           reduce using rule 33 (query_specification -> SELECT set_quantifier_opt adql_top_opt select_items table_expression_opt .)
    RPAREN          reduce using rule 33 (query_specification -> SELECT set_quantifier_opt adql_top_opt select_items table_expression_opt .)
    $end            reduce using rule 33 (query_specification -> SELECT set_quantifier_opt adql_top_opt select_items table_expression_opt .)


state 182

    (54) table_expression_opt -> empty .

    INTERSECT       reduce using rule 54 (table_expression_opt -> empty .)
    UNION           reduce using rule 54 (table_expression_opt -> empty .)
    EXCEPT          reduce using rule 54 (table_expression_opt -> empty .)
    ORDER           reduce using rule 54 (table_expression_opt -> empty .)
    LIMIT           reduce using rule 54 (table_expression_opt -> empty .)
    $end            reduce using rule 54 (table_expression_opt -> empty .)
    RPAREN          reduce using rule 54 (table_expression_opt -> empty .)


state 183

    (53) table_expression_opt -> FROM . relations where_opt group_by_opt having_opt
    (55) relations -> . relations COMMA table_reference
    (56) relations -> . table_reference
    (57) table_reference -> . table_primary
    (58) table_reference -> . join_relation
    (59) table_primary -> . aliased_relation
    (60) table_primary -> . derived_table
    (61) table_primary -> . LPAREN join_relation RPAREN
    (62) join_relation -> . cross_join
    (63) join_relation -> . qualified_join
    (64) join_relation -> . natural_join
    (79) aliased_relation -> . qualified_name alias_opt
    (80) derived_table -> . subquery alias
    (65) cross_join -> . table_reference CROSS JOIN aliased_relation
    (66) qualified_join -> . table_reference join_type JOIN table_reference join_criteria
    (67) natural_join -> . table_reference NATURAL join_type JOIN aliased_relation
    (183) qualified_name -> . qualified_name PERIOD identifier
    (184) qualified_name -> . identifier
    (2) subquery -> . LPAREN query RPAREN
    (185) identifier -> . IDENTIFIER
    (186) identifier -> . quoted_identifier
    (187) identifier -> . non_reserved
    (188) identifier -> . DIGIT_IDENTIFIER
    (190) quoted_identifier -> . QUOTED_IDENTIFIER
    (191) quoted_identifier -> . BACKQUOTED_IDENTIFIER
    (189) non_reserved -> . NON_RESERVED

    LPAREN          shift and go to state 216
    IDENTIFIER      shift and go to state 27
    DIGIT_IDENTIFIER shift and go to state 26
    QUOTED_IDENTIFIER shift and go to state 24
    BACKQUOTED_IDENTIFIER shift and go to state 31
    NON_RESERVED    shift and go to state 30

    join_relation                  shift and go to state 208
    table_reference                shift and go to state 209
    qualified_join                 shift and go to state 210
    derived_table                  shift and go to state 211
    subquery                       shift and go to state 212
    quoted_identifier              shift and go to state 25
    identifier                     shift and go to state 32
    cross_join                     shift and go to state 214
    non_reserved                   shift and go to state 28
    qualified_name                 shift and go to state 215
    natural_join                   shift and go to state 217
    aliased_relation               shift and go to state 218
    relations                      shift and go to state 213
    table_primary                  shift and go to state 219

state 184

    (48) select_items -> select_items COMMA . select_item
    (49) select_item -> . derived_column
    (50) select_item -> . all_columns
    (51) derived_column -> . value_expression alias_opt
    (52) all_columns -> . ASTERISK
    (109) value_expression -> . value_expression PLUS term
    (110) value_expression -> . value_expression MINUS term
    (111) value_expression -> . term
    (112) term -> . term ASTERISK factor
    (113) term -> . term SLASH factor
    (114) term -> . term PERCENT factor
    (115) term -> . term CONCAT factor
    (116) term -> . factor
    (117) factor -> . sign_opt primary_expression
    (174) sign_opt -> . sign
    (175) sign_opt -> . empty
    (176) sign -> . PLUS
    (177) sign -> . MINUS
    (194) empty -> .

    ASTERISK        shift and go to state 139
    PLUS            shift and go to state 63
    MINUS           shift and go to state 47
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    all_columns                    shift and go to state 137
    sign_opt                       shift and go to state 49
    value_expression               shift and go to state 138
    factor                         shift and go to state 57
    select_item                    shift and go to state 220
    term                           shift and go to state 54
    empty                          shift and go to state 55
    sign                           shift and go to state 56
    derived_column                 shift and go to state 140

state 185

    (107) null_predicate -> value_expression IS not_opt NULL .

    AND             reduce using rule 107 (null_predicate -> value_expression IS not_opt NULL .)
    OR              reduce using rule 107 (null_predicate -> value_expression IS not_opt NULL .)
    COMMA           reduce using rule 107 (null_predicate -> value_expression IS not_opt NULL .)
    INTERSECT       reduce using rule 107 (null_predicate -> value_expression IS not_opt NULL .)
    UNION           reduce using rule 107 (null_predicate -> value_expression IS not_opt NULL .)
    EXCEPT          reduce using rule 107 (null_predicate -> value_expression IS not_opt NULL .)
    ORDER           reduce using rule 107 (null_predicate -> value_expression IS not_opt NULL .)
    LIMIT           reduce using rule 107 (null_predicate -> value_expression IS not_opt NULL .)
    $end            reduce using rule 107 (null_predicate -> value_expression IS not_opt NULL .)
    RPAREN          reduce using rule 107 (null_predicate -> value_expression IS not_opt NULL .)
    ASC             reduce using rule 107 (null_predicate -> value_expression IS not_opt NULL .)
    DESC            reduce using rule 107 (null_predicate -> value_expression IS not_opt NULL .)
    NULLS           reduce using rule 107 (null_predicate -> value_expression IS not_opt NULL .)
    THEN            reduce using rule 107 (null_predicate -> value_expression IS not_opt NULL .)
    GROUP           reduce using rule 107 (null_predicate -> value_expression IS not_opt NULL .)
    HAVING          reduce using rule 107 (null_predicate -> value_expression IS not_opt NULL .)
    CROSS           reduce using rule 107 (null_predicate -> value_expression IS not_opt NULL .)
    NATURAL         reduce using rule 107 (null_predicate -> value_expression IS not_opt NULL .)
    INNER           reduce using rule 107 (null_predicate -> value_expression IS not_opt NULL .)
    LEFT            reduce using rule 107 (null_predicate -> value_expression IS not_opt NULL .)
    RIGHT           reduce using rule 107 (null_predicate -> value_expression IS not_opt NULL .)
    FULL            reduce using rule 107 (null_predicate -> value_expression IS not_opt NULL .)
    JOIN            reduce using rule 107 (null_predicate -> value_expression IS not_opt NULL .)
    WHERE           reduce using rule 107 (null_predicate -> value_expression IS not_opt NULL .)
    ON              reduce using rule 107 (null_predicate -> value_expression IS not_opt NULL .)
    USING           reduce using rule 107 (null_predicate -> value_expression IS not_opt NULL .)


state 186

    (101) between_predicate -> value_expression not_opt BETWEEN value_expression . AND value_expression
    (109) value_expression -> value_expression . PLUS term
    (110) value_expression -> value_expression . MINUS term

    AND             shift and go to state 221
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83


state 187

    (106) like_predicate -> value_expression not_opt LIKE value_expression .
    (109) value_expression -> value_expression . PLUS term
    (110) value_expression -> value_expression . MINUS term

    AND             reduce using rule 106 (like_predicate -> value_expression not_opt LIKE value_expression .)
    OR              reduce using rule 106 (like_predicate -> value_expression not_opt LIKE value_expression .)
    COMMA           reduce using rule 106 (like_predicate -> value_expression not_opt LIKE value_expression .)
    INTERSECT       reduce using rule 106 (like_predicate -> value_expression not_opt LIKE value_expression .)
    UNION           reduce using rule 106 (like_predicate -> value_expression not_opt LIKE value_expression .)
    EXCEPT          reduce using rule 106 (like_predicate -> value_expression not_opt LIKE value_expression .)
    ORDER           reduce using rule 106 (like_predicate -> value_expression not_opt LIKE value_expression .)
    LIMIT           reduce using rule 106 (like_predicate -> value_expression not_opt LIKE value_expression .)
    $end            reduce using rule 106 (like_predicate -> value_expression not_opt LIKE value_expression .)
    RPAREN          reduce using rule 106 (like_predicate -> value_expression not_opt LIKE value_expression .)
    ASC             reduce using rule 106 (like_predicate -> value_expression not_opt LIKE value_expression .)
    DESC            reduce using rule 106 (like_predicate -> value_expression not_opt LIKE value_expression .)
    NULLS           reduce using rule 106 (like_predicate -> value_expression not_opt LIKE value_expression .)
    THEN            reduce using rule 106 (like_predicate -> value_expression not_opt LIKE value_expression .)
    GROUP           reduce using rule 106 (like_predicate -> value_expression not_opt LIKE value_expression .)
    HAVING          reduce using rule 106 (like_predicate -> value_expression not_opt LIKE value_expression .)
    CROSS           reduce using rule 106 (like_predicate -> value_expression not_opt LIKE value_expression .)
    NATURAL         reduce using rule 106 (like_predicate -> value_expression not_opt LIKE value_expression .)
    INNER           reduce using rule 106 (like_predicate -> value_expression not_opt LIKE value_expression .)
    LEFT            reduce using rule 106 (like_predicate -> value_expression not_opt LIKE value_expression .)
    RIGHT           reduce using rule 106 (like_predicate -> value_expression not_opt LIKE value_expression .)
    FULL            reduce using rule 106 (like_predicate -> value_expression not_opt LIKE value_expression .)
    JOIN            reduce using rule 106 (like_predicate -> value_expression not_opt LIKE value_expression .)
    WHERE           reduce using rule 106 (like_predicate -> value_expression not_opt LIKE value_expression .)
    ON              reduce using rule 106 (like_predicate -> value_expression not_opt LIKE value_expression .)
    USING           reduce using rule 106 (like_predicate -> value_expression not_opt LIKE value_expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83


state 188

    (103) in_value -> LPAREN . in_expressions RPAREN
    (104) in_expressions -> . value_expression
    (105) in_expressions -> . in_expressions COMMA value_expression
    (109) value_expression -> . value_expression PLUS term
    (110) value_expression -> . value_expression MINUS term
    (111) value_expression -> . term
    (112) term -> . term ASTERISK factor
    (113) term -> . term SLASH factor
    (114) term -> . term PERCENT factor
    (115) term -> . term CONCAT factor
    (116) term -> . factor
    (117) factor -> . sign_opt primary_expression
    (174) sign_opt -> . sign
    (175) sign_opt -> . empty
    (176) sign -> . PLUS
    (177) sign -> . MINUS
    (194) empty -> .

    PLUS            shift and go to state 63
    MINUS           shift and go to state 47
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    term                           shift and go to state 54
    sign_opt                       shift and go to state 49
    value_expression               shift and go to state 223
    factor                         shift and go to state 57
    empty                          shift and go to state 55
    in_expressions                 shift and go to state 222
    sign                           shift and go to state 56

state 189

    (102) in_predicate -> value_expression not_opt IN in_value .

    AND             reduce using rule 102 (in_predicate -> value_expression not_opt IN in_value .)
    OR              reduce using rule 102 (in_predicate -> value_expression not_opt IN in_value .)
    COMMA           reduce using rule 102 (in_predicate -> value_expression not_opt IN in_value .)
    INTERSECT       reduce using rule 102 (in_predicate -> value_expression not_opt IN in_value .)
    UNION           reduce using rule 102 (in_predicate -> value_expression not_opt IN in_value .)
    EXCEPT          reduce using rule 102 (in_predicate -> value_expression not_opt IN in_value .)
    ORDER           reduce using rule 102 (in_predicate -> value_expression not_opt IN in_value .)
    LIMIT           reduce using rule 102 (in_predicate -> value_expression not_opt IN in_value .)
    $end            reduce using rule 102 (in_predicate -> value_expression not_opt IN in_value .)
    RPAREN          reduce using rule 102 (in_predicate -> value_expression not_opt IN in_value .)
    ASC             reduce using rule 102 (in_predicate -> value_expression not_opt IN in_value .)
    DESC            reduce using rule 102 (in_predicate -> value_expression not_opt IN in_value .)
    NULLS           reduce using rule 102 (in_predicate -> value_expression not_opt IN in_value .)
    THEN            reduce using rule 102 (in_predicate -> value_expression not_opt IN in_value .)
    GROUP           reduce using rule 102 (in_predicate -> value_expression not_opt IN in_value .)
    HAVING          reduce using rule 102 (in_predicate -> value_expression not_opt IN in_value .)
    CROSS           reduce using rule 102 (in_predicate -> value_expression not_opt IN in_value .)
    NATURAL         reduce using rule 102 (in_predicate -> value_expression not_opt IN in_value .)
    INNER           reduce using rule 102 (in_predicate -> value_expression not_opt IN in_value .)
    LEFT            reduce using rule 102 (in_predicate -> value_expression not_opt IN in_value .)
    RIGHT           reduce using rule 102 (in_predicate -> value_expression not_opt IN in_value .)
    FULL            reduce using rule 102 (in_predicate -> value_expression not_opt IN in_value .)
    JOIN            reduce using rule 102 (in_predicate -> value_expression not_opt IN in_value .)
    WHERE           reduce using rule 102 (in_predicate -> value_expression not_opt IN in_value .)
    ON              reduce using rule 102 (in_predicate -> value_expression not_opt IN in_value .)
    USING           reduce using rule 102 (in_predicate -> value_expression not_opt IN in_value .)


state 190

    (180) integer_param_opt -> LPAREN INTEGER . RPAREN

    RPAREN          shift and go to state 224


state 191

    (135) simple_case -> CASE value_expression when_clauses . else_opt END
    (137) when_clauses -> when_clauses . when_clause
    (140) else_opt -> . ELSE value_expression
    (141) else_opt -> . empty
    (139) when_clause -> . WHEN search_condition THEN value_expression
    (194) empty -> .

    ELSE            shift and go to state 193
    WHEN            shift and go to state 156
    END             reduce using rule 194 (empty -> .)

    empty                          shift and go to state 194
    when_clause                    shift and go to state 195
    else_opt                       shift and go to state 225

state 192

    (139) when_clause -> WHEN search_condition . THEN value_expression
    (86) search_condition -> search_condition . OR boolean_term

    THEN            shift and go to state 226
    OR              shift and go to state 64


state 193

    (140) else_opt -> ELSE . value_expression
    (109) value_expression -> . value_expression PLUS term
    (110) value_expression -> . value_expression MINUS term
    (111) value_expression -> . term
    (112) term -> . term ASTERISK factor
    (113) term -> . term SLASH factor
    (114) term -> . term PERCENT factor
    (115) term -> . term CONCAT factor
    (116) term -> . factor
    (117) factor -> . sign_opt primary_expression
    (174) sign_opt -> . sign
    (175) sign_opt -> . empty
    (176) sign -> . PLUS
    (177) sign -> . MINUS
    (194) empty -> .

    PLUS            shift and go to state 63
    MINUS           shift and go to state 47
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    term                           shift and go to state 54
    sign_opt                       shift and go to state 49
    factor                         shift and go to state 57
    empty                          shift and go to state 55
    value_expression               shift and go to state 227
    sign                           shift and go to state 56

state 194

    (141) else_opt -> empty .

    END             reduce using rule 141 (else_opt -> empty .)


state 195

    (137) when_clauses -> when_clauses when_clause .

    ELSE            reduce using rule 137 (when_clauses -> when_clauses when_clause .)
    WHEN            reduce using rule 137 (when_clauses -> when_clauses when_clause .)
    END             reduce using rule 137 (when_clauses -> when_clauses when_clause .)


state 196

    (136) searched_case -> CASE when_clauses else_opt . END

    END             shift and go to state 228


state 197

    (143) call_list -> value_expression .
    (109) value_expression -> value_expression . PLUS term
    (110) value_expression -> value_expression . MINUS term

    RPAREN          reduce using rule 143 (call_list -> value_expression .)
    COMMA           reduce using rule 143 (call_list -> value_expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83


state 198

    (132) function_call -> qualified_name LPAREN call_list . RPAREN
    (142) call_list -> call_list . COMMA value_expression

    RPAREN          shift and go to state 229
    COMMA           shift and go to state 230


state 199

    (165) interval -> INTERVAL sign_opt STRING . interval_field interval_end_opt
    (168) interval_field -> . YEAR
    (169) interval_field -> . MONTH
    (170) interval_field -> . DAY
    (171) interval_field -> . HOUR
    (172) interval_field -> . MINUTE
    (173) interval_field -> . SECOND

    YEAR            shift and go to state 235
    MONTH           shift and go to state 234
    DAY             shift and go to state 233
    HOUR            shift and go to state 231
    MINUTE          shift and go to state 237
    SECOND          shift and go to state 232

    interval_field                 shift and go to state 236

state 200

    (2) subquery -> LPAREN query RPAREN .

    AS              reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    IDENTIFIER      reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    DIGIT_IDENTIFIER reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    QUOTED_IDENTIFIER reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    BACKQUOTED_IDENTIFIER reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    NON_RESERVED    reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    ASTERISK        reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    SLASH           reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    PERCENT         reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    CONCAT          reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    IS              reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    PLUS            reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    MINUS           reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    EQ              reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    NE              reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    LT              reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    LE              reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    GT              reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    GE              reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    NOT             reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    BETWEEN         reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    IN              reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    LIKE            reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    COMMA           reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    FROM            reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    INTERSECT       reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    UNION           reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    EXCEPT          reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    ORDER           reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    LIMIT           reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    $end            reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    RPAREN          reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    AND             reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    OR              reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    ASC             reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    DESC            reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    NULLS           reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    THEN            reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    GROUP           reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    HAVING          reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    CROSS           reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    NATURAL         reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    INNER           reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    LEFT            reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    RIGHT           reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    FULL            reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    JOIN            reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    WHERE           reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    ON              reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    USING           reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    WHEN            reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    END             reduce using rule 2 (subquery -> LPAREN query RPAREN .)
    ELSE            reduce using rule 2 (subquery -> LPAREN query RPAREN .)


state 201

    (25) nonjoin_query_primary -> LPAREN query_term . RPAREN
    (20) query_term -> query_term . UNION set_quantifier_opt query_term_intersect
    (21) query_term -> query_term . EXCEPT set_quantifier_opt query_term_intersect
    (4) query_no_with -> query_term . order_by_opt limit_opt
    (5) order_by_opt -> . ORDER BY sort_items
    (6) order_by_opt -> . empty
    (194) empty -> .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 74
    UNION           shift and go to state 33
    EXCEPT          shift and go to state 35
    ORDER           shift and go to state 36
    LIMIT           reduce using rule 194 (empty -> .)

  ! RPAREN          [ reduce using rule 194 (empty -> .) ]

    empty                          shift and go to state 34
    order_by_opt                   shift and go to state 37

state 202

    (120) parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .

    ASTERISK        reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    SLASH           reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    PERCENT         reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    CONCAT          reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    IS              reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    PLUS            reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    MINUS           reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    EQ              reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    NE              reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    LT              reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    LE              reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    GT              reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    GE              reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    NOT             reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    BETWEEN         reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    IN              reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    LIKE            reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    AS              reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    IDENTIFIER      reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    DIGIT_IDENTIFIER reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    QUOTED_IDENTIFIER reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    BACKQUOTED_IDENTIFIER reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    NON_RESERVED    reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    COMMA           reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    FROM            reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    INTERSECT       reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    UNION           reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    EXCEPT          reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    ORDER           reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    LIMIT           reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    $end            reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    RPAREN          reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    AND             reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    OR              reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    ASC             reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    DESC            reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    NULLS           reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    THEN            reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    GROUP           reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    HAVING          reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    CROSS           reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    NATURAL         reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    INNER           reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    LEFT            reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    RIGHT           reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    FULL            reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    JOIN            reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    WHERE           reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    ON              reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    USING           reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    WHEN            reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    END             reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)
    ELSE            reduce using rule 120 (parenthetic_primary_expression -> LPAREN base_primary_expression RPAREN .)


state 203

    (8) sort_items -> sort_items COMMA sort_item .

    COMMA           reduce using rule 8 (sort_items -> sort_items COMMA sort_item .)
    LIMIT           reduce using rule 8 (sort_items -> sort_items COMMA sort_item .)
    $end            reduce using rule 8 (sort_items -> sort_items COMMA sort_item .)
    RPAREN          reduce using rule 8 (sort_items -> sort_items COMMA sort_item .)


state 204

    (15) null_ordering_opt -> empty .

    COMMA           reduce using rule 15 (null_ordering_opt -> empty .)
    LIMIT           reduce using rule 15 (null_ordering_opt -> empty .)
    $end            reduce using rule 15 (null_ordering_opt -> empty .)
    RPAREN          reduce using rule 15 (null_ordering_opt -> empty .)


state 205

    (9) sort_item -> expression order_opt null_ordering_opt .

    COMMA           reduce using rule 9 (sort_item -> expression order_opt null_ordering_opt .)
    LIMIT           reduce using rule 9 (sort_item -> expression order_opt null_ordering_opt .)
    $end            reduce using rule 9 (sort_item -> expression order_opt null_ordering_opt .)
    RPAREN          reduce using rule 9 (sort_item -> expression order_opt null_ordering_opt .)


state 206

    (13) null_ordering_opt -> NULLS . FIRST
    (14) null_ordering_opt -> NULLS . LAST

    FIRST           shift and go to state 239
    LAST            shift and go to state 238


state 207

    (83) alias -> as_opt identifier .

    CROSS           reduce using rule 83 (alias -> as_opt identifier .)
    NATURAL         reduce using rule 83 (alias -> as_opt identifier .)
    INNER           reduce using rule 83 (alias -> as_opt identifier .)
    LEFT            reduce using rule 83 (alias -> as_opt identifier .)
    RIGHT           reduce using rule 83 (alias -> as_opt identifier .)
    FULL            reduce using rule 83 (alias -> as_opt identifier .)
    JOIN            reduce using rule 83 (alias -> as_opt identifier .)
    COMMA           reduce using rule 83 (alias -> as_opt identifier .)
    WHERE           reduce using rule 83 (alias -> as_opt identifier .)
    GROUP           reduce using rule 83 (alias -> as_opt identifier .)
    HAVING          reduce using rule 83 (alias -> as_opt identifier .)
    INTERSECT       reduce using rule 83 (alias -> as_opt identifier .)
    UNION           reduce using rule 83 (alias -> as_opt identifier .)
    EXCEPT          reduce using rule 83 (alias -> as_opt identifier .)
    ORDER           reduce using rule 83 (alias -> as_opt identifier .)
    LIMIT           reduce using rule 83 (alias -> as_opt identifier .)
    $end            reduce using rule 83 (alias -> as_opt identifier .)
    RPAREN          reduce using rule 83 (alias -> as_opt identifier .)
    ON              reduce using rule 83 (alias -> as_opt identifier .)
    USING           reduce using rule 83 (alias -> as_opt identifier .)
    FROM            reduce using rule 83 (alias -> as_opt identifier .)


state 208

    (58) table_reference -> join_relation .

    CROSS           reduce using rule 58 (table_reference -> join_relation .)
    NATURAL         reduce using rule 58 (table_reference -> join_relation .)
    INNER           reduce using rule 58 (table_reference -> join_relation .)
    LEFT            reduce using rule 58 (table_reference -> join_relation .)
    RIGHT           reduce using rule 58 (table_reference -> join_relation .)
    FULL            reduce using rule 58 (table_reference -> join_relation .)
    JOIN            reduce using rule 58 (table_reference -> join_relation .)
    COMMA           reduce using rule 58 (table_reference -> join_relation .)
    WHERE           reduce using rule 58 (table_reference -> join_relation .)
    GROUP           reduce using rule 58 (table_reference -> join_relation .)
    HAVING          reduce using rule 58 (table_reference -> join_relation .)
    INTERSECT       reduce using rule 58 (table_reference -> join_relation .)
    UNION           reduce using rule 58 (table_reference -> join_relation .)
    EXCEPT          reduce using rule 58 (table_reference -> join_relation .)
    ORDER           reduce using rule 58 (table_reference -> join_relation .)
    LIMIT           reduce using rule 58 (table_reference -> join_relation .)
    $end            reduce using rule 58 (table_reference -> join_relation .)
    RPAREN          reduce using rule 58 (table_reference -> join_relation .)
    ON              reduce using rule 58 (table_reference -> join_relation .)
    USING           reduce using rule 58 (table_reference -> join_relation .)


state 209

    (56) relations -> table_reference .
    (65) cross_join -> table_reference . CROSS JOIN aliased_relation
    (66) qualified_join -> table_reference . join_type JOIN table_reference join_criteria
    (67) natural_join -> table_reference . NATURAL join_type JOIN aliased_relation
    (68) join_type -> . INNER
    (69) join_type -> . LEFT outer_opt
    (70) join_type -> . RIGHT outer_opt
    (71) join_type -> . FULL outer_opt
    (72) join_type -> . empty
    (194) empty -> .

    COMMA           reduce using rule 56 (relations -> table_reference .)
    WHERE           reduce using rule 56 (relations -> table_reference .)
    GROUP           reduce using rule 56 (relations -> table_reference .)
    HAVING          reduce using rule 56 (relations -> table_reference .)
    INTERSECT       reduce using rule 56 (relations -> table_reference .)
    UNION           reduce using rule 56 (relations -> table_reference .)
    EXCEPT          reduce using rule 56 (relations -> table_reference .)
    ORDER           reduce using rule 56 (relations -> table_reference .)
    LIMIT           reduce using rule 56 (relations -> table_reference .)
    $end            reduce using rule 56 (relations -> table_reference .)
    RPAREN          reduce using rule 56 (relations -> table_reference .)
    CROSS           shift and go to state 246
    NATURAL         shift and go to state 245
    INNER           shift and go to state 247
    LEFT            shift and go to state 244
    RIGHT           shift and go to state 240
    FULL            shift and go to state 242
    JOIN            reduce using rule 194 (empty -> .)

    empty                          shift and go to state 241
    join_type                      shift and go to state 243

state 210

    (63) join_relation -> qualified_join .

    CROSS           reduce using rule 63 (join_relation -> qualified_join .)
    NATURAL         reduce using rule 63 (join_relation -> qualified_join .)
    INNER           reduce using rule 63 (join_relation -> qualified_join .)
    LEFT            reduce using rule 63 (join_relation -> qualified_join .)
    RIGHT           reduce using rule 63 (join_relation -> qualified_join .)
    FULL            reduce using rule 63 (join_relation -> qualified_join .)
    JOIN            reduce using rule 63 (join_relation -> qualified_join .)
    COMMA           reduce using rule 63 (join_relation -> qualified_join .)
    WHERE           reduce using rule 63 (join_relation -> qualified_join .)
    GROUP           reduce using rule 63 (join_relation -> qualified_join .)
    HAVING          reduce using rule 63 (join_relation -> qualified_join .)
    INTERSECT       reduce using rule 63 (join_relation -> qualified_join .)
    UNION           reduce using rule 63 (join_relation -> qualified_join .)
    EXCEPT          reduce using rule 63 (join_relation -> qualified_join .)
    ORDER           reduce using rule 63 (join_relation -> qualified_join .)
    LIMIT           reduce using rule 63 (join_relation -> qualified_join .)
    $end            reduce using rule 63 (join_relation -> qualified_join .)
    RPAREN          reduce using rule 63 (join_relation -> qualified_join .)
    ON              reduce using rule 63 (join_relation -> qualified_join .)
    USING           reduce using rule 63 (join_relation -> qualified_join .)


state 211

    (60) table_primary -> derived_table .

    CROSS           reduce using rule 60 (table_primary -> derived_table .)
    NATURAL         reduce using rule 60 (table_primary -> derived_table .)
    INNER           reduce using rule 60 (table_primary -> derived_table .)
    LEFT            reduce using rule 60 (table_primary -> derived_table .)
    RIGHT           reduce using rule 60 (table_primary -> derived_table .)
    FULL            reduce using rule 60 (table_primary -> derived_table .)
    JOIN            reduce using rule 60 (table_primary -> derived_table .)
    COMMA           reduce using rule 60 (table_primary -> derived_table .)
    WHERE           reduce using rule 60 (table_primary -> derived_table .)
    GROUP           reduce using rule 60 (table_primary -> derived_table .)
    HAVING          reduce using rule 60 (table_primary -> derived_table .)
    INTERSECT       reduce using rule 60 (table_primary -> derived_table .)
    UNION           reduce using rule 60 (table_primary -> derived_table .)
    EXCEPT          reduce using rule 60 (table_primary -> derived_table .)
    ORDER           reduce using rule 60 (table_primary -> derived_table .)
    LIMIT           reduce using rule 60 (table_primary -> derived_table .)
    $end            reduce using rule 60 (table_primary -> derived_table .)
    RPAREN          reduce using rule 60 (table_primary -> derived_table .)
    ON              reduce using rule 60 (table_primary -> derived_table .)
    USING           reduce using rule 60 (table_primary -> derived_table .)


state 212

    (80) derived_table -> subquery . alias
    (83) alias -> . as_opt identifier
    (159) as_opt -> . AS
    (160) as_opt -> . empty
    (194) empty -> .

    AS              shift and go to state 180
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)

    alias                          shift and go to state 248
    empty                          shift and go to state 249
    as_opt                         shift and go to state 177

state 213

    (53) table_expression_opt -> FROM relations . where_opt group_by_opt having_opt
    (55) relations -> relations . COMMA table_reference
    (36) where_opt -> . WHERE search_condition
    (37) where_opt -> . empty
    (194) empty -> .

    COMMA           shift and go to state 253
    WHERE           shift and go to state 252
    GROUP           reduce using rule 194 (empty -> .)
    HAVING          reduce using rule 194 (empty -> .)
    INTERSECT       reduce using rule 194 (empty -> .)
    UNION           reduce using rule 194 (empty -> .)
    EXCEPT          reduce using rule 194 (empty -> .)
    ORDER           reduce using rule 194 (empty -> .)
    LIMIT           reduce using rule 194 (empty -> .)
    $end            reduce using rule 194 (empty -> .)
    RPAREN          reduce using rule 194 (empty -> .)

    where_opt                      shift and go to state 250
    empty                          shift and go to state 251

state 214

    (62) join_relation -> cross_join .

    CROSS           reduce using rule 62 (join_relation -> cross_join .)
    NATURAL         reduce using rule 62 (join_relation -> cross_join .)
    INNER           reduce using rule 62 (join_relation -> cross_join .)
    LEFT            reduce using rule 62 (join_relation -> cross_join .)
    RIGHT           reduce using rule 62 (join_relation -> cross_join .)
    FULL            reduce using rule 62 (join_relation -> cross_join .)
    JOIN            reduce using rule 62 (join_relation -> cross_join .)
    COMMA           reduce using rule 62 (join_relation -> cross_join .)
    WHERE           reduce using rule 62 (join_relation -> cross_join .)
    GROUP           reduce using rule 62 (join_relation -> cross_join .)
    HAVING          reduce using rule 62 (join_relation -> cross_join .)
    INTERSECT       reduce using rule 62 (join_relation -> cross_join .)
    UNION           reduce using rule 62 (join_relation -> cross_join .)
    EXCEPT          reduce using rule 62 (join_relation -> cross_join .)
    ORDER           reduce using rule 62 (join_relation -> cross_join .)
    LIMIT           reduce using rule 62 (join_relation -> cross_join .)
    $end            reduce using rule 62 (join_relation -> cross_join .)
    RPAREN          reduce using rule 62 (join_relation -> cross_join .)
    ON              reduce using rule 62 (join_relation -> cross_join .)
    USING           reduce using rule 62 (join_relation -> cross_join .)


state 215

    (79) aliased_relation -> qualified_name . alias_opt
    (183) qualified_name -> qualified_name . PERIOD identifier
    (81) alias_opt -> . alias
    (82) alias_opt -> . empty
    (83) alias -> . as_opt identifier
    (194) empty -> .
    (159) as_opt -> . AS
    (160) as_opt -> . empty

    PERIOD          shift and go to state 67
    CROSS           reduce using rule 194 (empty -> .)
    NATURAL         reduce using rule 194 (empty -> .)
    INNER           reduce using rule 194 (empty -> .)
    LEFT            reduce using rule 194 (empty -> .)
    RIGHT           reduce using rule 194 (empty -> .)
    FULL            reduce using rule 194 (empty -> .)
    JOIN            reduce using rule 194 (empty -> .)
    COMMA           reduce using rule 194 (empty -> .)
    WHERE           reduce using rule 194 (empty -> .)
    GROUP           reduce using rule 194 (empty -> .)
    HAVING          reduce using rule 194 (empty -> .)
    INTERSECT       reduce using rule 194 (empty -> .)
    UNION           reduce using rule 194 (empty -> .)
    EXCEPT          reduce using rule 194 (empty -> .)
    ORDER           reduce using rule 194 (empty -> .)
    LIMIT           reduce using rule 194 (empty -> .)
    $end            reduce using rule 194 (empty -> .)
    RPAREN          reduce using rule 194 (empty -> .)
    ON              reduce using rule 194 (empty -> .)
    USING           reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    AS              shift and go to state 180

    empty                          shift and go to state 176
    as_opt                         shift and go to state 177
    alias_opt                      shift and go to state 254
    alias                          shift and go to state 178

state 216

    (61) table_primary -> LPAREN . join_relation RPAREN
    (2) subquery -> LPAREN . query RPAREN
    (62) join_relation -> . cross_join
    (63) join_relation -> . qualified_join
    (64) join_relation -> . natural_join
    (3) query -> . query_no_with
    (65) cross_join -> . table_reference CROSS JOIN aliased_relation
    (66) qualified_join -> . table_reference join_type JOIN table_reference join_criteria
    (67) natural_join -> . table_reference NATURAL join_type JOIN aliased_relation
    (4) query_no_with -> . query_term order_by_opt limit_opt
    (57) table_reference -> . table_primary
    (58) table_reference -> . join_relation
    (19) query_term -> . query_term_intersect
    (20) query_term -> . query_term UNION set_quantifier_opt query_term_intersect
    (21) query_term -> . query_term EXCEPT set_quantifier_opt query_term_intersect
    (59) table_primary -> . aliased_relation
    (60) table_primary -> . derived_table
    (61) table_primary -> . LPAREN join_relation RPAREN
    (22) query_term_intersect -> . nonjoin_query_primary
    (23) query_term_intersect -> . query_term_intersect INTERSECT set_quantifier_opt nonjoin_query_primary
    (79) aliased_relation -> . qualified_name alias_opt
    (80) derived_table -> . subquery alias
    (24) nonjoin_query_primary -> . simple_table
    (25) nonjoin_query_primary -> . LPAREN query_term RPAREN
    (183) qualified_name -> . qualified_name PERIOD identifier
    (184) qualified_name -> . identifier
    (2) subquery -> . LPAREN query RPAREN
    (26) simple_table -> . query_specification
    (27) simple_table -> . explicit_table
    (28) simple_table -> . table_value_constructor
    (185) identifier -> . IDENTIFIER
    (186) identifier -> . quoted_identifier
    (187) identifier -> . non_reserved
    (188) identifier -> . DIGIT_IDENTIFIER
    (33) query_specification -> . SELECT set_quantifier_opt adql_top_opt select_items table_expression_opt
    (29) explicit_table -> . TABLE qualified_name
    (30) table_value_constructor -> . VALUES values_list
    (190) quoted_identifier -> . QUOTED_IDENTIFIER
    (191) quoted_identifier -> . BACKQUOTED_IDENTIFIER
    (189) non_reserved -> . NON_RESERVED

    LPAREN          shift and go to state 257
    IDENTIFIER      shift and go to state 27
    DIGIT_IDENTIFIER shift and go to state 26
    SELECT          shift and go to state 13
    TABLE           shift and go to state 10
    VALUES          shift and go to state 3
    QUOTED_IDENTIFIER shift and go to state 24
    BACKQUOTED_IDENTIFIER shift and go to state 31
    NON_RESERVED    shift and go to state 30

    join_relation                  shift and go to state 256
    table_reference                shift and go to state 255
    subquery                       shift and go to state 212
    qualified_join                 shift and go to state 210
    simple_table                   shift and go to state 2
    derived_table                  shift and go to state 211
    query_term_intersect           shift and go to state 1
    quoted_identifier              shift and go to state 25
    query_specification            shift and go to state 5
    nonjoin_query_primary          shift and go to state 6
    identifier                     shift and go to state 32
    query                          shift and go to state 163
    cross_join                     shift and go to state 214
    non_reserved                   shift and go to state 28
    natural_join                   shift and go to state 217
    qualified_name                 shift and go to state 215
    query_term                     shift and go to state 11
    query_no_with                  shift and go to state 9
    aliased_relation               shift and go to state 218
    explicit_table                 shift and go to state 4
    table_primary                  shift and go to state 219
    table_value_constructor        shift and go to state 14

state 217

    (64) join_relation -> natural_join .

    CROSS           reduce using rule 64 (join_relation -> natural_join .)
    NATURAL         reduce using rule 64 (join_relation -> natural_join .)
    INNER           reduce using rule 64 (join_relation -> natural_join .)
    LEFT            reduce using rule 64 (join_relation -> natural_join .)
    RIGHT           reduce using rule 64 (join_relation -> natural_join .)
    FULL            reduce using rule 64 (join_relation -> natural_join .)
    JOIN            reduce using rule 64 (join_relation -> natural_join .)
    COMMA           reduce using rule 64 (join_relation -> natural_join .)
    WHERE           reduce using rule 64 (join_relation -> natural_join .)
    GROUP           reduce using rule 64 (join_relation -> natural_join .)
    HAVING          reduce using rule 64 (join_relation -> natural_join .)
    INTERSECT       reduce using rule 64 (join_relation -> natural_join .)
    UNION           reduce using rule 64 (join_relation -> natural_join .)
    EXCEPT          reduce using rule 64 (join_relation -> natural_join .)
    ORDER           reduce using rule 64 (join_relation -> natural_join .)
    LIMIT           reduce using rule 64 (join_relation -> natural_join .)
    $end            reduce using rule 64 (join_relation -> natural_join .)
    RPAREN          reduce using rule 64 (join_relation -> natural_join .)
    ON              reduce using rule 64 (join_relation -> natural_join .)
    USING           reduce using rule 64 (join_relation -> natural_join .)


state 218

    (59) table_primary -> aliased_relation .

    CROSS           reduce using rule 59 (table_primary -> aliased_relation .)
    NATURAL         reduce using rule 59 (table_primary -> aliased_relation .)
    INNER           reduce using rule 59 (table_primary -> aliased_relation .)
    LEFT            reduce using rule 59 (table_primary -> aliased_relation .)
    RIGHT           reduce using rule 59 (table_primary -> aliased_relation .)
    FULL            reduce using rule 59 (table_primary -> aliased_relation .)
    JOIN            reduce using rule 59 (table_primary -> aliased_relation .)
    COMMA           reduce using rule 59 (table_primary -> aliased_relation .)
    WHERE           reduce using rule 59 (table_primary -> aliased_relation .)
    GROUP           reduce using rule 59 (table_primary -> aliased_relation .)
    HAVING          reduce using rule 59 (table_primary -> aliased_relation .)
    INTERSECT       reduce using rule 59 (table_primary -> aliased_relation .)
    UNION           reduce using rule 59 (table_primary -> aliased_relation .)
    EXCEPT          reduce using rule 59 (table_primary -> aliased_relation .)
    ORDER           reduce using rule 59 (table_primary -> aliased_relation .)
    LIMIT           reduce using rule 59 (table_primary -> aliased_relation .)
    $end            reduce using rule 59 (table_primary -> aliased_relation .)
    RPAREN          reduce using rule 59 (table_primary -> aliased_relation .)
    ON              reduce using rule 59 (table_primary -> aliased_relation .)
    USING           reduce using rule 59 (table_primary -> aliased_relation .)


state 219

    (57) table_reference -> table_primary .

    CROSS           reduce using rule 57 (table_reference -> table_primary .)
    NATURAL         reduce using rule 57 (table_reference -> table_primary .)
    INNER           reduce using rule 57 (table_reference -> table_primary .)
    LEFT            reduce using rule 57 (table_reference -> table_primary .)
    RIGHT           reduce using rule 57 (table_reference -> table_primary .)
    FULL            reduce using rule 57 (table_reference -> table_primary .)
    JOIN            reduce using rule 57 (table_reference -> table_primary .)
    COMMA           reduce using rule 57 (table_reference -> table_primary .)
    WHERE           reduce using rule 57 (table_reference -> table_primary .)
    GROUP           reduce using rule 57 (table_reference -> table_primary .)
    HAVING          reduce using rule 57 (table_reference -> table_primary .)
    INTERSECT       reduce using rule 57 (table_reference -> table_primary .)
    UNION           reduce using rule 57 (table_reference -> table_primary .)
    EXCEPT          reduce using rule 57 (table_reference -> table_primary .)
    ORDER           reduce using rule 57 (table_reference -> table_primary .)
    LIMIT           reduce using rule 57 (table_reference -> table_primary .)
    $end            reduce using rule 57 (table_reference -> table_primary .)
    RPAREN          reduce using rule 57 (table_reference -> table_primary .)
    ON              reduce using rule 57 (table_reference -> table_primary .)
    USING           reduce using rule 57 (table_reference -> table_primary .)


state 220

    (48) select_items -> select_items COMMA select_item .

    COMMA           reduce using rule 48 (select_items -> select_items COMMA select_item .)
    FROM            reduce using rule 48 (select_items -> select_items COMMA select_item .)
    INTERSECT       reduce using rule 48 (select_items -> select_items COMMA select_item .)
    UNION           reduce using rule 48 (select_items -> select_items COMMA select_item .)
    EXCEPT          reduce using rule 48 (select_items -> select_items COMMA select_item .)
    ORDER           reduce using rule 48 (select_items -> select_items COMMA select_item .)
    LIMIT           reduce using rule 48 (select_items -> select_items COMMA select_item .)
    $end            reduce using rule 48 (select_items -> select_items COMMA select_item .)
    RPAREN          reduce using rule 48 (select_items -> select_items COMMA select_item .)


state 221

    (101) between_predicate -> value_expression not_opt BETWEEN value_expression AND . value_expression
    (109) value_expression -> . value_expression PLUS term
    (110) value_expression -> . value_expression MINUS term
    (111) value_expression -> . term
    (112) term -> . term ASTERISK factor
    (113) term -> . term SLASH factor
    (114) term -> . term PERCENT factor
    (115) term -> . term CONCAT factor
    (116) term -> . factor
    (117) factor -> . sign_opt primary_expression
    (174) sign_opt -> . sign
    (175) sign_opt -> . empty
    (176) sign -> . PLUS
    (177) sign -> . MINUS
    (194) empty -> .

    PLUS            shift and go to state 63
    MINUS           shift and go to state 47
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    term                           shift and go to state 54
    sign_opt                       shift and go to state 49
    value_expression               shift and go to state 258
    factor                         shift and go to state 57
    empty                          shift and go to state 55
    sign                           shift and go to state 56

state 222

    (103) in_value -> LPAREN in_expressions . RPAREN
    (105) in_expressions -> in_expressions . COMMA value_expression

    RPAREN          shift and go to state 259
    COMMA           shift and go to state 260


state 223

    (104) in_expressions -> value_expression .
    (109) value_expression -> value_expression . PLUS term
    (110) value_expression -> value_expression . MINUS term

    RPAREN          reduce using rule 104 (in_expressions -> value_expression .)
    COMMA           reduce using rule 104 (in_expressions -> value_expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83


state 224

    (180) integer_param_opt -> LPAREN INTEGER RPAREN .

    ASTERISK        reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    SLASH           reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    PERCENT         reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    CONCAT          reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    IS              reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    PLUS            reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    MINUS           reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    EQ              reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    NE              reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    LT              reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    LE              reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    GT              reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    GE              reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    NOT             reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    BETWEEN         reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    IN              reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    LIKE            reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    AS              reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    IDENTIFIER      reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    DIGIT_IDENTIFIER reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    QUOTED_IDENTIFIER reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    BACKQUOTED_IDENTIFIER reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    NON_RESERVED    reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    COMMA           reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    FROM            reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    INTERSECT       reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    UNION           reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    EXCEPT          reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    ORDER           reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    LIMIT           reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    $end            reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    RPAREN          reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    AND             reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    OR              reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    ASC             reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    DESC            reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    NULLS           reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    THEN            reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    GROUP           reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    HAVING          reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    CROSS           reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    NATURAL         reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    INNER           reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    LEFT            reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    RIGHT           reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    FULL            reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    JOIN            reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    WHERE           reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    ON              reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    USING           reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    WHEN            reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    END             reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)
    ELSE            reduce using rule 180 (integer_param_opt -> LPAREN INTEGER RPAREN .)


state 225

    (135) simple_case -> CASE value_expression when_clauses else_opt . END

    END             shift and go to state 261


state 226

    (139) when_clause -> WHEN search_condition THEN . value_expression
    (109) value_expression -> . value_expression PLUS term
    (110) value_expression -> . value_expression MINUS term
    (111) value_expression -> . term
    (112) term -> . term ASTERISK factor
    (113) term -> . term SLASH factor
    (114) term -> . term PERCENT factor
    (115) term -> . term CONCAT factor
    (116) term -> . factor
    (117) factor -> . sign_opt primary_expression
    (174) sign_opt -> . sign
    (175) sign_opt -> . empty
    (176) sign -> . PLUS
    (177) sign -> . MINUS
    (194) empty -> .

    PLUS            shift and go to state 63
    MINUS           shift and go to state 47
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    term                           shift and go to state 54
    sign_opt                       shift and go to state 49
    value_expression               shift and go to state 262
    factor                         shift and go to state 57
    empty                          shift and go to state 55
    sign                           shift and go to state 56

state 227

    (140) else_opt -> ELSE value_expression .
    (109) value_expression -> value_expression . PLUS term
    (110) value_expression -> value_expression . MINUS term

    END             reduce using rule 140 (else_opt -> ELSE value_expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83


state 228

    (136) searched_case -> CASE when_clauses else_opt END .

    ASTERISK        reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    SLASH           reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    PERCENT         reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    CONCAT          reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    IS              reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    PLUS            reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    MINUS           reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    EQ              reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    NE              reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    LT              reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    LE              reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    GT              reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    GE              reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    NOT             reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    BETWEEN         reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    IN              reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    LIKE            reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    AS              reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    IDENTIFIER      reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    DIGIT_IDENTIFIER reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    QUOTED_IDENTIFIER reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    BACKQUOTED_IDENTIFIER reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    NON_RESERVED    reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    COMMA           reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    FROM            reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    INTERSECT       reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    UNION           reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    EXCEPT          reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    ORDER           reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    LIMIT           reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    $end            reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    RPAREN          reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    AND             reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    OR              reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    ASC             reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    DESC            reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    NULLS           reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    THEN            reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    GROUP           reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    HAVING          reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    CROSS           reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    NATURAL         reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    INNER           reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    LEFT            reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    RIGHT           reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    FULL            reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    JOIN            reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    WHERE           reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    ON              reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    USING           reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    WHEN            reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    END             reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)
    ELSE            reduce using rule 136 (searched_case -> CASE when_clauses else_opt END .)


state 229

    (132) function_call -> qualified_name LPAREN call_list RPAREN .

    ASTERISK        reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    SLASH           reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    PERCENT         reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    CONCAT          reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    IS              reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    PLUS            reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    MINUS           reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    EQ              reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    NE              reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    LT              reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    LE              reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    GT              reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    GE              reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    NOT             reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    BETWEEN         reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    IN              reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    LIKE            reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    AS              reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    IDENTIFIER      reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    DIGIT_IDENTIFIER reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    QUOTED_IDENTIFIER reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    BACKQUOTED_IDENTIFIER reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    NON_RESERVED    reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    COMMA           reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    FROM            reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    INTERSECT       reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    UNION           reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    EXCEPT          reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    ORDER           reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    LIMIT           reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    $end            reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    RPAREN          reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    AND             reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    OR              reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    ASC             reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    DESC            reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    NULLS           reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    THEN            reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    GROUP           reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    HAVING          reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    CROSS           reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    NATURAL         reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    INNER           reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    LEFT            reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    RIGHT           reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    FULL            reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    JOIN            reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    WHERE           reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    ON              reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    USING           reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    WHEN            reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    END             reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)
    ELSE            reduce using rule 132 (function_call -> qualified_name LPAREN call_list RPAREN .)


state 230

    (142) call_list -> call_list COMMA . value_expression
    (109) value_expression -> . value_expression PLUS term
    (110) value_expression -> . value_expression MINUS term
    (111) value_expression -> . term
    (112) term -> . term ASTERISK factor
    (113) term -> . term SLASH factor
    (114) term -> . term PERCENT factor
    (115) term -> . term CONCAT factor
    (116) term -> . factor
    (117) factor -> . sign_opt primary_expression
    (174) sign_opt -> . sign
    (175) sign_opt -> . empty
    (176) sign -> . PLUS
    (177) sign -> . MINUS
    (194) empty -> .

    PLUS            shift and go to state 63
    MINUS           shift and go to state 47
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    term                           shift and go to state 54
    sign_opt                       shift and go to state 49
    value_expression               shift and go to state 263
    factor                         shift and go to state 57
    empty                          shift and go to state 55
    sign                           shift and go to state 56

state 231

    (171) interval_field -> HOUR .

    TO              reduce using rule 171 (interval_field -> HOUR .)
    ASTERISK        reduce using rule 171 (interval_field -> HOUR .)
    SLASH           reduce using rule 171 (interval_field -> HOUR .)
    PERCENT         reduce using rule 171 (interval_field -> HOUR .)
    CONCAT          reduce using rule 171 (interval_field -> HOUR .)
    IS              reduce using rule 171 (interval_field -> HOUR .)
    PLUS            reduce using rule 171 (interval_field -> HOUR .)
    MINUS           reduce using rule 171 (interval_field -> HOUR .)
    EQ              reduce using rule 171 (interval_field -> HOUR .)
    NE              reduce using rule 171 (interval_field -> HOUR .)
    LT              reduce using rule 171 (interval_field -> HOUR .)
    LE              reduce using rule 171 (interval_field -> HOUR .)
    GT              reduce using rule 171 (interval_field -> HOUR .)
    GE              reduce using rule 171 (interval_field -> HOUR .)
    NOT             reduce using rule 171 (interval_field -> HOUR .)
    BETWEEN         reduce using rule 171 (interval_field -> HOUR .)
    IN              reduce using rule 171 (interval_field -> HOUR .)
    LIKE            reduce using rule 171 (interval_field -> HOUR .)
    AS              reduce using rule 171 (interval_field -> HOUR .)
    IDENTIFIER      reduce using rule 171 (interval_field -> HOUR .)
    DIGIT_IDENTIFIER reduce using rule 171 (interval_field -> HOUR .)
    QUOTED_IDENTIFIER reduce using rule 171 (interval_field -> HOUR .)
    BACKQUOTED_IDENTIFIER reduce using rule 171 (interval_field -> HOUR .)
    NON_RESERVED    reduce using rule 171 (interval_field -> HOUR .)
    COMMA           reduce using rule 171 (interval_field -> HOUR .)
    FROM            reduce using rule 171 (interval_field -> HOUR .)
    INTERSECT       reduce using rule 171 (interval_field -> HOUR .)
    UNION           reduce using rule 171 (interval_field -> HOUR .)
    EXCEPT          reduce using rule 171 (interval_field -> HOUR .)
    ORDER           reduce using rule 171 (interval_field -> HOUR .)
    LIMIT           reduce using rule 171 (interval_field -> HOUR .)
    $end            reduce using rule 171 (interval_field -> HOUR .)
    RPAREN          reduce using rule 171 (interval_field -> HOUR .)
    AND             reduce using rule 171 (interval_field -> HOUR .)
    OR              reduce using rule 171 (interval_field -> HOUR .)
    ASC             reduce using rule 171 (interval_field -> HOUR .)
    DESC            reduce using rule 171 (interval_field -> HOUR .)
    NULLS           reduce using rule 171 (interval_field -> HOUR .)
    THEN            reduce using rule 171 (interval_field -> HOUR .)
    GROUP           reduce using rule 171 (interval_field -> HOUR .)
    HAVING          reduce using rule 171 (interval_field -> HOUR .)
    CROSS           reduce using rule 171 (interval_field -> HOUR .)
    NATURAL         reduce using rule 171 (interval_field -> HOUR .)
    INNER           reduce using rule 171 (interval_field -> HOUR .)
    LEFT            reduce using rule 171 (interval_field -> HOUR .)
    RIGHT           reduce using rule 171 (interval_field -> HOUR .)
    FULL            reduce using rule 171 (interval_field -> HOUR .)
    JOIN            reduce using rule 171 (interval_field -> HOUR .)
    WHERE           reduce using rule 171 (interval_field -> HOUR .)
    ON              reduce using rule 171 (interval_field -> HOUR .)
    USING           reduce using rule 171 (interval_field -> HOUR .)
    WHEN            reduce using rule 171 (interval_field -> HOUR .)
    END             reduce using rule 171 (interval_field -> HOUR .)
    ELSE            reduce using rule 171 (interval_field -> HOUR .)


state 232

    (173) interval_field -> SECOND .

    TO              reduce using rule 173 (interval_field -> SECOND .)
    ASTERISK        reduce using rule 173 (interval_field -> SECOND .)
    SLASH           reduce using rule 173 (interval_field -> SECOND .)
    PERCENT         reduce using rule 173 (interval_field -> SECOND .)
    CONCAT          reduce using rule 173 (interval_field -> SECOND .)
    IS              reduce using rule 173 (interval_field -> SECOND .)
    PLUS            reduce using rule 173 (interval_field -> SECOND .)
    MINUS           reduce using rule 173 (interval_field -> SECOND .)
    EQ              reduce using rule 173 (interval_field -> SECOND .)
    NE              reduce using rule 173 (interval_field -> SECOND .)
    LT              reduce using rule 173 (interval_field -> SECOND .)
    LE              reduce using rule 173 (interval_field -> SECOND .)
    GT              reduce using rule 173 (interval_field -> SECOND .)
    GE              reduce using rule 173 (interval_field -> SECOND .)
    NOT             reduce using rule 173 (interval_field -> SECOND .)
    BETWEEN         reduce using rule 173 (interval_field -> SECOND .)
    IN              reduce using rule 173 (interval_field -> SECOND .)
    LIKE            reduce using rule 173 (interval_field -> SECOND .)
    AS              reduce using rule 173 (interval_field -> SECOND .)
    IDENTIFIER      reduce using rule 173 (interval_field -> SECOND .)
    DIGIT_IDENTIFIER reduce using rule 173 (interval_field -> SECOND .)
    QUOTED_IDENTIFIER reduce using rule 173 (interval_field -> SECOND .)
    BACKQUOTED_IDENTIFIER reduce using rule 173 (interval_field -> SECOND .)
    NON_RESERVED    reduce using rule 173 (interval_field -> SECOND .)
    COMMA           reduce using rule 173 (interval_field -> SECOND .)
    FROM            reduce using rule 173 (interval_field -> SECOND .)
    INTERSECT       reduce using rule 173 (interval_field -> SECOND .)
    UNION           reduce using rule 173 (interval_field -> SECOND .)
    EXCEPT          reduce using rule 173 (interval_field -> SECOND .)
    ORDER           reduce using rule 173 (interval_field -> SECOND .)
    LIMIT           reduce using rule 173 (interval_field -> SECOND .)
    $end            reduce using rule 173 (interval_field -> SECOND .)
    RPAREN          reduce using rule 173 (interval_field -> SECOND .)
    AND             reduce using rule 173 (interval_field -> SECOND .)
    OR              reduce using rule 173 (interval_field -> SECOND .)
    ASC             reduce using rule 173 (interval_field -> SECOND .)
    DESC            reduce using rule 173 (interval_field -> SECOND .)
    NULLS           reduce using rule 173 (interval_field -> SECOND .)
    THEN            reduce using rule 173 (interval_field -> SECOND .)
    GROUP           reduce using rule 173 (interval_field -> SECOND .)
    HAVING          reduce using rule 173 (interval_field -> SECOND .)
    CROSS           reduce using rule 173 (interval_field -> SECOND .)
    NATURAL         reduce using rule 173 (interval_field -> SECOND .)
    INNER           reduce using rule 173 (interval_field -> SECOND .)
    LEFT            reduce using rule 173 (interval_field -> SECOND .)
    RIGHT           reduce using rule 173 (interval_field -> SECOND .)
    FULL            reduce using rule 173 (interval_field -> SECOND .)
    JOIN            reduce using rule 173 (interval_field -> SECOND .)
    WHERE           reduce using rule 173 (interval_field -> SECOND .)
    ON              reduce using rule 173 (interval_field -> SECOND .)
    USING           reduce using rule 173 (interval_field -> SECOND .)
    WHEN            reduce using rule 173 (interval_field -> SECOND .)
    END             reduce using rule 173 (interval_field -> SECOND .)
    ELSE            reduce using rule 173 (interval_field -> SECOND .)


state 233

    (170) interval_field -> DAY .

    TO              reduce using rule 170 (interval_field -> DAY .)
    ASTERISK        reduce using rule 170 (interval_field -> DAY .)
    SLASH           reduce using rule 170 (interval_field -> DAY .)
    PERCENT         reduce using rule 170 (interval_field -> DAY .)
    CONCAT          reduce using rule 170 (interval_field -> DAY .)
    IS              reduce using rule 170 (interval_field -> DAY .)
    PLUS            reduce using rule 170 (interval_field -> DAY .)
    MINUS           reduce using rule 170 (interval_field -> DAY .)
    EQ              reduce using rule 170 (interval_field -> DAY .)
    NE              reduce using rule 170 (interval_field -> DAY .)
    LT              reduce using rule 170 (interval_field -> DAY .)
    LE              reduce using rule 170 (interval_field -> DAY .)
    GT              reduce using rule 170 (interval_field -> DAY .)
    GE              reduce using rule 170 (interval_field -> DAY .)
    NOT             reduce using rule 170 (interval_field -> DAY .)
    BETWEEN         reduce using rule 170 (interval_field -> DAY .)
    IN              reduce using rule 170 (interval_field -> DAY .)
    LIKE            reduce using rule 170 (interval_field -> DAY .)
    AS              reduce using rule 170 (interval_field -> DAY .)
    IDENTIFIER      reduce using rule 170 (interval_field -> DAY .)
    DIGIT_IDENTIFIER reduce using rule 170 (interval_field -> DAY .)
    QUOTED_IDENTIFIER reduce using rule 170 (interval_field -> DAY .)
    BACKQUOTED_IDENTIFIER reduce using rule 170 (interval_field -> DAY .)
    NON_RESERVED    reduce using rule 170 (interval_field -> DAY .)
    COMMA           reduce using rule 170 (interval_field -> DAY .)
    FROM            reduce using rule 170 (interval_field -> DAY .)
    INTERSECT       reduce using rule 170 (interval_field -> DAY .)
    UNION           reduce using rule 170 (interval_field -> DAY .)
    EXCEPT          reduce using rule 170 (interval_field -> DAY .)
    ORDER           reduce using rule 170 (interval_field -> DAY .)
    LIMIT           reduce using rule 170 (interval_field -> DAY .)
    $end            reduce using rule 170 (interval_field -> DAY .)
    RPAREN          reduce using rule 170 (interval_field -> DAY .)
    AND             reduce using rule 170 (interval_field -> DAY .)
    OR              reduce using rule 170 (interval_field -> DAY .)
    ASC             reduce using rule 170 (interval_field -> DAY .)
    DESC            reduce using rule 170 (interval_field -> DAY .)
    NULLS           reduce using rule 170 (interval_field -> DAY .)
    THEN            reduce using rule 170 (interval_field -> DAY .)
    GROUP           reduce using rule 170 (interval_field -> DAY .)
    HAVING          reduce using rule 170 (interval_field -> DAY .)
    CROSS           reduce using rule 170 (interval_field -> DAY .)
    NATURAL         reduce using rule 170 (interval_field -> DAY .)
    INNER           reduce using rule 170 (interval_field -> DAY .)
    LEFT            reduce using rule 170 (interval_field -> DAY .)
    RIGHT           reduce using rule 170 (interval_field -> DAY .)
    FULL            reduce using rule 170 (interval_field -> DAY .)
    JOIN            reduce using rule 170 (interval_field -> DAY .)
    WHERE           reduce using rule 170 (interval_field -> DAY .)
    ON              reduce using rule 170 (interval_field -> DAY .)
    USING           reduce using rule 170 (interval_field -> DAY .)
    WHEN            reduce using rule 170 (interval_field -> DAY .)
    END             reduce using rule 170 (interval_field -> DAY .)
    ELSE            reduce using rule 170 (interval_field -> DAY .)


state 234

    (169) interval_field -> MONTH .

    TO              reduce using rule 169 (interval_field -> MONTH .)
    ASTERISK        reduce using rule 169 (interval_field -> MONTH .)
    SLASH           reduce using rule 169 (interval_field -> MONTH .)
    PERCENT         reduce using rule 169 (interval_field -> MONTH .)
    CONCAT          reduce using rule 169 (interval_field -> MONTH .)
    IS              reduce using rule 169 (interval_field -> MONTH .)
    PLUS            reduce using rule 169 (interval_field -> MONTH .)
    MINUS           reduce using rule 169 (interval_field -> MONTH .)
    EQ              reduce using rule 169 (interval_field -> MONTH .)
    NE              reduce using rule 169 (interval_field -> MONTH .)
    LT              reduce using rule 169 (interval_field -> MONTH .)
    LE              reduce using rule 169 (interval_field -> MONTH .)
    GT              reduce using rule 169 (interval_field -> MONTH .)
    GE              reduce using rule 169 (interval_field -> MONTH .)
    NOT             reduce using rule 169 (interval_field -> MONTH .)
    BETWEEN         reduce using rule 169 (interval_field -> MONTH .)
    IN              reduce using rule 169 (interval_field -> MONTH .)
    LIKE            reduce using rule 169 (interval_field -> MONTH .)
    AS              reduce using rule 169 (interval_field -> MONTH .)
    IDENTIFIER      reduce using rule 169 (interval_field -> MONTH .)
    DIGIT_IDENTIFIER reduce using rule 169 (interval_field -> MONTH .)
    QUOTED_IDENTIFIER reduce using rule 169 (interval_field -> MONTH .)
    BACKQUOTED_IDENTIFIER reduce using rule 169 (interval_field -> MONTH .)
    NON_RESERVED    reduce using rule 169 (interval_field -> MONTH .)
    COMMA           reduce using rule 169 (interval_field -> MONTH .)
    FROM            reduce using rule 169 (interval_field -> MONTH .)
    INTERSECT       reduce using rule 169 (interval_field -> MONTH .)
    UNION           reduce using rule 169 (interval_field -> MONTH .)
    EXCEPT          reduce using rule 169 (interval_field -> MONTH .)
    ORDER           reduce using rule 169 (interval_field -> MONTH .)
    LIMIT           reduce using rule 169 (interval_field -> MONTH .)
    $end            reduce using rule 169 (interval_field -> MONTH .)
    RPAREN          reduce using rule 169 (interval_field -> MONTH .)
    AND             reduce using rule 169 (interval_field -> MONTH .)
    OR              reduce using rule 169 (interval_field -> MONTH .)
    ASC             reduce using rule 169 (interval_field -> MONTH .)
    DESC            reduce using rule 169 (interval_field -> MONTH .)
    NULLS           reduce using rule 169 (interval_field -> MONTH .)
    THEN            reduce using rule 169 (interval_field -> MONTH .)
    GROUP           reduce using rule 169 (interval_field -> MONTH .)
    HAVING          reduce using rule 169 (interval_field -> MONTH .)
    CROSS           reduce using rule 169 (interval_field -> MONTH .)
    NATURAL         reduce using rule 169 (interval_field -> MONTH .)
    INNER           reduce using rule 169 (interval_field -> MONTH .)
    LEFT            reduce using rule 169 (interval_field -> MONTH .)
    RIGHT           reduce using rule 169 (interval_field -> MONTH .)
    FULL            reduce using rule 169 (interval_field -> MONTH .)
    JOIN            reduce using rule 169 (interval_field -> MONTH .)
    WHERE           reduce using rule 169 (interval_field -> MONTH .)
    ON              reduce using rule 169 (interval_field -> MONTH .)
    USING           reduce using rule 169 (interval_field -> MONTH .)
    WHEN            reduce using rule 169 (interval_field -> MONTH .)
    END             reduce using rule 169 (interval_field -> MONTH .)
    ELSE            reduce using rule 169 (interval_field -> MONTH .)


state 235

    (168) interval_field -> YEAR .

    TO              reduce using rule 168 (interval_field -> YEAR .)
    ASTERISK        reduce using rule 168 (interval_field -> YEAR .)
    SLASH           reduce using rule 168 (interval_field -> YEAR .)
    PERCENT         reduce using rule 168 (interval_field -> YEAR .)
    CONCAT          reduce using rule 168 (interval_field -> YEAR .)
    IS              reduce using rule 168 (interval_field -> YEAR .)
    PLUS            reduce using rule 168 (interval_field -> YEAR .)
    MINUS           reduce using rule 168 (interval_field -> YEAR .)
    EQ              reduce using rule 168 (interval_field -> YEAR .)
    NE              reduce using rule 168 (interval_field -> YEAR .)
    LT              reduce using rule 168 (interval_field -> YEAR .)
    LE              reduce using rule 168 (interval_field -> YEAR .)
    GT              reduce using rule 168 (interval_field -> YEAR .)
    GE              reduce using rule 168 (interval_field -> YEAR .)
    NOT             reduce using rule 168 (interval_field -> YEAR .)
    BETWEEN         reduce using rule 168 (interval_field -> YEAR .)
    IN              reduce using rule 168 (interval_field -> YEAR .)
    LIKE            reduce using rule 168 (interval_field -> YEAR .)
    AS              reduce using rule 168 (interval_field -> YEAR .)
    IDENTIFIER      reduce using rule 168 (interval_field -> YEAR .)
    DIGIT_IDENTIFIER reduce using rule 168 (interval_field -> YEAR .)
    QUOTED_IDENTIFIER reduce using rule 168 (interval_field -> YEAR .)
    BACKQUOTED_IDENTIFIER reduce using rule 168 (interval_field -> YEAR .)
    NON_RESERVED    reduce using rule 168 (interval_field -> YEAR .)
    COMMA           reduce using rule 168 (interval_field -> YEAR .)
    FROM            reduce using rule 168 (interval_field -> YEAR .)
    INTERSECT       reduce using rule 168 (interval_field -> YEAR .)
    UNION           reduce using rule 168 (interval_field -> YEAR .)
    EXCEPT          reduce using rule 168 (interval_field -> YEAR .)
    ORDER           reduce using rule 168 (interval_field -> YEAR .)
    LIMIT           reduce using rule 168 (interval_field -> YEAR .)
    $end            reduce using rule 168 (interval_field -> YEAR .)
    RPAREN          reduce using rule 168 (interval_field -> YEAR .)
    AND             reduce using rule 168 (interval_field -> YEAR .)
    OR              reduce using rule 168 (interval_field -> YEAR .)
    ASC             reduce using rule 168 (interval_field -> YEAR .)
    DESC            reduce using rule 168 (interval_field -> YEAR .)
    NULLS           reduce using rule 168 (interval_field -> YEAR .)
    THEN            reduce using rule 168 (interval_field -> YEAR .)
    GROUP           reduce using rule 168 (interval_field -> YEAR .)
    HAVING          reduce using rule 168 (interval_field -> YEAR .)
    CROSS           reduce using rule 168 (interval_field -> YEAR .)
    NATURAL         reduce using rule 168 (interval_field -> YEAR .)
    INNER           reduce using rule 168 (interval_field -> YEAR .)
    LEFT            reduce using rule 168 (interval_field -> YEAR .)
    RIGHT           reduce using rule 168 (interval_field -> YEAR .)
    FULL            reduce using rule 168 (interval_field -> YEAR .)
    JOIN            reduce using rule 168 (interval_field -> YEAR .)
    WHERE           reduce using rule 168 (interval_field -> YEAR .)
    ON              reduce using rule 168 (interval_field -> YEAR .)
    USING           reduce using rule 168 (interval_field -> YEAR .)
    WHEN            reduce using rule 168 (interval_field -> YEAR .)
    END             reduce using rule 168 (interval_field -> YEAR .)
    ELSE            reduce using rule 168 (interval_field -> YEAR .)


state 236

    (165) interval -> INTERVAL sign_opt STRING interval_field . interval_end_opt
    (166) interval_end_opt -> . TO interval_field
    (167) interval_end_opt -> . empty
    (194) empty -> .

    TO              shift and go to state 266
    ASTERISK        reduce using rule 194 (empty -> .)
    SLASH           reduce using rule 194 (empty -> .)
    PERCENT         reduce using rule 194 (empty -> .)
    CONCAT          reduce using rule 194 (empty -> .)
    IS              reduce using rule 194 (empty -> .)
    PLUS            reduce using rule 194 (empty -> .)
    MINUS           reduce using rule 194 (empty -> .)
    EQ              reduce using rule 194 (empty -> .)
    NE              reduce using rule 194 (empty -> .)
    LT              reduce using rule 194 (empty -> .)
    LE              reduce using rule 194 (empty -> .)
    GT              reduce using rule 194 (empty -> .)
    GE              reduce using rule 194 (empty -> .)
    NOT             reduce using rule 194 (empty -> .)
    BETWEEN         reduce using rule 194 (empty -> .)
    IN              reduce using rule 194 (empty -> .)
    LIKE            reduce using rule 194 (empty -> .)
    AS              reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    COMMA           reduce using rule 194 (empty -> .)
    FROM            reduce using rule 194 (empty -> .)
    INTERSECT       reduce using rule 194 (empty -> .)
    UNION           reduce using rule 194 (empty -> .)
    EXCEPT          reduce using rule 194 (empty -> .)
    ORDER           reduce using rule 194 (empty -> .)
    LIMIT           reduce using rule 194 (empty -> .)
    $end            reduce using rule 194 (empty -> .)
    RPAREN          reduce using rule 194 (empty -> .)
    AND             reduce using rule 194 (empty -> .)
    OR              reduce using rule 194 (empty -> .)
    ASC             reduce using rule 194 (empty -> .)
    DESC            reduce using rule 194 (empty -> .)
    NULLS           reduce using rule 194 (empty -> .)
    THEN            reduce using rule 194 (empty -> .)
    GROUP           reduce using rule 194 (empty -> .)
    HAVING          reduce using rule 194 (empty -> .)
    CROSS           reduce using rule 194 (empty -> .)
    NATURAL         reduce using rule 194 (empty -> .)
    INNER           reduce using rule 194 (empty -> .)
    LEFT            reduce using rule 194 (empty -> .)
    RIGHT           reduce using rule 194 (empty -> .)
    FULL            reduce using rule 194 (empty -> .)
    JOIN            reduce using rule 194 (empty -> .)
    WHERE           reduce using rule 194 (empty -> .)
    ON              reduce using rule 194 (empty -> .)
    USING           reduce using rule 194 (empty -> .)
    WHEN            reduce using rule 194 (empty -> .)
    END             reduce using rule 194 (empty -> .)
    ELSE            reduce using rule 194 (empty -> .)

    empty                          shift and go to state 264
    interval_end_opt               shift and go to state 265

state 237

    (172) interval_field -> MINUTE .

    TO              reduce using rule 172 (interval_field -> MINUTE .)
    ASTERISK        reduce using rule 172 (interval_field -> MINUTE .)
    SLASH           reduce using rule 172 (interval_field -> MINUTE .)
    PERCENT         reduce using rule 172 (interval_field -> MINUTE .)
    CONCAT          reduce using rule 172 (interval_field -> MINUTE .)
    IS              reduce using rule 172 (interval_field -> MINUTE .)
    PLUS            reduce using rule 172 (interval_field -> MINUTE .)
    MINUS           reduce using rule 172 (interval_field -> MINUTE .)
    EQ              reduce using rule 172 (interval_field -> MINUTE .)
    NE              reduce using rule 172 (interval_field -> MINUTE .)
    LT              reduce using rule 172 (interval_field -> MINUTE .)
    LE              reduce using rule 172 (interval_field -> MINUTE .)
    GT              reduce using rule 172 (interval_field -> MINUTE .)
    GE              reduce using rule 172 (interval_field -> MINUTE .)
    NOT             reduce using rule 172 (interval_field -> MINUTE .)
    BETWEEN         reduce using rule 172 (interval_field -> MINUTE .)
    IN              reduce using rule 172 (interval_field -> MINUTE .)
    LIKE            reduce using rule 172 (interval_field -> MINUTE .)
    AS              reduce using rule 172 (interval_field -> MINUTE .)
    IDENTIFIER      reduce using rule 172 (interval_field -> MINUTE .)
    DIGIT_IDENTIFIER reduce using rule 172 (interval_field -> MINUTE .)
    QUOTED_IDENTIFIER reduce using rule 172 (interval_field -> MINUTE .)
    BACKQUOTED_IDENTIFIER reduce using rule 172 (interval_field -> MINUTE .)
    NON_RESERVED    reduce using rule 172 (interval_field -> MINUTE .)
    COMMA           reduce using rule 172 (interval_field -> MINUTE .)
    FROM            reduce using rule 172 (interval_field -> MINUTE .)
    INTERSECT       reduce using rule 172 (interval_field -> MINUTE .)
    UNION           reduce using rule 172 (interval_field -> MINUTE .)
    EXCEPT          reduce using rule 172 (interval_field -> MINUTE .)
    ORDER           reduce using rule 172 (interval_field -> MINUTE .)
    LIMIT           reduce using rule 172 (interval_field -> MINUTE .)
    $end            reduce using rule 172 (interval_field -> MINUTE .)
    RPAREN          reduce using rule 172 (interval_field -> MINUTE .)
    AND             reduce using rule 172 (interval_field -> MINUTE .)
    OR              reduce using rule 172 (interval_field -> MINUTE .)
    ASC             reduce using rule 172 (interval_field -> MINUTE .)
    DESC            reduce using rule 172 (interval_field -> MINUTE .)
    NULLS           reduce using rule 172 (interval_field -> MINUTE .)
    THEN            reduce using rule 172 (interval_field -> MINUTE .)
    GROUP           reduce using rule 172 (interval_field -> MINUTE .)
    HAVING          reduce using rule 172 (interval_field -> MINUTE .)
    CROSS           reduce using rule 172 (interval_field -> MINUTE .)
    NATURAL         reduce using rule 172 (interval_field -> MINUTE .)
    INNER           reduce using rule 172 (interval_field -> MINUTE .)
    LEFT            reduce using rule 172 (interval_field -> MINUTE .)
    RIGHT           reduce using rule 172 (interval_field -> MINUTE .)
    FULL            reduce using rule 172 (interval_field -> MINUTE .)
    JOIN            reduce using rule 172 (interval_field -> MINUTE .)
    WHERE           reduce using rule 172 (interval_field -> MINUTE .)
    ON              reduce using rule 172 (interval_field -> MINUTE .)
    USING           reduce using rule 172 (interval_field -> MINUTE .)
    WHEN            reduce using rule 172 (interval_field -> MINUTE .)
    END             reduce using rule 172 (interval_field -> MINUTE .)
    ELSE            reduce using rule 172 (interval_field -> MINUTE .)


state 238

    (14) null_ordering_opt -> NULLS LAST .

    COMMA           reduce using rule 14 (null_ordering_opt -> NULLS LAST .)
    LIMIT           reduce using rule 14 (null_ordering_opt -> NULLS LAST .)
    $end            reduce using rule 14 (null_ordering_opt -> NULLS LAST .)
    RPAREN          reduce using rule 14 (null_ordering_opt -> NULLS LAST .)


state 239

    (13) null_ordering_opt -> NULLS FIRST .

    COMMA           reduce using rule 13 (null_ordering_opt -> NULLS FIRST .)
    LIMIT           reduce using rule 13 (null_ordering_opt -> NULLS FIRST .)
    $end            reduce using rule 13 (null_ordering_opt -> NULLS FIRST .)
    RPAREN          reduce using rule 13 (null_ordering_opt -> NULLS FIRST .)


state 240

    (70) join_type -> RIGHT . outer_opt
    (73) outer_opt -> . OUTER
    (74) outer_opt -> . empty
    (194) empty -> .

    OUTER           shift and go to state 268
    JOIN            reduce using rule 194 (empty -> .)

    empty                          shift and go to state 267
    outer_opt                      shift and go to state 269

state 241

    (72) join_type -> empty .

    JOIN            reduce using rule 72 (join_type -> empty .)


state 242

    (71) join_type -> FULL . outer_opt
    (73) outer_opt -> . OUTER
    (74) outer_opt -> . empty
    (194) empty -> .

    OUTER           shift and go to state 268
    JOIN            reduce using rule 194 (empty -> .)

    empty                          shift and go to state 267
    outer_opt                      shift and go to state 270

state 243

    (66) qualified_join -> table_reference join_type . JOIN table_reference join_criteria

    JOIN            shift and go to state 271


state 244

    (69) join_type -> LEFT . outer_opt
    (73) outer_opt -> . OUTER
    (74) outer_opt -> . empty
    (194) empty -> .

    OUTER           shift and go to state 268
    JOIN            reduce using rule 194 (empty -> .)

    empty                          shift and go to state 267
    outer_opt                      shift and go to state 272

state 245

    (67) natural_join -> table_reference NATURAL . join_type JOIN aliased_relation
    (68) join_type -> . INNER
    (69) join_type -> . LEFT outer_opt
    (70) join_type -> . RIGHT outer_opt
    (71) join_type -> . FULL outer_opt
    (72) join_type -> . empty
    (194) empty -> .

    INNER           shift and go to state 247
    LEFT            shift and go to state 244
    RIGHT           shift and go to state 240
    FULL            shift and go to state 242
    JOIN            reduce using rule 194 (empty -> .)

    join_type                      shift and go to state 273
    empty                          shift and go to state 241

state 246

    (65) cross_join -> table_reference CROSS . JOIN aliased_relation

    JOIN            shift and go to state 274


state 247

    (68) join_type -> INNER .

    JOIN            reduce using rule 68 (join_type -> INNER .)


state 248

    (80) derived_table -> subquery alias .

    CROSS           reduce using rule 80 (derived_table -> subquery alias .)
    NATURAL         reduce using rule 80 (derived_table -> subquery alias .)
    INNER           reduce using rule 80 (derived_table -> subquery alias .)
    LEFT            reduce using rule 80 (derived_table -> subquery alias .)
    RIGHT           reduce using rule 80 (derived_table -> subquery alias .)
    FULL            reduce using rule 80 (derived_table -> subquery alias .)
    JOIN            reduce using rule 80 (derived_table -> subquery alias .)
    COMMA           reduce using rule 80 (derived_table -> subquery alias .)
    WHERE           reduce using rule 80 (derived_table -> subquery alias .)
    GROUP           reduce using rule 80 (derived_table -> subquery alias .)
    HAVING          reduce using rule 80 (derived_table -> subquery alias .)
    INTERSECT       reduce using rule 80 (derived_table -> subquery alias .)
    UNION           reduce using rule 80 (derived_table -> subquery alias .)
    EXCEPT          reduce using rule 80 (derived_table -> subquery alias .)
    ORDER           reduce using rule 80 (derived_table -> subquery alias .)
    LIMIT           reduce using rule 80 (derived_table -> subquery alias .)
    $end            reduce using rule 80 (derived_table -> subquery alias .)
    RPAREN          reduce using rule 80 (derived_table -> subquery alias .)
    ON              reduce using rule 80 (derived_table -> subquery alias .)
    USING           reduce using rule 80 (derived_table -> subquery alias .)


state 249

    (160) as_opt -> empty .

    IDENTIFIER      reduce using rule 160 (as_opt -> empty .)
    DIGIT_IDENTIFIER reduce using rule 160 (as_opt -> empty .)
    QUOTED_IDENTIFIER reduce using rule 160 (as_opt -> empty .)
    BACKQUOTED_IDENTIFIER reduce using rule 160 (as_opt -> empty .)
    NON_RESERVED    reduce using rule 160 (as_opt -> empty .)


state 250

    (53) table_expression_opt -> FROM relations where_opt . group_by_opt having_opt
    (38) group_by_opt -> . GROUP BY grouping_elements
    (39) group_by_opt -> . empty
    (194) empty -> .

    GROUP           shift and go to state 277
    HAVING          reduce using rule 194 (empty -> .)
    INTERSECT       reduce using rule 194 (empty -> .)
    UNION           reduce using rule 194 (empty -> .)
    EXCEPT          reduce using rule 194 (empty -> .)
    ORDER           reduce using rule 194 (empty -> .)
    LIMIT           reduce using rule 194 (empty -> .)
    $end            reduce using rule 194 (empty -> .)
    RPAREN          reduce using rule 194 (empty -> .)

    empty                          shift and go to state 276
    group_by_opt                   shift and go to state 275

state 251

    (37) where_opt -> empty .

    GROUP           reduce using rule 37 (where_opt -> empty .)
    HAVING          reduce using rule 37 (where_opt -> empty .)
    INTERSECT       reduce using rule 37 (where_opt -> empty .)
    UNION           reduce using rule 37 (where_opt -> empty .)
    EXCEPT          reduce using rule 37 (where_opt -> empty .)
    ORDER           reduce using rule 37 (where_opt -> empty .)
    LIMIT           reduce using rule 37 (where_opt -> empty .)
    $end            reduce using rule 37 (where_opt -> empty .)
    RPAREN          reduce using rule 37 (where_opt -> empty .)


state 252

    (36) where_opt -> WHERE . search_condition
    (85) search_condition -> . boolean_term
    (86) search_condition -> . search_condition OR boolean_term
    (87) boolean_term -> . boolean_factor
    (88) boolean_term -> . boolean_term AND boolean_factor
    (89) boolean_factor -> . not_opt boolean_test
    (161) not_opt -> . NOT
    (162) not_opt -> . empty
    (194) empty -> .

    NOT             shift and go to state 18
    RPAREN          reduce using rule 194 (empty -> .)
    EXISTS          reduce using rule 194 (empty -> .)
    PLUS            reduce using rule 194 (empty -> .)
    MINUS           reduce using rule 194 (empty -> .)
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    search_condition               shift and go to state 278
    boolean_factor                 shift and go to state 16
    empty                          shift and go to state 17
    not_opt                        shift and go to state 19
    boolean_term                   shift and go to state 23

state 253

    (55) relations -> relations COMMA . table_reference
    (57) table_reference -> . table_primary
    (58) table_reference -> . join_relation
    (59) table_primary -> . aliased_relation
    (60) table_primary -> . derived_table
    (61) table_primary -> . LPAREN join_relation RPAREN
    (62) join_relation -> . cross_join
    (63) join_relation -> . qualified_join
    (64) join_relation -> . natural_join
    (79) aliased_relation -> . qualified_name alias_opt
    (80) derived_table -> . subquery alias
    (65) cross_join -> . table_reference CROSS JOIN aliased_relation
    (66) qualified_join -> . table_reference join_type JOIN table_reference join_criteria
    (67) natural_join -> . table_reference NATURAL join_type JOIN aliased_relation
    (183) qualified_name -> . qualified_name PERIOD identifier
    (184) qualified_name -> . identifier
    (2) subquery -> . LPAREN query RPAREN
    (185) identifier -> . IDENTIFIER
    (186) identifier -> . quoted_identifier
    (187) identifier -> . non_reserved
    (188) identifier -> . DIGIT_IDENTIFIER
    (190) quoted_identifier -> . QUOTED_IDENTIFIER
    (191) quoted_identifier -> . BACKQUOTED_IDENTIFIER
    (189) non_reserved -> . NON_RESERVED

    LPAREN          shift and go to state 216
    IDENTIFIER      shift and go to state 27
    DIGIT_IDENTIFIER shift and go to state 26
    QUOTED_IDENTIFIER shift and go to state 24
    BACKQUOTED_IDENTIFIER shift and go to state 31
    NON_RESERVED    shift and go to state 30

    join_relation                  shift and go to state 208
    table_reference                shift and go to state 279
    qualified_name                 shift and go to state 215
    qualified_join                 shift and go to state 210
    cross_join                     shift and go to state 214
    derived_table                  shift and go to state 211
    quoted_identifier              shift and go to state 25
    subquery                       shift and go to state 212
    natural_join                   shift and go to state 217
    aliased_relation               shift and go to state 218
    non_reserved                   shift and go to state 28
    table_primary                  shift and go to state 219
    identifier                     shift and go to state 32

state 254

    (79) aliased_relation -> qualified_name alias_opt .

    CROSS           reduce using rule 79 (aliased_relation -> qualified_name alias_opt .)
    NATURAL         reduce using rule 79 (aliased_relation -> qualified_name alias_opt .)
    INNER           reduce using rule 79 (aliased_relation -> qualified_name alias_opt .)
    LEFT            reduce using rule 79 (aliased_relation -> qualified_name alias_opt .)
    RIGHT           reduce using rule 79 (aliased_relation -> qualified_name alias_opt .)
    FULL            reduce using rule 79 (aliased_relation -> qualified_name alias_opt .)
    JOIN            reduce using rule 79 (aliased_relation -> qualified_name alias_opt .)
    COMMA           reduce using rule 79 (aliased_relation -> qualified_name alias_opt .)
    WHERE           reduce using rule 79 (aliased_relation -> qualified_name alias_opt .)
    GROUP           reduce using rule 79 (aliased_relation -> qualified_name alias_opt .)
    HAVING          reduce using rule 79 (aliased_relation -> qualified_name alias_opt .)
    INTERSECT       reduce using rule 79 (aliased_relation -> qualified_name alias_opt .)
    UNION           reduce using rule 79 (aliased_relation -> qualified_name alias_opt .)
    EXCEPT          reduce using rule 79 (aliased_relation -> qualified_name alias_opt .)
    ORDER           reduce using rule 79 (aliased_relation -> qualified_name alias_opt .)
    LIMIT           reduce using rule 79 (aliased_relation -> qualified_name alias_opt .)
    $end            reduce using rule 79 (aliased_relation -> qualified_name alias_opt .)
    RPAREN          reduce using rule 79 (aliased_relation -> qualified_name alias_opt .)
    ON              reduce using rule 79 (aliased_relation -> qualified_name alias_opt .)
    USING           reduce using rule 79 (aliased_relation -> qualified_name alias_opt .)


state 255

    (65) cross_join -> table_reference . CROSS JOIN aliased_relation
    (66) qualified_join -> table_reference . join_type JOIN table_reference join_criteria
    (67) natural_join -> table_reference . NATURAL join_type JOIN aliased_relation
    (68) join_type -> . INNER
    (69) join_type -> . LEFT outer_opt
    (70) join_type -> . RIGHT outer_opt
    (71) join_type -> . FULL outer_opt
    (72) join_type -> . empty
    (194) empty -> .

    CROSS           shift and go to state 246
    NATURAL         shift and go to state 245
    INNER           shift and go to state 247
    LEFT            shift and go to state 244
    RIGHT           shift and go to state 240
    FULL            shift and go to state 242
    JOIN            reduce using rule 194 (empty -> .)

    empty                          shift and go to state 241
    join_type                      shift and go to state 243

state 256

    (61) table_primary -> LPAREN join_relation . RPAREN
    (58) table_reference -> join_relation .

    RPAREN          shift and go to state 280
    CROSS           reduce using rule 58 (table_reference -> join_relation .)
    NATURAL         reduce using rule 58 (table_reference -> join_relation .)
    INNER           reduce using rule 58 (table_reference -> join_relation .)
    LEFT            reduce using rule 58 (table_reference -> join_relation .)
    RIGHT           reduce using rule 58 (table_reference -> join_relation .)
    FULL            reduce using rule 58 (table_reference -> join_relation .)
    JOIN            reduce using rule 58 (table_reference -> join_relation .)


state 257

    (61) table_primary -> LPAREN . join_relation RPAREN
    (25) nonjoin_query_primary -> LPAREN . query_term RPAREN
    (2) subquery -> LPAREN . query RPAREN
    (62) join_relation -> . cross_join
    (63) join_relation -> . qualified_join
    (64) join_relation -> . natural_join
    (19) query_term -> . query_term_intersect
    (20) query_term -> . query_term UNION set_quantifier_opt query_term_intersect
    (21) query_term -> . query_term EXCEPT set_quantifier_opt query_term_intersect
    (3) query -> . query_no_with
    (65) cross_join -> . table_reference CROSS JOIN aliased_relation
    (66) qualified_join -> . table_reference join_type JOIN table_reference join_criteria
    (67) natural_join -> . table_reference NATURAL join_type JOIN aliased_relation
    (22) query_term_intersect -> . nonjoin_query_primary
    (23) query_term_intersect -> . query_term_intersect INTERSECT set_quantifier_opt nonjoin_query_primary
    (4) query_no_with -> . query_term order_by_opt limit_opt
    (57) table_reference -> . table_primary
    (58) table_reference -> . join_relation
    (24) nonjoin_query_primary -> . simple_table
    (25) nonjoin_query_primary -> . LPAREN query_term RPAREN
    (59) table_primary -> . aliased_relation
    (60) table_primary -> . derived_table
    (61) table_primary -> . LPAREN join_relation RPAREN
    (26) simple_table -> . query_specification
    (27) simple_table -> . explicit_table
    (28) simple_table -> . table_value_constructor
    (79) aliased_relation -> . qualified_name alias_opt
    (80) derived_table -> . subquery alias
    (33) query_specification -> . SELECT set_quantifier_opt adql_top_opt select_items table_expression_opt
    (29) explicit_table -> . TABLE qualified_name
    (30) table_value_constructor -> . VALUES values_list
    (183) qualified_name -> . qualified_name PERIOD identifier
    (184) qualified_name -> . identifier
    (2) subquery -> . LPAREN query RPAREN
    (185) identifier -> . IDENTIFIER
    (186) identifier -> . quoted_identifier
    (187) identifier -> . non_reserved
    (188) identifier -> . DIGIT_IDENTIFIER
    (190) quoted_identifier -> . QUOTED_IDENTIFIER
    (191) quoted_identifier -> . BACKQUOTED_IDENTIFIER
    (189) non_reserved -> . NON_RESERVED

    LPAREN          shift and go to state 281
    SELECT          shift and go to state 13
    TABLE           shift and go to state 10
    VALUES          shift and go to state 3
    IDENTIFIER      shift and go to state 27
    DIGIT_IDENTIFIER shift and go to state 26
    QUOTED_IDENTIFIER shift and go to state 24
    BACKQUOTED_IDENTIFIER shift and go to state 31
    NON_RESERVED    shift and go to state 30

    join_relation                  shift and go to state 256
    table_reference                shift and go to state 255
    qualified_name                 shift and go to state 215
    qualified_join                 shift and go to state 210
    simple_table                   shift and go to state 2
    query_term_intersect           shift and go to state 1
    derived_table                  shift and go to state 211
    subquery                       shift and go to state 212
    quoted_identifier              shift and go to state 25
    cross_join                     shift and go to state 214
    explicit_table                 shift and go to state 4
    query_specification            shift and go to state 5
    nonjoin_query_primary          shift and go to state 6
    identifier                     shift and go to state 32
    query                          shift and go to state 163
    query_no_with                  shift and go to state 9
    non_reserved                   shift and go to state 28
    query_term                     shift and go to state 201
    natural_join                   shift and go to state 217
    aliased_relation               shift and go to state 218
    table_value_constructor        shift and go to state 14
    table_primary                  shift and go to state 219

state 258

    (101) between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression .
    (109) value_expression -> value_expression . PLUS term
    (110) value_expression -> value_expression . MINUS term

    AND             reduce using rule 101 (between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression .)
    OR              reduce using rule 101 (between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression .)
    COMMA           reduce using rule 101 (between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression .)
    INTERSECT       reduce using rule 101 (between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression .)
    UNION           reduce using rule 101 (between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression .)
    EXCEPT          reduce using rule 101 (between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression .)
    ORDER           reduce using rule 101 (between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression .)
    LIMIT           reduce using rule 101 (between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression .)
    $end            reduce using rule 101 (between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression .)
    RPAREN          reduce using rule 101 (between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression .)
    ASC             reduce using rule 101 (between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression .)
    DESC            reduce using rule 101 (between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression .)
    NULLS           reduce using rule 101 (between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression .)
    THEN            reduce using rule 101 (between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression .)
    GROUP           reduce using rule 101 (between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression .)
    HAVING          reduce using rule 101 (between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression .)
    CROSS           reduce using rule 101 (between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression .)
    NATURAL         reduce using rule 101 (between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression .)
    INNER           reduce using rule 101 (between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression .)
    LEFT            reduce using rule 101 (between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression .)
    RIGHT           reduce using rule 101 (between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression .)
    FULL            reduce using rule 101 (between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression .)
    JOIN            reduce using rule 101 (between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression .)
    WHERE           reduce using rule 101 (between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression .)
    ON              reduce using rule 101 (between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression .)
    USING           reduce using rule 101 (between_predicate -> value_expression not_opt BETWEEN value_expression AND value_expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83


state 259

    (103) in_value -> LPAREN in_expressions RPAREN .

    AND             reduce using rule 103 (in_value -> LPAREN in_expressions RPAREN .)
    OR              reduce using rule 103 (in_value -> LPAREN in_expressions RPAREN .)
    COMMA           reduce using rule 103 (in_value -> LPAREN in_expressions RPAREN .)
    INTERSECT       reduce using rule 103 (in_value -> LPAREN in_expressions RPAREN .)
    UNION           reduce using rule 103 (in_value -> LPAREN in_expressions RPAREN .)
    EXCEPT          reduce using rule 103 (in_value -> LPAREN in_expressions RPAREN .)
    ORDER           reduce using rule 103 (in_value -> LPAREN in_expressions RPAREN .)
    LIMIT           reduce using rule 103 (in_value -> LPAREN in_expressions RPAREN .)
    $end            reduce using rule 103 (in_value -> LPAREN in_expressions RPAREN .)
    RPAREN          reduce using rule 103 (in_value -> LPAREN in_expressions RPAREN .)
    ASC             reduce using rule 103 (in_value -> LPAREN in_expressions RPAREN .)
    DESC            reduce using rule 103 (in_value -> LPAREN in_expressions RPAREN .)
    NULLS           reduce using rule 103 (in_value -> LPAREN in_expressions RPAREN .)
    THEN            reduce using rule 103 (in_value -> LPAREN in_expressions RPAREN .)
    GROUP           reduce using rule 103 (in_value -> LPAREN in_expressions RPAREN .)
    HAVING          reduce using rule 103 (in_value -> LPAREN in_expressions RPAREN .)
    CROSS           reduce using rule 103 (in_value -> LPAREN in_expressions RPAREN .)
    NATURAL         reduce using rule 103 (in_value -> LPAREN in_expressions RPAREN .)
    INNER           reduce using rule 103 (in_value -> LPAREN in_expressions RPAREN .)
    LEFT            reduce using rule 103 (in_value -> LPAREN in_expressions RPAREN .)
    RIGHT           reduce using rule 103 (in_value -> LPAREN in_expressions RPAREN .)
    FULL            reduce using rule 103 (in_value -> LPAREN in_expressions RPAREN .)
    JOIN            reduce using rule 103 (in_value -> LPAREN in_expressions RPAREN .)
    WHERE           reduce using rule 103 (in_value -> LPAREN in_expressions RPAREN .)
    ON              reduce using rule 103 (in_value -> LPAREN in_expressions RPAREN .)
    USING           reduce using rule 103 (in_value -> LPAREN in_expressions RPAREN .)


state 260

    (105) in_expressions -> in_expressions COMMA . value_expression
    (109) value_expression -> . value_expression PLUS term
    (110) value_expression -> . value_expression MINUS term
    (111) value_expression -> . term
    (112) term -> . term ASTERISK factor
    (113) term -> . term SLASH factor
    (114) term -> . term PERCENT factor
    (115) term -> . term CONCAT factor
    (116) term -> . factor
    (117) factor -> . sign_opt primary_expression
    (174) sign_opt -> . sign
    (175) sign_opt -> . empty
    (176) sign -> . PLUS
    (177) sign -> . MINUS
    (194) empty -> .

    PLUS            shift and go to state 63
    MINUS           shift and go to state 47
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    term                           shift and go to state 54
    sign_opt                       shift and go to state 49
    value_expression               shift and go to state 282
    factor                         shift and go to state 57
    empty                          shift and go to state 55
    sign                           shift and go to state 56

state 261

    (135) simple_case -> CASE value_expression when_clauses else_opt END .

    ASTERISK        reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    SLASH           reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    PERCENT         reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    CONCAT          reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    IS              reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    PLUS            reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    MINUS           reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    EQ              reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    NE              reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    LT              reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    LE              reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    GT              reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    GE              reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    NOT             reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    BETWEEN         reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    IN              reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    LIKE            reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    AS              reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    IDENTIFIER      reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    DIGIT_IDENTIFIER reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    QUOTED_IDENTIFIER reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    BACKQUOTED_IDENTIFIER reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    NON_RESERVED    reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    COMMA           reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    FROM            reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    INTERSECT       reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    UNION           reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    EXCEPT          reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    ORDER           reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    LIMIT           reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    $end            reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    RPAREN          reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    AND             reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    OR              reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    ASC             reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    DESC            reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    NULLS           reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    THEN            reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    GROUP           reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    HAVING          reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    CROSS           reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    NATURAL         reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    INNER           reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    LEFT            reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    RIGHT           reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    FULL            reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    JOIN            reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    WHERE           reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    ON              reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    USING           reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    WHEN            reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    END             reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)
    ELSE            reduce using rule 135 (simple_case -> CASE value_expression when_clauses else_opt END .)


state 262

    (139) when_clause -> WHEN search_condition THEN value_expression .
    (109) value_expression -> value_expression . PLUS term
    (110) value_expression -> value_expression . MINUS term

    ELSE            reduce using rule 139 (when_clause -> WHEN search_condition THEN value_expression .)
    WHEN            reduce using rule 139 (when_clause -> WHEN search_condition THEN value_expression .)
    END             reduce using rule 139 (when_clause -> WHEN search_condition THEN value_expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83


state 263

    (142) call_list -> call_list COMMA value_expression .
    (109) value_expression -> value_expression . PLUS term
    (110) value_expression -> value_expression . MINUS term

    RPAREN          reduce using rule 142 (call_list -> call_list COMMA value_expression .)
    COMMA           reduce using rule 142 (call_list -> call_list COMMA value_expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83


state 264

    (167) interval_end_opt -> empty .

    ASTERISK        reduce using rule 167 (interval_end_opt -> empty .)
    SLASH           reduce using rule 167 (interval_end_opt -> empty .)
    PERCENT         reduce using rule 167 (interval_end_opt -> empty .)
    CONCAT          reduce using rule 167 (interval_end_opt -> empty .)
    IS              reduce using rule 167 (interval_end_opt -> empty .)
    PLUS            reduce using rule 167 (interval_end_opt -> empty .)
    MINUS           reduce using rule 167 (interval_end_opt -> empty .)
    EQ              reduce using rule 167 (interval_end_opt -> empty .)
    NE              reduce using rule 167 (interval_end_opt -> empty .)
    LT              reduce using rule 167 (interval_end_opt -> empty .)
    LE              reduce using rule 167 (interval_end_opt -> empty .)
    GT              reduce using rule 167 (interval_end_opt -> empty .)
    GE              reduce using rule 167 (interval_end_opt -> empty .)
    NOT             reduce using rule 167 (interval_end_opt -> empty .)
    BETWEEN         reduce using rule 167 (interval_end_opt -> empty .)
    IN              reduce using rule 167 (interval_end_opt -> empty .)
    LIKE            reduce using rule 167 (interval_end_opt -> empty .)
    AS              reduce using rule 167 (interval_end_opt -> empty .)
    IDENTIFIER      reduce using rule 167 (interval_end_opt -> empty .)
    DIGIT_IDENTIFIER reduce using rule 167 (interval_end_opt -> empty .)
    QUOTED_IDENTIFIER reduce using rule 167 (interval_end_opt -> empty .)
    BACKQUOTED_IDENTIFIER reduce using rule 167 (interval_end_opt -> empty .)
    NON_RESERVED    reduce using rule 167 (interval_end_opt -> empty .)
    COMMA           reduce using rule 167 (interval_end_opt -> empty .)
    FROM            reduce using rule 167 (interval_end_opt -> empty .)
    INTERSECT       reduce using rule 167 (interval_end_opt -> empty .)
    UNION           reduce using rule 167 (interval_end_opt -> empty .)
    EXCEPT          reduce using rule 167 (interval_end_opt -> empty .)
    ORDER           reduce using rule 167 (interval_end_opt -> empty .)
    LIMIT           reduce using rule 167 (interval_end_opt -> empty .)
    $end            reduce using rule 167 (interval_end_opt -> empty .)
    RPAREN          reduce using rule 167 (interval_end_opt -> empty .)
    AND             reduce using rule 167 (interval_end_opt -> empty .)
    OR              reduce using rule 167 (interval_end_opt -> empty .)
    ASC             reduce using rule 167 (interval_end_opt -> empty .)
    DESC            reduce using rule 167 (interval_end_opt -> empty .)
    NULLS           reduce using rule 167 (interval_end_opt -> empty .)
    THEN            reduce using rule 167 (interval_end_opt -> empty .)
    GROUP           reduce using rule 167 (interval_end_opt -> empty .)
    HAVING          reduce using rule 167 (interval_end_opt -> empty .)
    CROSS           reduce using rule 167 (interval_end_opt -> empty .)
    NATURAL         reduce using rule 167 (interval_end_opt -> empty .)
    INNER           reduce using rule 167 (interval_end_opt -> empty .)
    LEFT            reduce using rule 167 (interval_end_opt -> empty .)
    RIGHT           reduce using rule 167 (interval_end_opt -> empty .)
    FULL            reduce using rule 167 (interval_end_opt -> empty .)
    JOIN            reduce using rule 167 (interval_end_opt -> empty .)
    WHERE           reduce using rule 167 (interval_end_opt -> empty .)
    ON              reduce using rule 167 (interval_end_opt -> empty .)
    USING           reduce using rule 167 (interval_end_opt -> empty .)
    WHEN            reduce using rule 167 (interval_end_opt -> empty .)
    END             reduce using rule 167 (interval_end_opt -> empty .)
    ELSE            reduce using rule 167 (interval_end_opt -> empty .)


state 265

    (165) interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .

    RPAREN          reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    ASTERISK        reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    SLASH           reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    PERCENT         reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    CONCAT          reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    IS              reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    PLUS            reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    MINUS           reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    EQ              reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    NE              reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    LT              reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    LE              reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    GT              reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    GE              reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    NOT             reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    BETWEEN         reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    IN              reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    LIKE            reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    AS              reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    IDENTIFIER      reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    DIGIT_IDENTIFIER reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    QUOTED_IDENTIFIER reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    BACKQUOTED_IDENTIFIER reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    NON_RESERVED    reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    COMMA           reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    FROM            reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    INTERSECT       reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    UNION           reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    EXCEPT          reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    ORDER           reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    LIMIT           reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    $end            reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    AND             reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    OR              reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    ASC             reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    DESC            reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    NULLS           reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    THEN            reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    GROUP           reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    HAVING          reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    CROSS           reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    NATURAL         reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    INNER           reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    LEFT            reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    RIGHT           reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    FULL            reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    JOIN            reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    WHERE           reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    ON              reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    USING           reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    WHEN            reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    END             reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)
    ELSE            reduce using rule 165 (interval -> INTERVAL sign_opt STRING interval_field interval_end_opt .)


state 266

    (166) interval_end_opt -> TO . interval_field
    (168) interval_field -> . YEAR
    (169) interval_field -> . MONTH
    (170) interval_field -> . DAY
    (171) interval_field -> . HOUR
    (172) interval_field -> . MINUTE
    (173) interval_field -> . SECOND

    YEAR            shift and go to state 235
    MONTH           shift and go to state 234
    DAY             shift and go to state 233
    HOUR            shift and go to state 231
    MINUTE          shift and go to state 237
    SECOND          shift and go to state 232

    interval_field                 shift and go to state 283

state 267

    (74) outer_opt -> empty .

    JOIN            reduce using rule 74 (outer_opt -> empty .)


state 268

    (73) outer_opt -> OUTER .

    JOIN            reduce using rule 73 (outer_opt -> OUTER .)


state 269

    (70) join_type -> RIGHT outer_opt .

    JOIN            reduce using rule 70 (join_type -> RIGHT outer_opt .)


state 270

    (71) join_type -> FULL outer_opt .

    JOIN            reduce using rule 71 (join_type -> FULL outer_opt .)


state 271

    (66) qualified_join -> table_reference join_type JOIN . table_reference join_criteria
    (57) table_reference -> . table_primary
    (58) table_reference -> . join_relation
    (59) table_primary -> . aliased_relation
    (60) table_primary -> . derived_table
    (61) table_primary -> . LPAREN join_relation RPAREN
    (62) join_relation -> . cross_join
    (63) join_relation -> . qualified_join
    (64) join_relation -> . natural_join
    (79) aliased_relation -> . qualified_name alias_opt
    (80) derived_table -> . subquery alias
    (65) cross_join -> . table_reference CROSS JOIN aliased_relation
    (66) qualified_join -> . table_reference join_type JOIN table_reference join_criteria
    (67) natural_join -> . table_reference NATURAL join_type JOIN aliased_relation
    (183) qualified_name -> . qualified_name PERIOD identifier
    (184) qualified_name -> . identifier
    (2) subquery -> . LPAREN query RPAREN
    (185) identifier -> . IDENTIFIER
    (186) identifier -> . quoted_identifier
    (187) identifier -> . non_reserved
    (188) identifier -> . DIGIT_IDENTIFIER
    (190) quoted_identifier -> . QUOTED_IDENTIFIER
    (191) quoted_identifier -> . BACKQUOTED_IDENTIFIER
    (189) non_reserved -> . NON_RESERVED

    LPAREN          shift and go to state 216
    IDENTIFIER      shift and go to state 27
    DIGIT_IDENTIFIER shift and go to state 26
    QUOTED_IDENTIFIER shift and go to state 24
    BACKQUOTED_IDENTIFIER shift and go to state 31
    NON_RESERVED    shift and go to state 30

    join_relation                  shift and go to state 208
    table_reference                shift and go to state 284
    qualified_name                 shift and go to state 215
    qualified_join                 shift and go to state 210
    cross_join                     shift and go to state 214
    derived_table                  shift and go to state 211
    subquery                       shift and go to state 212
    natural_join                   shift and go to state 217
    aliased_relation               shift and go to state 218
    quoted_identifier              shift and go to state 25
    non_reserved                   shift and go to state 28
    table_primary                  shift and go to state 219
    identifier                     shift and go to state 32

state 272

    (69) join_type -> LEFT outer_opt .

    JOIN            reduce using rule 69 (join_type -> LEFT outer_opt .)


state 273

    (67) natural_join -> table_reference NATURAL join_type . JOIN aliased_relation

    JOIN            shift and go to state 285


state 274

    (65) cross_join -> table_reference CROSS JOIN . aliased_relation
    (79) aliased_relation -> . qualified_name alias_opt
    (183) qualified_name -> . qualified_name PERIOD identifier
    (184) qualified_name -> . identifier
    (185) identifier -> . IDENTIFIER
    (186) identifier -> . quoted_identifier
    (187) identifier -> . non_reserved
    (188) identifier -> . DIGIT_IDENTIFIER
    (190) quoted_identifier -> . QUOTED_IDENTIFIER
    (191) quoted_identifier -> . BACKQUOTED_IDENTIFIER
    (189) non_reserved -> . NON_RESERVED

    IDENTIFIER      shift and go to state 27
    DIGIT_IDENTIFIER shift and go to state 26
    QUOTED_IDENTIFIER shift and go to state 24
    BACKQUOTED_IDENTIFIER shift and go to state 31
    NON_RESERVED    shift and go to state 30

    aliased_relation               shift and go to state 286
    quoted_identifier              shift and go to state 25
    non_reserved                   shift and go to state 28
    qualified_name                 shift and go to state 215
    identifier                     shift and go to state 32

state 275

    (53) table_expression_opt -> FROM relations where_opt group_by_opt . having_opt
    (42) having_opt -> . HAVING search_condition
    (43) having_opt -> . empty
    (194) empty -> .

    HAVING          shift and go to state 289
    INTERSECT       reduce using rule 194 (empty -> .)
    UNION           reduce using rule 194 (empty -> .)
    EXCEPT          reduce using rule 194 (empty -> .)
    ORDER           reduce using rule 194 (empty -> .)
    LIMIT           reduce using rule 194 (empty -> .)
    $end            reduce using rule 194 (empty -> .)
    RPAREN          reduce using rule 194 (empty -> .)

    having_opt                     shift and go to state 287
    empty                          shift and go to state 288

state 276

    (39) group_by_opt -> empty .

    HAVING          reduce using rule 39 (group_by_opt -> empty .)
    INTERSECT       reduce using rule 39 (group_by_opt -> empty .)
    UNION           reduce using rule 39 (group_by_opt -> empty .)
    EXCEPT          reduce using rule 39 (group_by_opt -> empty .)
    ORDER           reduce using rule 39 (group_by_opt -> empty .)
    LIMIT           reduce using rule 39 (group_by_opt -> empty .)
    $end            reduce using rule 39 (group_by_opt -> empty .)
    RPAREN          reduce using rule 39 (group_by_opt -> empty .)


state 277

    (38) group_by_opt -> GROUP . BY grouping_elements

    BY              shift and go to state 290


state 278

    (36) where_opt -> WHERE search_condition .
    (86) search_condition -> search_condition . OR boolean_term

    GROUP           reduce using rule 36 (where_opt -> WHERE search_condition .)
    HAVING          reduce using rule 36 (where_opt -> WHERE search_condition .)
    INTERSECT       reduce using rule 36 (where_opt -> WHERE search_condition .)
    UNION           reduce using rule 36 (where_opt -> WHERE search_condition .)
    EXCEPT          reduce using rule 36 (where_opt -> WHERE search_condition .)
    ORDER           reduce using rule 36 (where_opt -> WHERE search_condition .)
    LIMIT           reduce using rule 36 (where_opt -> WHERE search_condition .)
    $end            reduce using rule 36 (where_opt -> WHERE search_condition .)
    RPAREN          reduce using rule 36 (where_opt -> WHERE search_condition .)
    OR              shift and go to state 64


state 279

    (55) relations -> relations COMMA table_reference .
    (65) cross_join -> table_reference . CROSS JOIN aliased_relation
    (66) qualified_join -> table_reference . join_type JOIN table_reference join_criteria
    (67) natural_join -> table_reference . NATURAL join_type JOIN aliased_relation
    (68) join_type -> . INNER
    (69) join_type -> . LEFT outer_opt
    (70) join_type -> . RIGHT outer_opt
    (71) join_type -> . FULL outer_opt
    (72) join_type -> . empty
    (194) empty -> .

    COMMA           reduce using rule 55 (relations -> relations COMMA table_reference .)
    WHERE           reduce using rule 55 (relations -> relations COMMA table_reference .)
    GROUP           reduce using rule 55 (relations -> relations COMMA table_reference .)
    HAVING          reduce using rule 55 (relations -> relations COMMA table_reference .)
    INTERSECT       reduce using rule 55 (relations -> relations COMMA table_reference .)
    UNION           reduce using rule 55 (relations -> relations COMMA table_reference .)
    EXCEPT          reduce using rule 55 (relations -> relations COMMA table_reference .)
    ORDER           reduce using rule 55 (relations -> relations COMMA table_reference .)
    LIMIT           reduce using rule 55 (relations -> relations COMMA table_reference .)
    $end            reduce using rule 55 (relations -> relations COMMA table_reference .)
    RPAREN          reduce using rule 55 (relations -> relations COMMA table_reference .)
    CROSS           shift and go to state 246
    NATURAL         shift and go to state 245
    INNER           shift and go to state 247
    LEFT            shift and go to state 244
    RIGHT           shift and go to state 240
    FULL            shift and go to state 242
    JOIN            reduce using rule 194 (empty -> .)

    empty                          shift and go to state 241
    join_type                      shift and go to state 243

state 280

    (61) table_primary -> LPAREN join_relation RPAREN .

    CROSS           reduce using rule 61 (table_primary -> LPAREN join_relation RPAREN .)
    NATURAL         reduce using rule 61 (table_primary -> LPAREN join_relation RPAREN .)
    INNER           reduce using rule 61 (table_primary -> LPAREN join_relation RPAREN .)
    LEFT            reduce using rule 61 (table_primary -> LPAREN join_relation RPAREN .)
    RIGHT           reduce using rule 61 (table_primary -> LPAREN join_relation RPAREN .)
    FULL            reduce using rule 61 (table_primary -> LPAREN join_relation RPAREN .)
    JOIN            reduce using rule 61 (table_primary -> LPAREN join_relation RPAREN .)
    COMMA           reduce using rule 61 (table_primary -> LPAREN join_relation RPAREN .)
    WHERE           reduce using rule 61 (table_primary -> LPAREN join_relation RPAREN .)
    GROUP           reduce using rule 61 (table_primary -> LPAREN join_relation RPAREN .)
    HAVING          reduce using rule 61 (table_primary -> LPAREN join_relation RPAREN .)
    INTERSECT       reduce using rule 61 (table_primary -> LPAREN join_relation RPAREN .)
    UNION           reduce using rule 61 (table_primary -> LPAREN join_relation RPAREN .)
    EXCEPT          reduce using rule 61 (table_primary -> LPAREN join_relation RPAREN .)
    ORDER           reduce using rule 61 (table_primary -> LPAREN join_relation RPAREN .)
    LIMIT           reduce using rule 61 (table_primary -> LPAREN join_relation RPAREN .)
    $end            reduce using rule 61 (table_primary -> LPAREN join_relation RPAREN .)
    RPAREN          reduce using rule 61 (table_primary -> LPAREN join_relation RPAREN .)
    ON              reduce using rule 61 (table_primary -> LPAREN join_relation RPAREN .)
    USING           reduce using rule 61 (table_primary -> LPAREN join_relation RPAREN .)


state 281

    (25) nonjoin_query_primary -> LPAREN . query_term RPAREN
    (61) table_primary -> LPAREN . join_relation RPAREN
    (2) subquery -> LPAREN . query RPAREN
    (19) query_term -> . query_term_intersect
    (20) query_term -> . query_term UNION set_quantifier_opt query_term_intersect
    (21) query_term -> . query_term EXCEPT set_quantifier_opt query_term_intersect
    (62) join_relation -> . cross_join
    (63) join_relation -> . qualified_join
    (64) join_relation -> . natural_join
    (3) query -> . query_no_with
    (22) query_term_intersect -> . nonjoin_query_primary
    (23) query_term_intersect -> . query_term_intersect INTERSECT set_quantifier_opt nonjoin_query_primary
    (65) cross_join -> . table_reference CROSS JOIN aliased_relation
    (66) qualified_join -> . table_reference join_type JOIN table_reference join_criteria
    (67) natural_join -> . table_reference NATURAL join_type JOIN aliased_relation
    (4) query_no_with -> . query_term order_by_opt limit_opt
    (24) nonjoin_query_primary -> . simple_table
    (25) nonjoin_query_primary -> . LPAREN query_term RPAREN
    (57) table_reference -> . table_primary
    (58) table_reference -> . join_relation
    (26) simple_table -> . query_specification
    (27) simple_table -> . explicit_table
    (28) simple_table -> . table_value_constructor
    (59) table_primary -> . aliased_relation
    (60) table_primary -> . derived_table
    (61) table_primary -> . LPAREN join_relation RPAREN
    (33) query_specification -> . SELECT set_quantifier_opt adql_top_opt select_items table_expression_opt
    (29) explicit_table -> . TABLE qualified_name
    (30) table_value_constructor -> . VALUES values_list
    (79) aliased_relation -> . qualified_name alias_opt
    (80) derived_table -> . subquery alias
    (183) qualified_name -> . qualified_name PERIOD identifier
    (184) qualified_name -> . identifier
    (2) subquery -> . LPAREN query RPAREN
    (185) identifier -> . IDENTIFIER
    (186) identifier -> . quoted_identifier
    (187) identifier -> . non_reserved
    (188) identifier -> . DIGIT_IDENTIFIER
    (190) quoted_identifier -> . QUOTED_IDENTIFIER
    (191) quoted_identifier -> . BACKQUOTED_IDENTIFIER
    (189) non_reserved -> . NON_RESERVED

    LPAREN          shift and go to state 281
    SELECT          shift and go to state 13
    TABLE           shift and go to state 10
    VALUES          shift and go to state 3
    IDENTIFIER      shift and go to state 27
    DIGIT_IDENTIFIER shift and go to state 26
    QUOTED_IDENTIFIER shift and go to state 24
    BACKQUOTED_IDENTIFIER shift and go to state 31
    NON_RESERVED    shift and go to state 30

    join_relation                  shift and go to state 256
    table_reference                shift and go to state 255
    subquery                       shift and go to state 212
    qualified_join                 shift and go to state 210
    simple_table                   shift and go to state 2
    derived_table                  shift and go to state 211
    query_no_with                  shift and go to state 9
    query_term_intersect           shift and go to state 1
    quoted_identifier              shift and go to state 25
    explicit_table                 shift and go to state 4
    query_specification            shift and go to state 5
    nonjoin_query_primary          shift and go to state 6
    identifier                     shift and go to state 32
    query                          shift and go to state 163
    cross_join                     shift and go to state 214
    non_reserved                   shift and go to state 28
    qualified_name                 shift and go to state 215
    query_term                     shift and go to state 201
    natural_join                   shift and go to state 217
    aliased_relation               shift and go to state 218
    table_value_constructor        shift and go to state 14
    table_primary                  shift and go to state 219

state 282

    (105) in_expressions -> in_expressions COMMA value_expression .
    (109) value_expression -> value_expression . PLUS term
    (110) value_expression -> value_expression . MINUS term

    RPAREN          reduce using rule 105 (in_expressions -> in_expressions COMMA value_expression .)
    COMMA           reduce using rule 105 (in_expressions -> in_expressions COMMA value_expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83


state 283

    (166) interval_end_opt -> TO interval_field .

    ASTERISK        reduce using rule 166 (interval_end_opt -> TO interval_field .)
    SLASH           reduce using rule 166 (interval_end_opt -> TO interval_field .)
    PERCENT         reduce using rule 166 (interval_end_opt -> TO interval_field .)
    CONCAT          reduce using rule 166 (interval_end_opt -> TO interval_field .)
    IS              reduce using rule 166 (interval_end_opt -> TO interval_field .)
    PLUS            reduce using rule 166 (interval_end_opt -> TO interval_field .)
    MINUS           reduce using rule 166 (interval_end_opt -> TO interval_field .)
    EQ              reduce using rule 166 (interval_end_opt -> TO interval_field .)
    NE              reduce using rule 166 (interval_end_opt -> TO interval_field .)
    LT              reduce using rule 166 (interval_end_opt -> TO interval_field .)
    LE              reduce using rule 166 (interval_end_opt -> TO interval_field .)
    GT              reduce using rule 166 (interval_end_opt -> TO interval_field .)
    GE              reduce using rule 166 (interval_end_opt -> TO interval_field .)
    NOT             reduce using rule 166 (interval_end_opt -> TO interval_field .)
    BETWEEN         reduce using rule 166 (interval_end_opt -> TO interval_field .)
    IN              reduce using rule 166 (interval_end_opt -> TO interval_field .)
    LIKE            reduce using rule 166 (interval_end_opt -> TO interval_field .)
    AS              reduce using rule 166 (interval_end_opt -> TO interval_field .)
    IDENTIFIER      reduce using rule 166 (interval_end_opt -> TO interval_field .)
    DIGIT_IDENTIFIER reduce using rule 166 (interval_end_opt -> TO interval_field .)
    QUOTED_IDENTIFIER reduce using rule 166 (interval_end_opt -> TO interval_field .)
    BACKQUOTED_IDENTIFIER reduce using rule 166 (interval_end_opt -> TO interval_field .)
    NON_RESERVED    reduce using rule 166 (interval_end_opt -> TO interval_field .)
    COMMA           reduce using rule 166 (interval_end_opt -> TO interval_field .)
    FROM            reduce using rule 166 (interval_end_opt -> TO interval_field .)
    INTERSECT       reduce using rule 166 (interval_end_opt -> TO interval_field .)
    UNION           reduce using rule 166 (interval_end_opt -> TO interval_field .)
    EXCEPT          reduce using rule 166 (interval_end_opt -> TO interval_field .)
    ORDER           reduce using rule 166 (interval_end_opt -> TO interval_field .)
    LIMIT           reduce using rule 166 (interval_end_opt -> TO interval_field .)
    $end            reduce using rule 166 (interval_end_opt -> TO interval_field .)
    RPAREN          reduce using rule 166 (interval_end_opt -> TO interval_field .)
    AND             reduce using rule 166 (interval_end_opt -> TO interval_field .)
    OR              reduce using rule 166 (interval_end_opt -> TO interval_field .)
    ASC             reduce using rule 166 (interval_end_opt -> TO interval_field .)
    DESC            reduce using rule 166 (interval_end_opt -> TO interval_field .)
    NULLS           reduce using rule 166 (interval_end_opt -> TO interval_field .)
    THEN            reduce using rule 166 (interval_end_opt -> TO interval_field .)
    GROUP           reduce using rule 166 (interval_end_opt -> TO interval_field .)
    HAVING          reduce using rule 166 (interval_end_opt -> TO interval_field .)
    CROSS           reduce using rule 166 (interval_end_opt -> TO interval_field .)
    NATURAL         reduce using rule 166 (interval_end_opt -> TO interval_field .)
    INNER           reduce using rule 166 (interval_end_opt -> TO interval_field .)
    LEFT            reduce using rule 166 (interval_end_opt -> TO interval_field .)
    RIGHT           reduce using rule 166 (interval_end_opt -> TO interval_field .)
    FULL            reduce using rule 166 (interval_end_opt -> TO interval_field .)
    JOIN            reduce using rule 166 (interval_end_opt -> TO interval_field .)
    WHERE           reduce using rule 166 (interval_end_opt -> TO interval_field .)
    ON              reduce using rule 166 (interval_end_opt -> TO interval_field .)
    USING           reduce using rule 166 (interval_end_opt -> TO interval_field .)
    WHEN            reduce using rule 166 (interval_end_opt -> TO interval_field .)
    END             reduce using rule 166 (interval_end_opt -> TO interval_field .)
    ELSE            reduce using rule 166 (interval_end_opt -> TO interval_field .)


state 284

    (66) qualified_join -> table_reference join_type JOIN table_reference . join_criteria
    (65) cross_join -> table_reference . CROSS JOIN aliased_relation
    (66) qualified_join -> table_reference . join_type JOIN table_reference join_criteria
    (67) natural_join -> table_reference . NATURAL join_type JOIN aliased_relation
    (75) join_criteria -> . ON search_condition
    (76) join_criteria -> . USING LPAREN join_columns RPAREN
    (68) join_type -> . INNER
    (69) join_type -> . LEFT outer_opt
    (70) join_type -> . RIGHT outer_opt
    (71) join_type -> . FULL outer_opt
    (72) join_type -> . empty
    (194) empty -> .

    CROSS           shift and go to state 246
    NATURAL         shift and go to state 245
    ON              shift and go to state 291
    USING           shift and go to state 293
    INNER           shift and go to state 247
    LEFT            shift and go to state 244
    RIGHT           shift and go to state 240
    FULL            shift and go to state 242
    JOIN            reduce using rule 194 (empty -> .)

    join_type                      shift and go to state 243
    empty                          shift and go to state 241
    join_criteria                  shift and go to state 292

state 285

    (67) natural_join -> table_reference NATURAL join_type JOIN . aliased_relation
    (79) aliased_relation -> . qualified_name alias_opt
    (183) qualified_name -> . qualified_name PERIOD identifier
    (184) qualified_name -> . identifier
    (185) identifier -> . IDENTIFIER
    (186) identifier -> . quoted_identifier
    (187) identifier -> . non_reserved
    (188) identifier -> . DIGIT_IDENTIFIER
    (190) quoted_identifier -> . QUOTED_IDENTIFIER
    (191) quoted_identifier -> . BACKQUOTED_IDENTIFIER
    (189) non_reserved -> . NON_RESERVED

    IDENTIFIER      shift and go to state 27
    DIGIT_IDENTIFIER shift and go to state 26
    QUOTED_IDENTIFIER shift and go to state 24
    BACKQUOTED_IDENTIFIER shift and go to state 31
    NON_RESERVED    shift and go to state 30

    aliased_relation               shift and go to state 294
    quoted_identifier              shift and go to state 25
    non_reserved                   shift and go to state 28
    qualified_name                 shift and go to state 215
    identifier                     shift and go to state 32

state 286

    (65) cross_join -> table_reference CROSS JOIN aliased_relation .

    RPAREN          reduce using rule 65 (cross_join -> table_reference CROSS JOIN aliased_relation .)
    CROSS           reduce using rule 65 (cross_join -> table_reference CROSS JOIN aliased_relation .)
    NATURAL         reduce using rule 65 (cross_join -> table_reference CROSS JOIN aliased_relation .)
    INNER           reduce using rule 65 (cross_join -> table_reference CROSS JOIN aliased_relation .)
    LEFT            reduce using rule 65 (cross_join -> table_reference CROSS JOIN aliased_relation .)
    RIGHT           reduce using rule 65 (cross_join -> table_reference CROSS JOIN aliased_relation .)
    FULL            reduce using rule 65 (cross_join -> table_reference CROSS JOIN aliased_relation .)
    JOIN            reduce using rule 65 (cross_join -> table_reference CROSS JOIN aliased_relation .)
    COMMA           reduce using rule 65 (cross_join -> table_reference CROSS JOIN aliased_relation .)
    WHERE           reduce using rule 65 (cross_join -> table_reference CROSS JOIN aliased_relation .)
    GROUP           reduce using rule 65 (cross_join -> table_reference CROSS JOIN aliased_relation .)
    HAVING          reduce using rule 65 (cross_join -> table_reference CROSS JOIN aliased_relation .)
    INTERSECT       reduce using rule 65 (cross_join -> table_reference CROSS JOIN aliased_relation .)
    UNION           reduce using rule 65 (cross_join -> table_reference CROSS JOIN aliased_relation .)
    EXCEPT          reduce using rule 65 (cross_join -> table_reference CROSS JOIN aliased_relation .)
    ORDER           reduce using rule 65 (cross_join -> table_reference CROSS JOIN aliased_relation .)
    LIMIT           reduce using rule 65 (cross_join -> table_reference CROSS JOIN aliased_relation .)
    $end            reduce using rule 65 (cross_join -> table_reference CROSS JOIN aliased_relation .)
    ON              reduce using rule 65 (cross_join -> table_reference CROSS JOIN aliased_relation .)
    USING           reduce using rule 65 (cross_join -> table_reference CROSS JOIN aliased_relation .)


state 287

    (53) table_expression_opt -> FROM relations where_opt group_by_opt having_opt .

    INTERSECT       reduce using rule 53 (table_expression_opt -> FROM relations where_opt group_by_opt having_opt .)
    UNION           reduce using rule 53 (table_expression_opt -> FROM relations where_opt group_by_opt having_opt .)
    EXCEPT          reduce using rule 53 (table_expression_opt -> FROM relations where_opt group_by_opt having_opt .)
    ORDER           reduce using rule 53 (table_expression_opt -> FROM relations where_opt group_by_opt having_opt .)
    LIMIT           reduce using rule 53 (table_expression_opt -> FROM relations where_opt group_by_opt having_opt .)
    $end            reduce using rule 53 (table_expression_opt -> FROM relations where_opt group_by_opt having_opt .)
    RPAREN          reduce using rule 53 (table_expression_opt -> FROM relations where_opt group_by_opt having_opt .)


state 288

    (43) having_opt -> empty .

    INTERSECT       reduce using rule 43 (having_opt -> empty .)
    UNION           reduce using rule 43 (having_opt -> empty .)
    EXCEPT          reduce using rule 43 (having_opt -> empty .)
    ORDER           reduce using rule 43 (having_opt -> empty .)
    LIMIT           reduce using rule 43 (having_opt -> empty .)
    $end            reduce using rule 43 (having_opt -> empty .)
    RPAREN          reduce using rule 43 (having_opt -> empty .)


state 289

    (42) having_opt -> HAVING . search_condition
    (85) search_condition -> . boolean_term
    (86) search_condition -> . search_condition OR boolean_term
    (87) boolean_term -> . boolean_factor
    (88) boolean_term -> . boolean_term AND boolean_factor
    (89) boolean_factor -> . not_opt boolean_test
    (161) not_opt -> . NOT
    (162) not_opt -> . empty
    (194) empty -> .

    NOT             shift and go to state 18
    RPAREN          reduce using rule 194 (empty -> .)
    EXISTS          reduce using rule 194 (empty -> .)
    PLUS            reduce using rule 194 (empty -> .)
    MINUS           reduce using rule 194 (empty -> .)
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    search_condition               shift and go to state 295
    boolean_factor                 shift and go to state 16
    empty                          shift and go to state 17
    not_opt                        shift and go to state 19
    boolean_term                   shift and go to state 23

state 290

    (38) group_by_opt -> GROUP BY . grouping_elements
    (40) grouping_elements -> . qualified_name
    (41) grouping_elements -> . grouping_elements COMMA qualified_name
    (183) qualified_name -> . qualified_name PERIOD identifier
    (184) qualified_name -> . identifier
    (185) identifier -> . IDENTIFIER
    (186) identifier -> . quoted_identifier
    (187) identifier -> . non_reserved
    (188) identifier -> . DIGIT_IDENTIFIER
    (190) quoted_identifier -> . QUOTED_IDENTIFIER
    (191) quoted_identifier -> . BACKQUOTED_IDENTIFIER
    (189) non_reserved -> . NON_RESERVED

    IDENTIFIER      shift and go to state 27
    DIGIT_IDENTIFIER shift and go to state 26
    QUOTED_IDENTIFIER shift and go to state 24
    BACKQUOTED_IDENTIFIER shift and go to state 31
    NON_RESERVED    shift and go to state 30

    qualified_name                 shift and go to state 297
    grouping_elements              shift and go to state 296
    quoted_identifier              shift and go to state 25
    identifier                     shift and go to state 32
    non_reserved                   shift and go to state 28

state 291

    (75) join_criteria -> ON . search_condition
    (85) search_condition -> . boolean_term
    (86) search_condition -> . search_condition OR boolean_term
    (87) boolean_term -> . boolean_factor
    (88) boolean_term -> . boolean_term AND boolean_factor
    (89) boolean_factor -> . not_opt boolean_test
    (161) not_opt -> . NOT
    (162) not_opt -> . empty
    (194) empty -> .

    NOT             shift and go to state 18
    RPAREN          reduce using rule 194 (empty -> .)
    EXISTS          reduce using rule 194 (empty -> .)
    PLUS            reduce using rule 194 (empty -> .)
    MINUS           reduce using rule 194 (empty -> .)
    LPAREN          reduce using rule 194 (empty -> .)
    NULL            reduce using rule 194 (empty -> .)
    STRING          reduce using rule 194 (empty -> .)
    DECIMAL         reduce using rule 194 (empty -> .)
    INTEGER         reduce using rule 194 (empty -> .)
    TRUE            reduce using rule 194 (empty -> .)
    FALSE           reduce using rule 194 (empty -> .)
    INTERVAL        reduce using rule 194 (empty -> .)
    IDENTIFIER      reduce using rule 194 (empty -> .)
    DIGIT_IDENTIFIER reduce using rule 194 (empty -> .)
    CURRENT_DATE    reduce using rule 194 (empty -> .)
    CURRENT_TIME    reduce using rule 194 (empty -> .)
    CURRENT_TIMESTAMP reduce using rule 194 (empty -> .)
    LOCALTIME       reduce using rule 194 (empty -> .)
    LOCALTIMESTAMP  reduce using rule 194 (empty -> .)
    QUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    BACKQUOTED_IDENTIFIER reduce using rule 194 (empty -> .)
    NON_RESERVED    reduce using rule 194 (empty -> .)
    CASE            reduce using rule 194 (empty -> .)

    search_condition               shift and go to state 298
    boolean_factor                 shift and go to state 16
    empty                          shift and go to state 17
    not_opt                        shift and go to state 19
    boolean_term                   shift and go to state 23

state 292

    (66) qualified_join -> table_reference join_type JOIN table_reference join_criteria .

    RPAREN          reduce using rule 66 (qualified_join -> table_reference join_type JOIN table_reference join_criteria .)
    CROSS           reduce using rule 66 (qualified_join -> table_reference join_type JOIN table_reference join_criteria .)
    NATURAL         reduce using rule 66 (qualified_join -> table_reference join_type JOIN table_reference join_criteria .)
    INNER           reduce using rule 66 (qualified_join -> table_reference join_type JOIN table_reference join_criteria .)
    LEFT            reduce using rule 66 (qualified_join -> table_reference join_type JOIN table_reference join_criteria .)
    RIGHT           reduce using rule 66 (qualified_join -> table_reference join_type JOIN table_reference join_criteria .)
    FULL            reduce using rule 66 (qualified_join -> table_reference join_type JOIN table_reference join_criteria .)
    JOIN            reduce using rule 66 (qualified_join -> table_reference join_type JOIN table_reference join_criteria .)
    ON              reduce using rule 66 (qualified_join -> table_reference join_type JOIN table_reference join_criteria .)
    USING           reduce using rule 66 (qualified_join -> table_reference join_type JOIN table_reference join_criteria .)
    COMMA           reduce using rule 66 (qualified_join -> table_reference join_type JOIN table_reference join_criteria .)
    WHERE           reduce using rule 66 (qualified_join -> table_reference join_type JOIN table_reference join_criteria .)
    GROUP           reduce using rule 66 (qualified_join -> table_reference join_type JOIN table_reference join_criteria .)
    HAVING          reduce using rule 66 (qualified_join -> table_reference join_type JOIN table_reference join_criteria .)
    INTERSECT       reduce using rule 66 (qualified_join -> table_reference join_type JOIN table_reference join_criteria .)
    UNION           reduce using rule 66 (qualified_join -> table_reference join_type JOIN table_reference join_criteria .)
    EXCEPT          reduce using rule 66 (qualified_join -> table_reference join_type JOIN table_reference join_criteria .)
    ORDER           reduce using rule 66 (qualified_join -> table_reference join_type JOIN table_reference join_criteria .)
    LIMIT           reduce using rule 66 (qualified_join -> table_reference join_type JOIN table_reference join_criteria .)
    $end            reduce using rule 66 (qualified_join -> table_reference join_type JOIN table_reference join_criteria .)


state 293

    (76) join_criteria -> USING . LPAREN join_columns RPAREN

    LPAREN          shift and go to state 299


state 294

    (67) natural_join -> table_reference NATURAL join_type JOIN aliased_relation .

    CROSS           reduce using rule 67 (natural_join -> table_reference NATURAL join_type JOIN aliased_relation .)
    NATURAL         reduce using rule 67 (natural_join -> table_reference NATURAL join_type JOIN aliased_relation .)
    INNER           reduce using rule 67 (natural_join -> table_reference NATURAL join_type JOIN aliased_relation .)
    LEFT            reduce using rule 67 (natural_join -> table_reference NATURAL join_type JOIN aliased_relation .)
    RIGHT           reduce using rule 67 (natural_join -> table_reference NATURAL join_type JOIN aliased_relation .)
    FULL            reduce using rule 67 (natural_join -> table_reference NATURAL join_type JOIN aliased_relation .)
    JOIN            reduce using rule 67 (natural_join -> table_reference NATURAL join_type JOIN aliased_relation .)
    COMMA           reduce using rule 67 (natural_join -> table_reference NATURAL join_type JOIN aliased_relation .)
    WHERE           reduce using rule 67 (natural_join -> table_reference NATURAL join_type JOIN aliased_relation .)
    GROUP           reduce using rule 67 (natural_join -> table_reference NATURAL join_type JOIN aliased_relation .)
    HAVING          reduce using rule 67 (natural_join -> table_reference NATURAL join_type JOIN aliased_relation .)
    INTERSECT       reduce using rule 67 (natural_join -> table_reference NATURAL join_type JOIN aliased_relation .)
    UNION           reduce using rule 67 (natural_join -> table_reference NATURAL join_type JOIN aliased_relation .)
    EXCEPT          reduce using rule 67 (natural_join -> table_reference NATURAL join_type JOIN aliased_relation .)
    ORDER           reduce using rule 67 (natural_join -> table_reference NATURAL join_type JOIN aliased_relation .)
    LIMIT           reduce using rule 67 (natural_join -> table_reference NATURAL join_type JOIN aliased_relation .)
    $end            reduce using rule 67 (natural_join -> table_reference NATURAL join_type JOIN aliased_relation .)
    RPAREN          reduce using rule 67 (natural_join -> table_reference NATURAL join_type JOIN aliased_relation .)
    ON              reduce using rule 67 (natural_join -> table_reference NATURAL join_type JOIN aliased_relation .)
    USING           reduce using rule 67 (natural_join -> table_reference NATURAL join_type JOIN aliased_relation .)


state 295

    (42) having_opt -> HAVING search_condition .
    (86) search_condition -> search_condition . OR boolean_term

    INTERSECT       reduce using rule 42 (having_opt -> HAVING search_condition .)
    UNION           reduce using rule 42 (having_opt -> HAVING search_condition .)
    EXCEPT          reduce using rule 42 (having_opt -> HAVING search_condition .)
    ORDER           reduce using rule 42 (having_opt -> HAVING search_condition .)
    LIMIT           reduce using rule 42 (having_opt -> HAVING search_condition .)
    $end            reduce using rule 42 (having_opt -> HAVING search_condition .)
    RPAREN          reduce using rule 42 (having_opt -> HAVING search_condition .)
    OR              shift and go to state 64


state 296

    (38) group_by_opt -> GROUP BY grouping_elements .
    (41) grouping_elements -> grouping_elements . COMMA qualified_name

    HAVING          reduce using rule 38 (group_by_opt -> GROUP BY grouping_elements .)
    INTERSECT       reduce using rule 38 (group_by_opt -> GROUP BY grouping_elements .)
    UNION           reduce using rule 38 (group_by_opt -> GROUP BY grouping_elements .)
    EXCEPT          reduce using rule 38 (group_by_opt -> GROUP BY grouping_elements .)
    ORDER           reduce using rule 38 (group_by_opt -> GROUP BY grouping_elements .)
    LIMIT           reduce using rule 38 (group_by_opt -> GROUP BY grouping_elements .)
    $end            reduce using rule 38 (group_by_opt -> GROUP BY grouping_elements .)
    RPAREN          reduce using rule 38 (group_by_opt -> GROUP BY grouping_elements .)
    COMMA           shift and go to state 300


state 297

    (40) grouping_elements -> qualified_name .
    (183) qualified_name -> qualified_name . PERIOD identifier

    COMMA           reduce using rule 40 (grouping_elements -> qualified_name .)
    HAVING          reduce using rule 40 (grouping_elements -> qualified_name .)
    INTERSECT       reduce using rule 40 (grouping_elements -> qualified_name .)
    UNION           reduce using rule 40 (grouping_elements -> qualified_name .)
    EXCEPT          reduce using rule 40 (grouping_elements -> qualified_name .)
    ORDER           reduce using rule 40 (grouping_elements -> qualified_name .)
    LIMIT           reduce using rule 40 (grouping_elements -> qualified_name .)
    $end            reduce using rule 40 (grouping_elements -> qualified_name .)
    RPAREN          reduce using rule 40 (grouping_elements -> qualified_name .)
    PERIOD          shift and go to state 67


state 298

    (75) join_criteria -> ON search_condition .
    (86) search_condition -> search_condition . OR boolean_term

    CROSS           reduce using rule 75 (join_criteria -> ON search_condition .)
    NATURAL         reduce using rule 75 (join_criteria -> ON search_condition .)
    INNER           reduce using rule 75 (join_criteria -> ON search_condition .)
    LEFT            reduce using rule 75 (join_criteria -> ON search_condition .)
    RIGHT           reduce using rule 75 (join_criteria -> ON search_condition .)
    FULL            reduce using rule 75 (join_criteria -> ON search_condition .)
    JOIN            reduce using rule 75 (join_criteria -> ON search_condition .)
    COMMA           reduce using rule 75 (join_criteria -> ON search_condition .)
    WHERE           reduce using rule 75 (join_criteria -> ON search_condition .)
    GROUP           reduce using rule 75 (join_criteria -> ON search_condition .)
    HAVING          reduce using rule 75 (join_criteria -> ON search_condition .)
    INTERSECT       reduce using rule 75 (join_criteria -> ON search_condition .)
    UNION           reduce using rule 75 (join_criteria -> ON search_condition .)
    EXCEPT          reduce using rule 75 (join_criteria -> ON search_condition .)
    ORDER           reduce using rule 75 (join_criteria -> ON search_condition .)
    LIMIT           reduce using rule 75 (join_criteria -> ON search_condition .)
    $end            reduce using rule 75 (join_criteria -> ON search_condition .)
    RPAREN          reduce using rule 75 (join_criteria -> ON search_condition .)
    ON              reduce using rule 75 (join_criteria -> ON search_condition .)
    USING           reduce using rule 75 (join_criteria -> ON search_condition .)
    OR              shift and go to state 64


state 299

    (76) join_criteria -> USING LPAREN . join_columns RPAREN
    (77) join_columns -> . identifier
    (78) join_columns -> . join_columns COMMA identifier
    (185) identifier -> . IDENTIFIER
    (186) identifier -> . quoted_identifier
    (187) identifier -> . non_reserved
    (188) identifier -> . DIGIT_IDENTIFIER
    (190) quoted_identifier -> . QUOTED_IDENTIFIER
    (191) quoted_identifier -> . BACKQUOTED_IDENTIFIER
    (189) non_reserved -> . NON_RESERVED

    IDENTIFIER      shift and go to state 27
    DIGIT_IDENTIFIER shift and go to state 26
    QUOTED_IDENTIFIER shift and go to state 24
    BACKQUOTED_IDENTIFIER shift and go to state 31
    NON_RESERVED    shift and go to state 30

    non_reserved                   shift and go to state 28
    quoted_identifier              shift and go to state 25
    identifier                     shift and go to state 302
    join_columns                   shift and go to state 301

state 300

    (41) grouping_elements -> grouping_elements COMMA . qualified_name
    (183) qualified_name -> . qualified_name PERIOD identifier
    (184) qualified_name -> . identifier
    (185) identifier -> . IDENTIFIER
    (186) identifier -> . quoted_identifier
    (187) identifier -> . non_reserved
    (188) identifier -> . DIGIT_IDENTIFIER
    (190) quoted_identifier -> . QUOTED_IDENTIFIER
    (191) quoted_identifier -> . BACKQUOTED_IDENTIFIER
    (189) non_reserved -> . NON_RESERVED

    IDENTIFIER      shift and go to state 27
    DIGIT_IDENTIFIER shift and go to state 26
    QUOTED_IDENTIFIER shift and go to state 24
    BACKQUOTED_IDENTIFIER shift and go to state 31
    NON_RESERVED    shift and go to state 30

    qualified_name                 shift and go to state 303
    quoted_identifier              shift and go to state 25
    identifier                     shift and go to state 32
    non_reserved                   shift and go to state 28

state 301

    (76) join_criteria -> USING LPAREN join_columns . RPAREN
    (78) join_columns -> join_columns . COMMA identifier

    RPAREN          shift and go to state 304
    COMMA           shift and go to state 305


state 302

    (77) join_columns -> identifier .

    RPAREN          reduce using rule 77 (join_columns -> identifier .)
    COMMA           reduce using rule 77 (join_columns -> identifier .)


state 303

    (41) grouping_elements -> grouping_elements COMMA qualified_name .
    (183) qualified_name -> qualified_name . PERIOD identifier

    COMMA           reduce using rule 41 (grouping_elements -> grouping_elements COMMA qualified_name .)
    HAVING          reduce using rule 41 (grouping_elements -> grouping_elements COMMA qualified_name .)
    INTERSECT       reduce using rule 41 (grouping_elements -> grouping_elements COMMA qualified_name .)
    UNION           reduce using rule 41 (grouping_elements -> grouping_elements COMMA qualified_name .)
    EXCEPT          reduce using rule 41 (grouping_elements -> grouping_elements COMMA qualified_name .)
    ORDER           reduce using rule 41 (grouping_elements -> grouping_elements COMMA qualified_name .)
    LIMIT           reduce using rule 41 (grouping_elements -> grouping_elements COMMA qualified_name .)
    $end            reduce using rule 41 (grouping_elements -> grouping_elements COMMA qualified_name .)
    RPAREN          reduce using rule 41 (grouping_elements -> grouping_elements COMMA qualified_name .)
    PERIOD          shift and go to state 67


state 304

    (76) join_criteria -> USING LPAREN join_columns RPAREN .

    CROSS           reduce using rule 76 (join_criteria -> USING LPAREN join_columns RPAREN .)
    NATURAL         reduce using rule 76 (join_criteria -> USING LPAREN join_columns RPAREN .)
    INNER           reduce using rule 76 (join_criteria -> USING LPAREN join_columns RPAREN .)
    LEFT            reduce using rule 76 (join_criteria -> USING LPAREN join_columns RPAREN .)
    RIGHT           reduce using rule 76 (join_criteria -> USING LPAREN join_columns RPAREN .)
    FULL            reduce using rule 76 (join_criteria -> USING LPAREN join_columns RPAREN .)
    JOIN            reduce using rule 76 (join_criteria -> USING LPAREN join_columns RPAREN .)
    COMMA           reduce using rule 76 (join_criteria -> USING LPAREN join_columns RPAREN .)
    WHERE           reduce using rule 76 (join_criteria -> USING LPAREN join_columns RPAREN .)
    GROUP           reduce using rule 76 (join_criteria -> USING LPAREN join_columns RPAREN .)
    HAVING          reduce using rule 76 (join_criteria -> USING LPAREN join_columns RPAREN .)
    INTERSECT       reduce using rule 76 (join_criteria -> USING LPAREN join_columns RPAREN .)
    UNION           reduce using rule 76 (join_criteria -> USING LPAREN join_columns RPAREN .)
    EXCEPT          reduce using rule 76 (join_criteria -> USING LPAREN join_columns RPAREN .)
    ORDER           reduce using rule 76 (join_criteria -> USING LPAREN join_columns RPAREN .)
    LIMIT           reduce using rule 76 (join_criteria -> USING LPAREN join_columns RPAREN .)
    $end            reduce using rule 76 (join_criteria -> USING LPAREN join_columns RPAREN .)
    RPAREN          reduce using rule 76 (join_criteria -> USING LPAREN join_columns RPAREN .)
    ON              reduce using rule 76 (join_criteria -> USING LPAREN join_columns RPAREN .)
    USING           reduce using rule 76 (join_criteria -> USING LPAREN join_columns RPAREN .)


state 305

    (78) join_columns -> join_columns COMMA . identifier
    (185) identifier -> . IDENTIFIER
    (186) identifier -> . quoted_identifier
    (187) identifier -> . non_reserved
    (188) identifier -> . DIGIT_IDENTIFIER
    (190) quoted_identifier -> . QUOTED_IDENTIFIER
    (191) quoted_identifier -> . BACKQUOTED_IDENTIFIER
    (189) non_reserved -> . NON_RESERVED

    IDENTIFIER      shift and go to state 27
    DIGIT_IDENTIFIER shift and go to state 26
    QUOTED_IDENTIFIER shift and go to state 24
    BACKQUOTED_IDENTIFIER shift and go to state 31
    NON_RESERVED    shift and go to state 30

    non_reserved                   shift and go to state 28
    quoted_identifier              shift and go to state 25
    identifier                     shift and go to state 306

state 306

    (78) join_columns -> join_columns COMMA identifier .

    RPAREN          reduce using rule 78 (join_columns -> join_columns COMMA identifier .)
    COMMA           reduce using rule 78 (join_columns -> join_columns COMMA identifier .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 201 resolved as shift
